<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kumpulan Artikel Riza Fahmi</title>
  <subtitle>Berikut adalah kumpulan tulisan Riza Fahmi</subtitle>
  <link href="https://rizafahmi.com/feed.xml" rel="self"/>
  <link href="https://rizafahmi.com/"/>
  <updated>2021-08-04T14:51:26Z</updated>
  <id>https://rizafahmi.com/</id>
  <author>
    <name>Riza Fahmi</name>
    <email>rizafahmi@gmail.com</email>
  </author>
  
  <entry>
    <title>Refleksi 2020</title>
    <link href="https://rizafahmi.com/2020/12/19/refleksi-2020/"/>
    <updated>2021-08-04T14:10:26Z</updated>
    <id>https://rizafahmi.com/2020/12/19/refleksi-2020/</id>
    <content type="html">&lt;p&gt;Sebentar lagi 2020 akan segera berakhir. Mari review apa yang terjadi sepanjang 2020 di kehidupan profesional saya. Saya sarankan teman-teman juga melakukan hal yang sama agar mendapat &lt;em&gt;insight&lt;/em&gt; menuju tahun yang akan datang.&lt;/p&gt;
&lt;h2&gt;Covid-19&lt;/h2&gt;
&lt;p&gt;2020 identik dengan Covid-19 atau virus Corona pastinya. Apa dampaknya terhadap hidup saya? Semuanya! Saya memang ada wacana ingin bekerja dari rumah, apalagi peran yang saya emban di &lt;a href=&quot;https://hacktiv8.com/&quot;&gt;HACKTIV8&lt;/a&gt; dua tahun terakhir lebih banyak berpergian keluar kota. Tapi &lt;em&gt;ngga gini juga&lt;/em&gt; :) Untuk bekerja dirumah butuh persiapan matang sebelum dieksekusi. Butuh ruangan tersendiri, koneksi yang mumpuni dan banyak lagi tentunya.&lt;/p&gt;
&lt;p&gt;Ketika PSBB diterapkan di Jakarta saya sedang melakukan &lt;em&gt;in-house training&lt;/em&gt;. Terpaksa tetap mengisi disaat awal dengan protokol kesehatan tentunya, namun akhirnya dua sesi terakhir dilakukan dirumah.&lt;/p&gt;
&lt;p&gt;Dampak bagi &lt;a href=&quot;https://hacktiv8.com/&quot;&gt;HACKTIV8&lt;/a&gt; secara umum? Luar biasa! Untuk &lt;em&gt;coding bootcamp&lt;/em&gt; yang awalnya dilakukan secara offline terpaksa harus &lt;em&gt;pivot&lt;/em&gt; menjadi online. Apalagi beberapa kampus tambahan sudah disiapkan. Diawal pandemi, peminat yang ingin ikut &lt;em&gt;coding bootcamp&lt;/em&gt; sempat menurun drastis meskipun beberapa bulan kemudian peminatnya kembali dan bahkan meningkat jauh.&lt;/p&gt;
&lt;p&gt;Syukur alhamdulillah transisi dari offline menuju online akhirnya berjalan cukup lancar, meskipun ada kendala disana-sini. Semakin menggembirakan karena akhirnya peminatnya semakin meningkat setiap bulannya.&lt;/p&gt;
&lt;p&gt;Yang cukup menyedihkan buat saya pribadi adalah keharusan untuk melakukan proses &lt;em&gt;layoff&lt;/em&gt; untuk menjaga buku kas tetap seimbang. Termasuk kehilangan beberapa sosok kunci :&#39;( Ini adalah salah satu sisi yang tidak mengenakkan menjadi pemilik bisnis atau &lt;em&gt;co-founder&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Untuk kehidupan saya pribadi bekerja dirumah memiliki kelebihan tersendiri. Punya lebih banyak waktu untuk keluarga, dan punya lebih banyak waktu untuk mengerjakan sesuatu. Sekarang saya punya waktu 1 sampai 1.5 jam tambahan karenta tidak harus menempuh macetnya Jakarta menuju ke kantor.&lt;/p&gt;
&lt;h2&gt;HACKTIV8 Berhasil Masuk dan Menyelesaikan Program Google for Startups Accelerator&lt;/h2&gt;
&lt;p&gt;Agak diluar ekspektasi karena tidak direncanakan sebelumnya, HACKTIV8 berhasil masuk ke program &lt;a href=&quot;https://startup.google.com/accelerator/southeast-asia/&quot;&gt; Google for Startups Accelerator &lt;/a&gt; atau GfSA South East Asia! Selama beberapa bulan tim HACKTIV8 akan mengikuti &lt;em&gt;bootcamp&lt;/em&gt; yang diadakan secara online.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/15gfsa-v2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Saya sempat menceritakan tentang GfSA ini di podcast &amp;quot;Ngobrolin Startup dan Teknologi&amp;quot; bareng &lt;a href=&quot;https://twitter.com/imrenagi&quot;&gt;Imre Nagi&lt;/a&gt;. Sayang sekali kesempatan mengunjungi negeri Paman Sam sirna karena program akselerator kali ini diselenggarakan secara online.&lt;/p&gt;
&lt;iframe src=&quot;https://open.spotify.com/embed-podcast/episode/5ETnXDtyd9eTVMQTzaAFAO&quot; width=&quot;100%&quot; height=&quot;232&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot; allow=&quot;encrypted-media&quot;&gt;&lt;/iframe&gt;
&lt;h2&gt;Podcast Ceritanya Developer&lt;/h2&gt;
&lt;p&gt;Tahun 2020 ini menginjak tahun ketiga. Ditahun ketiga ini saya mendapat dukungan penuh dari &lt;a href=&quot;https://deeptech.id/&quot;&gt;deeptech&lt;/a&gt; untuk melanjutkan produksi podcast. Banyak perubahan signifikan yang terjadi mulai dari desain &lt;em&gt;cover&lt;/em&gt; tiap episode, kualitas (terutama episode sebelum pandemi) dan durasi ditingkatkan menjadi 22 episode dalam setahun. Sedangkan sebelumnya setahun hanya delapan episode saja.&lt;/p&gt;
&lt;p&gt;Pendengarnya pun meningkat secara signifikan, meningkat hingga 600%!. Terimakasih banyak untuk para pendengar setia dan para pendengar baru. Terimakasih juga untuk para narasumber yang sudah berbagi cerita dan inspirasi.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;in&quot; dir=&quot;ltr&quot;&gt;2020 sebentar lagi kita lewati. &lt;a href=&quot;https://twitter.com/hashtag/podcast?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#podcast&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ceritanya?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ceritanya&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/developer?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#developer&lt;/a&gt; berhasil menelurkan 22 episode! Pendengar bertumbuh sampai 600%! Didengar di 33 negara! Selamat datang para pendengar dari US, should I talk in english now? 😅 &lt;a href=&quot;https://t.co/XUODhXpzKs&quot;&gt;pic.twitter.com/XUODhXpzKs&lt;/a&gt;&lt;/p&gt;&amp;mdash; youtube.com/rizafahmi (@rizafahmi22) &lt;a href=&quot;https://twitter.com/rizafahmi22/status/1335037030888181760?ref_src=twsrc%5Etfw&quot;&gt;December 5, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2&gt;Podcast Hikayat Punggawa Teknologi&lt;/h2&gt;
&lt;p&gt;Selain podcast Ceritanya Developer, saya sempat diajak Mas &lt;a href=&quot;https://twitter.com/AriyaHidayat&quot;&gt;Ariya Hidayat&lt;/a&gt; untuk membuat podcast baru. Salah satu tujuan dibuatnya podcast ini adalah untuk membuka cakrawala kita sebagai pengembang aplikasi untuk mendapatkan sumber inspirasi dari sosok punggawa teknologi. Disini fokusnya kepada sosok yang mungkin jarang terdengar di jagad internet, namun kontribusinya di dunia pemrograman tidak dapat diejawantahkan.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ONoUsSo23l0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Baru berjalan tiga episode, sayangnya belum dapat dilanjutkan lagi karena jadwal Mas Ariya yang secara mendadak menjadi padat dan kita belum menemukan waktu yang pas, karena perbedaan zona waktu antara Indonesia dan California. Semakin sulit lagi karena formatnya adalah &lt;em&gt;live radio podcast&lt;/em&gt; jadi ditayangkan secara &lt;em&gt;live&lt;/em&gt;. Mungkin nanti kita bisa mengubah formatnya menjadi format rekaman sehingga waktu rekaman dapat lebih fleksibel.&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;Passive Income&lt;/em&gt; Melalui BuildWith Angga&lt;/h2&gt;
&lt;p&gt;Akhirnya saya berhasil mendapatkan kanal untuk &lt;em&gt;passive income&lt;/em&gt; dengan membangun &lt;em&gt;online course&lt;/em&gt; di &lt;a href=&quot;https://buildwithangga.com/&quot;&gt;BuildWith Angga&lt;/a&gt;. Sudah lama sebenarnya saya mencari kanal untuk mendapatkan &lt;em&gt;passive income&lt;/em&gt; hanya saja belum begitu berhasil. Terimakasih kepada Angga Risky yang sudah memberikan kesempatan kepada saya. Saya masih ingat banget ketika awalnya Angga ingin mengembangkan platform &lt;a href=&quot;https://buildwithangga.com/&quot;&gt;BuildWith Angga&lt;/a&gt; karena ketika itu kita sempat bertemu dan diskusi.&lt;/p&gt;
&lt;img src=&quot;https://rizafahmi.com/assets/images/52011482_360952281297288_4255667014115868121_n.jpg&quot; width=&quot;400&quot; /&gt;
&lt;p&gt;Total sudah ada tiga course sampai saat ini yang sudah dipublikasikan. &lt;em&gt;Course&lt;/em&gt; pertama adalah &lt;a href=&quot;https://buildwithangga.com/kelas/svelte-javascript-web-development&quot;&gt;SvelteJS Web Development&lt;/a&gt; yang dapat dipelajari secara gratis. Kemudian dilanjutkan dengan &lt;a href=&quot;https://buildwithangga.com/kelas/sveltejs-front-end-javascript-development-web-donasi-online&quot;&gt;Front-End JavaScript Development: Web Donasi Online&lt;/a&gt;. Terakhir yang terbaru adalah &lt;a href=&quot;https://buildwithangga.com/kelas/struktur-data-dengan-javascript&quot;&gt;Struktur Data dengan JavaScript&lt;/a&gt; dan beberapa lainnya sedang dalam proses pembuatan.&lt;/p&gt;
&lt;h2&gt;Mengaktifkan (kembali) Kanal Youtube&lt;/h2&gt;
&lt;p&gt;Terpantik dengan webinar yang diadakan bersama Angga, membuat saya ingin kembali mengaktifkan kembali kanal &lt;a href=&quot;https://youtube.com/rizafahmi&quot;&gt;YouTube&lt;/a&gt; yang sempat terbengkalai. Format &lt;em&gt;livestreaming&lt;/em&gt; dipilih murni karena untuk memudahkan dan tidak terlalu membutuhkan persiapan banyak. Terutama tidak membutuhkan proses &lt;em&gt;editing&lt;/em&gt; yang lumayan butuh &lt;em&gt;effort&lt;/em&gt;. Tapi ternyata format &lt;em&gt;livestreaming&lt;/em&gt; memiliki keunikan tersendiri dapat berinteraksi langsung dengan penonton. Ternyata &lt;em&gt;livestreaming&lt;/em&gt; ini &lt;em&gt;ngangenin&lt;/em&gt; juga.&lt;/p&gt;
&lt;p&gt;Di akhir 2020 ini saya berhasil melakukan 57 kali sesi &lt;em&gt;livestreaming&lt;/em&gt;. Setiap sesinya dibentuk dalam format serial seperti: Sesi Belajar Elixir, Sesi Belajar Svelte, Sesi PWA dll. Bisa langsung dicek &lt;a href=&quot;https://www.youtube.com/c/RizaFahmi/playlists&quot;&gt;disini&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sempat juga iseng validasi ide ke penonton, dan jadilah program &lt;a href=&quot;https://rizafahmi.com/mentorship&quot;&gt;mentorship&lt;/a&gt;. Dan setelah sesi &lt;em&gt;livestreaming&lt;/em&gt; biasanya saya dan penonton setia biasanya &lt;em&gt;nongkrong&lt;/em&gt; di &lt;a href=&quot;https://discord.gg/wFfszuzk3Q&quot;&gt;server discord berikut&lt;/a&gt;. Silakan bergabung untuk diskusi bebas atau memberikan ide topik pembahasan, saran dan kritik membangun untuk sesi &lt;em&gt;livestreaming&lt;/em&gt;.&lt;/p&gt;
&lt;a href=&quot;https://youtu.be/gMi8sxQz6ls?t=4181&quot; target=&quot;_blank&quot;&gt;
    &lt;img src=&quot;https://rizafahmi.com/assets/images/Phoenix%20youtube%20thumbnail.png&quot; /&gt;
&lt;/a&gt;
&lt;p&gt;Secara keseluruhan selama 2020, kanal youtube saya bertambah &lt;strong&gt;1.062&lt;/strong&gt; &lt;em&gt;subscribers&lt;/em&gt;, berhasil mendapatkan &lt;strong&gt;26.912&lt;/strong&gt; &lt;em&gt;views&lt;/em&gt;, 49 video rekaman dan 56 &lt;em&gt;livestreaming&lt;/em&gt; dan mendapatkan total donasi &lt;strong&gt;Rp2.823.750&lt;/strong&gt; via KaryaKarsa dan Saweria.&lt;/p&gt;
&lt;p&gt;Kanal youtube saya memang isinya beragam. Mulai dari &lt;em&gt;livestreaming&lt;/em&gt;, cuplikan &lt;em&gt;online course&lt;/em&gt;, podcast, dan lain-lain. Kanal youtube ini memang dibuat untuk tempat eksperimen saya, seperti yang saya ceritakan saat diundang pak Sandhika Galih di kanal youtube miliknya.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ohL5VIHs36s&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;hr /&gt;
&lt;h2&gt;Target Belajar di 2020&lt;/h2&gt;
&lt;p&gt;Di 2020 saya menargetkan belajar (kembali) beberapa teknologi yang menarik buat saya. Sebenarnya bukan teknologi baru akan tetapi sudah lama tidak update dan hanya memantau dari kejauhan. Akhirnya ditahun 2020 ini saya berhasil memaksa diri untuk belajar &lt;a href=&quot;https://buildwithangga.com/kelas/sveltejs-front-end-javascript-development-web-donasi-online&quot;&gt; Svelte &lt;/a&gt; (sekaligus membuat online course-nya), Phoenix LiveView, Progressive Web Apps dan GraphQL. Saya bisa memaksa diri untuk belajar salah satunya karena &#39;harus&#39; melakukan sesi &lt;em&gt;livestreaming&lt;/em&gt;. Sayangnya sesi &lt;em&gt;livestreaming&lt;/em&gt; sangat tergantung dengan koneksi internet. Dan memasuki bulan Desember ini koneksi internet dirumah saya sering mengalami banyak kendala.&lt;/p&gt;
&lt;h2&gt;&lt;em&gt;Preview&lt;/em&gt; 2021&lt;/h2&gt;
&lt;h3&gt;Yang ingin dipelajari di 2021&lt;/h3&gt;
&lt;p&gt;Sebagaimana yang disarankan buku &lt;a href=&quot;https://rizafahmi.com/2020/12/19/refleksi-2020/&quot;&gt;The Pragmatic Programmer&lt;/a&gt;, kita disarankan untuk mempelajari setidaknya satu bahasa pemrograman baru setiap tahunnya. Di 2021 saya ingin mempelajari setidaknya satu dari beberapa bahasa pemrograman baru berikut: Rust, atau OCaml/ReasonML. Sekaligus di 2021 saya ingin mempelajari lebih dalam tentang Elixir dan ingin membangun sesuatu dengan Elixir.&lt;/p&gt;
&lt;h3&gt;Melanjutkan Beberapa Online Course&lt;/h3&gt;
&lt;p&gt;Saya juga ingin melanjutkan beberapa &lt;em&gt;online course&lt;/em&gt; berikutnya, diantaranya: Struktur Data, dan Algoritma Pemrograman. Selain itu saya berencana ingin membuat konten tentang proses dan bagaimana mempersiapkan &lt;em&gt;coding interview&lt;/em&gt;. Format dan bentuknya seperti apa? Tunggu saja!&lt;/p&gt;
&lt;h3&gt;Lainnya&lt;/h3&gt;
&lt;p&gt;Saya ingin melanjutkan petualangan &lt;em&gt;livestreaming&lt;/em&gt; sambil memikirkan cara yang lebih baik untuk memperbaiki koneksi internet. Saya juga ingin melakukan &lt;em&gt;revamp&lt;/em&gt; web &lt;a href=&quot;https://rizafahmi.com/&quot;&gt;rizafahmi.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Penutup&lt;/h2&gt;
&lt;p&gt;Ternyata di tahun 2020 ini saya cukup produktif juga ya terutama dalam mengembangkan konten. Semoga produktifitas ini terus berlanjut di 2021. Bekerja dari rumah memang memiliki kelebihan terutama memiliki waktu luang lebih banyak. Saya ingin waktu luang digunakan untuk sesuatu yang bermanfaat seperti lebih dekat dengan keluarga dan menghasilkan konten yang menarik untuk sama-sama kita pelajari.&lt;/p&gt;
&lt;p&gt;Itu dia 2020 saya, bagaimana dengan teman-teman?!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Menambahkan Video Watermark dengan ffmpeg</title>
    <link href="https://rizafahmi.com/2020/11/30/menambahkan-video-watermark-dengan-ffmpeg/"/>
    <updated>2020-11-30T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/11/30/menambahkan-video-watermark-dengan-ffmpeg/</id>
    <content type="html">&lt;p&gt;Berikut adalah tips singkat untuk menambahkan &lt;em&gt;watermark&lt;/em&gt; di video yang sudah diproduksi, terutama untuk para pembuat konten video. Alat bantu yang dibutuhkan hanyalah sebuah aplikasi CLI atau &lt;em&gt;command-line interface&lt;/em&gt; &lt;a href=&quot;https://ffmpeg.org/&quot;&gt;ffmpeg&lt;/a&gt;. Instalasi ffmpeg dapat dilakukan dengan menggunakan &lt;a href=&quot;https://brew.sh/&quot;&gt;homebrew&lt;/a&gt;, &lt;a href=&quot;https://linux.die.net/man/8/apt-get&quot;&gt;apt-get&lt;/a&gt;, ataupun manajemen aplikasi lainnya.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ ffmpeg -i namafile.mp4 &lt;span class=&quot;token punctuation&quot;&gt;\&lt;/span&gt;&lt;br /&gt;-vf &lt;span class=&quot;token string&quot;&gt;&quot;drawtext=text=&#39;pesan teks watermark&#39;:x=22:y=H-th-22:fontsize=34:&lt;br /&gt;fontcolor=white:shadowcolor=black:shadowx=2:shadowy=2&quot;&lt;/span&gt; output.mp4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut keterangan singkat dari perintah diatas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i namafile.mp4&lt;/code&gt; input file dapat berupa ekstensi apa saja seperti mp4, avi, mov dll&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-vf &amp;quot;drawtext=text=&#39;pesan teks watermark&#39;:&amp;quot;&lt;/code&gt; menambahkan video filter (vf) dengan menggambarkan teks dan pesan tertentu&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:x=22:y=H-th-22&lt;/code&gt; posisi teks dengan format koordinat x dan y&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:fontsize=34:fontcolor=white&lt;/code&gt; ukuran font 34 pixel dan berwarna putih&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:shadowcolor=black:shadowx=2:shadowy=2&lt;/code&gt; teks diberikan efek bayangan dengan ofset 2 pixel di sumbu x dan y&lt;/li&gt;
&lt;li&gt;&lt;code&gt;output.mp4&lt;/code&gt; merupakan nama file tujuan&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Setup Windows Bagian Pertama</title>
    <link href="https://rizafahmi.com/2020/09/15/setup-windows-bagian-1/"/>
    <updated>2020-09-15T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/09/15/setup-windows-bagian-1/</id>
    <content type="html">&lt;p&gt;Salah satu fitur menarik dari Windows 10 adalah kemampuan menjalankan Linux tanpa harus &lt;em&gt;reboot&lt;/em&gt; atau &lt;em&gt;dual boot&lt;/em&gt;. Artinya sistem operasi Windows dan Linux dapat berjalan beriringan 🎉&lt;/p&gt;
&lt;p&gt;Hal ini dimungkinkan karena teknologi yang diciptakan Microsoft yang diberi nama Windows Subsystem Linux atau disingkat WSL. Kita akan sedikit bereksperimen untuk menggunakan Windows sebagai mesin &lt;em&gt;ngoding&lt;/em&gt; dan nanti kita akan membuktikan apakah Windows 10 dengan WSL-nya layak menjadi alternatif sistem operasi untuk mengembangkan aplikasi yang modern.&lt;/p&gt;
&lt;p&gt;Di artikel ini kita akan melakukan setup Windows 10 agar siap digunakan untuk pengembang perangkat lunak dengan melakukan instalasi Linux, &lt;em&gt;text editor&lt;/em&gt;, Node.js, tmux dan alat bantu lainnya.&lt;/p&gt;
&lt;h2&gt;Menyalakan Fitur WSL&lt;/h2&gt;
&lt;p&gt;Secara &lt;em&gt;default&lt;/em&gt;, fitur wsl dalam keadaan tidak menyala dan untuk menggunakannya kita harus menyalakan fiturnya terlebih dahulu dengan menggunakan PowerShell dan dijalankan sebagai administrator.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/oxqn6ncshkfiqz0uopgg.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jangan lupa setelah menjalankan perintah diatas, kita harus melakukan restart sistem operasinya.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/R1AC7UFFWp8&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;h2&gt;Install Distribusi Linux&lt;/h2&gt;
&lt;p&gt;Selanjutnya buka Windows Store dan cari dengan kata kunci &amp;quot;Linux&amp;quot; dan pilih salah satu. Jika bingung, pilih saja Ubuntu, salah satu distribusi Linux yang populer. Tenang saja, kita bisa melakukan instalasi distribusi Linux sebanyak-banyaknya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/xfd0mxqyqyzgkv24xxds.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Mumpung masih berada di Windows Store, sekalian install aplikasi Windows Terminal yang nantinya bisa kita gunakan untuk seluruh &lt;em&gt;command line&lt;/em&gt; yang ada di Windows termasuk mengakses berbagai distribusi Linux yang sudah terinstal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/3eh8ubcdkzk8l3s42j4l.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Menjalankan Linux&lt;/h2&gt;
&lt;p&gt;Untuk menjalankan linux, kita bisa menggunakan aplikasi yang ada di start menu dengan nama Ubuntu (atau distribusi lain yang diinstal), atau kita juga bisa menggunakan Windows Terminal yang tadi sudah kita install dengan membuka tab baru dan sudah muncul distribusi yang tadi kita install.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/wcqsiqevxuw0y4sg42a8.png&quot; alt=&quot;Alt Text&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Selanjutnya kita sudah bisa menggunakan Linux seperti biasa seperti beberapa perintah berikut.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; upgrade&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Instalasi Node.js&lt;/h2&gt;
&lt;p&gt;Untuk menggunakan Node.js di Linux, kita bisa capai dengan beberapa cara. Salah satu cara yang direkomendasi adalah dengan menggunakan version manager. Version manager yang paling populer untuk Node saat ini adalah &lt;a href=&quot;https://github.com/nvm-sh/nvm#nvmrc&quot;&gt;nvm&lt;/a&gt;. Namun sekitar setahun yang lalu saya menemukan sebuah Node version manager yang lebih cepat, namanya &lt;a href=&quot;https://github.com/Schniz/fnm&quot;&gt;fnm&lt;/a&gt;. Untuk melakukan instalasi fnm ternyata dibutuhkan sebuah aplikasi unzip. Kita lakukan instalasi terlebih dahulu baru kemudian install fnm dengan bantuan curl.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;unzip&lt;/span&gt;&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; -fsSL https://github.com/Schniz/fnm/raw/master/.ci/install.sh &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setelah proses instalasi selesai, selanjutnya kita melakukan instalasi Node dengan versi terbaru (versi 14.9.0 saat artikel ini ditulis) dan langsung digunakan sebagai default dari versi nodejs kita.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ fnm &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; latest&lt;br /&gt;$ fnm default v14.9.0&lt;br /&gt;$ node -v&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Instalasi Visual Studio Code&lt;/h2&gt;
&lt;p&gt;Berikutnya kita akan mengunduh dan menginstal editor kode pilihan, misalnya Visual Studio Code yang bisa diunduh &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;disini&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Setelah diinstal dan dibuka, secara otomatis VS Code medeteksi bahwa sistem operasi kita memiliki WSL dan menyarankan kita untuk melakukan instalasi plugin WSL.&lt;/p&gt;
&lt;h2&gt;Membuat Proyek Node.js&lt;/h2&gt;
&lt;p&gt;Sekarang kita akan mencoba membuat proyek Node.js baru dengan menjalankan perintah seperti berikut.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; node_on_wsl&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; node_on_wsl&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; init -y&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; express&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita akan mencoba membuat web server sederhana dengan Express.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app.js&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;express&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Halo&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan lalu kita buka browser dan ketikkan &lt;code&gt;http://localhost:3000&lt;/code&gt;, dan tada!!!&lt;/p&gt;
&lt;h2&gt;Selanjutnya&lt;/h2&gt;
&lt;p&gt;Ada beberapa alat bantu yang masih dibutuhkan seperti database, tmux, dan lain sebagainya yang ingin ditambahkan. Dan saya melakukan semua ini secara live yang bisa dipantengi di &lt;a href=&quot;https://www.youtube.com/channel/UCHhAlFGFCGgIusQkQIqJLYw?sub_confirmation=1&quot;&gt;kanal youtube berikut&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2Lq-x_X_hXs&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
</content>
  </entry>
  
  <entry>
    <title>Panduan Melakukan Presentasi Online</title>
    <link href="https://rizafahmi.com/2020/04/29/panduan-melakukan-presentasi-online/"/>
    <updated>2020-04-29T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/04/29/panduan-melakukan-presentasi-online/</id>
    <content type="html">&lt;p&gt;Berikut ini adalah panduan untuk melakukan presentasi secara online baik untuk online meetup ataupun ajang yang lebih besar seperti konferensi online seperti acara yang akan diadakan oleh wwwid yaitu &lt;a href=&quot;https://livecamp.wwwid.org/home&quot;&gt; Live Camp 2020 &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Panduan ini ditujukan untuk narasumber pengisi acara untuk mempersiapkan segala hal sebelum melakukan presentasi secara online mulai dari mempersiapkan slide presentasi, latihan, gladi resik hingga persiapan diri.&lt;/p&gt;
&lt;h2&gt;Mempersiapkan Slide Presentasi&lt;/h2&gt;
&lt;p&gt;Hal pertama yang harus dilakukan adalah mempersiapkan slide presentasi. Untuk membuat slide presentasi dapat menggunakan alat bantu seperti Apple Keynote, Microsoft PowerPoint ataupun alat bantu online seperti Google Slides, slides.com, Canva dan masih banyak yang lainnya.&lt;/p&gt;
&lt;h2&gt;Format Slide Presentasi&lt;/h2&gt;
&lt;p&gt;Format yang saat ini paling umum digunakan adalah format widescreen yaitu 16:9 sehingga lebih optimal untuk penonton. Karena saat ini hampir semua layar modern menggunakan format 16:9. Untuk membuat slide dengan format 16:9 dapat dilakukan dengan cara memilih tema dengan format 16:9 seperti contoh dibawah ini dengan menggunakan aplikasi Keynote.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/wide.png&quot; alt=&quot;wide&quot; title=&quot;Memilih format wide 16:9 di aplikasi Keynote&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ataupun juga bisa mengubah setting dokumen dengan memilih slide &lt;em&gt;size widescreen(16:9)&lt;/em&gt; seperti contoh berikut.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/wide2.png&quot; alt=&quot;Memilih setting dokumen dengan ukuran widescreen di aplikasi Keynote&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Sedangkan cara mengubah ukuran slide presentasi di Google Slides adalah dengan memilih menu File lalu menuju ke Page Setup.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/wide3.png&quot; alt=&quot;Memilih ukuran widescreen di aplikasi Google Slides&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Unduh Slide Presentasi&lt;/h2&gt;
&lt;p&gt;Berhubung menggunakan format online, disarankan untuk menyimpan versi offline dari slide presentasi. Hal ini dilakukan agar ketika terjadi koneksi buruk atau kurang stabil, kita dapat menggunakan versi offline dari slide. Terutama jika menggunakan alat bantu online seperti Google Slides, Canva dan lain-lain.&lt;/p&gt;
&lt;h2&gt;Kirimkan Slide Presentasi&lt;/h2&gt;
&lt;p&gt;Kirimkan slide presentasi yang sudah final kepada panitia untuk meminta masukan, pendapat dan evaluasi. Slide presentasi nantinya juga dapat dibagikan kepada penonton baik oleh panitia atau oleh kita sendiri dengan menggunakan service seperti &lt;a href=&quot;https://www.slideshare.net/rizafahmi&quot;&gt;Slideshare&lt;/a&gt; ataupun &lt;a href=&quot;https://speakerdeck.com/rizafahmi&quot;&gt;Speakerdeck&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Target Penonton&lt;/h2&gt;
&lt;p&gt;Cari tahu perkiraan siapa yang akan menonton presentasi kamu. Apakah harus menggunakan bahasa Indonesia atau bahasa Inggris, perkiraan demografi dan lain sebagainya. Mintalah pendapat dari panitia untuk mengetahuinya.&lt;/p&gt;
&lt;p&gt;Perlu diperhatikan juga akan cukup besar kemungkinan beberapa persen dari penonton menggunakan ponsel untuk menonton acara ini. Sehingga desainlah slide presentasi dengan ukuran &lt;em&gt;font&lt;/em&gt; yang cukup besar untuk &lt;strong&gt;memastikan para penonton yang menggunakan layar kecil seperti ponsel tetap nyaman&lt;/strong&gt; dan tetap dapat membaca slide presentasi dengan cukup jelas.&lt;/p&gt;
&lt;p&gt;Sangat disarankan untuk menghindari penggunaan teks yang terlalu banyak dalam slide presentasi sehingga slide presentasi menjadi sulit dibaca.&lt;/p&gt;
&lt;h2&gt;Mempersiapkan Sesi Live Coding&lt;/h2&gt;
&lt;p&gt;Jika pemateri berencana untuk melakukan sesi &lt;em&gt;live coding&lt;/em&gt;, usahakan untuk membuat sesi &lt;em&gt;live coding&lt;/em&gt; yang &lt;em&gt;to the point&lt;/em&gt;, jangan terlalu banyak &lt;em&gt;boilerplate code&lt;/em&gt; yang kurang relevan. Pastikan juga sesi &lt;em&gt;live coding&lt;/em&gt; dibuat &lt;strong&gt;selangkah demi selangkah&lt;/strong&gt; dan siapkan sedetail mungkin.&lt;/p&gt;
&lt;p&gt;Persiapkan detail langkah demi langkah sebagai &lt;strong&gt;contekan&lt;/strong&gt; dan siapkan &lt;em&gt;code snippet&lt;/em&gt; yang dapat dengan mudah diakses dan di &lt;em&gt;copy-paste&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Untuk menghindari hal-hal yang tidak diinginkan pemateri diharapkan untuk &lt;strong&gt;mempersiapkan kode yang sudah berjalan di folder terpisah&lt;/strong&gt;. Jika terjadi kendala, tinggal pindah ke folder tersebut, jalankan perintah tertentu dan hasilnya sudah dapat kita lihat di layar.&lt;/p&gt;
&lt;p&gt;Jika memungkinkan, &lt;strong&gt;rekamlah sesi &lt;em&gt;live coding&lt;/em&gt; saat latihan&lt;/strong&gt; sehingga jika saat sesi &lt;em&gt;live coding&lt;/em&gt; sebenarnya terdapat kendala, hasil rekaman dapat diperlihatkan kepada penonton. Untuk cara merekam sesi &lt;em&gt;live coding&lt;/em&gt; akan dibahas di bagian berikutnya.&lt;/p&gt;
&lt;h2&gt;Latihan Presentasi&lt;/h2&gt;
&lt;p&gt;Sebelum menyampaikan materi, sangat disarankan untuk melakukan latihan terlebih dahulu. Selain agar lebih menguasai materi, latihan membantu kita untuk menghilangkan grogi atau demam panggung. Latihan yang cukup juga mampu membuat kita lebih percaya diri. Lakukan latihan sebanyak mungkin dimulai dari latihan mandiri sebelum melakukan latihan bersama panitia atau gladi resik.&lt;/p&gt;
&lt;h3&gt;Latihan Mandiri&lt;/h3&gt;
&lt;p&gt;Latihan mandiri dapat dilakukan secara &lt;em&gt;offline&lt;/em&gt; dengan slide presentasi yang sudah disiapkan sebelumnya. Lakukan latihan ini beberapa kali. Jika memungkinkan &lt;strong&gt;rekamlah saat latihan&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Dengan merekam proses latihan kita dapat mengevaluasi diri kita sendiri dan dapat melakukan perbaikan. Misalkan saja ternyata saat menyampaikan materi terlalu banyak eeee, aaaa, mmmm yang tidak perlu. Hal-hal seperti ini baru terdengar ketika direkam, karena saat kita latihan terutama saat latihan mandiri kita tidak dapat mendengar apa yang kita ucapkan.&lt;/p&gt;
&lt;p&gt;Proses merekam saat latihan sebenarnya cukup sederhana. Kita dapat menggunakan alat bantu seperti QuickTime ataupun alat bantu perekam layar lainnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/quicktime.png&quot; alt=&quot;quicktime&quot; title=&quot;Melakukan rekaman dengan aplikasi Quicktime&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Jangan lupa untuk menyalakan mikrofon agar suara kita terekam. Kita juga dapat sekaligus mencoba beberapa peralatan yang akan digunakan saat acara berlangsung seperti mikrofon eksternal, earphone ataupun headphone. Jika tidak, menggunakan mikrofon internal pun sudah cukup.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/quicktime2.png&quot; alt=&quot;quicktime2&quot; title=&quot;Menyalakan mic di aplikasi Quicktime&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Hasil rekaman dapat dievaluasi sendiri atau jika dirasa membutuhkan masukan tambahan dapat mengirimkan ke panitia. Hasil rekaman tersebut juga dapat diupload ke &lt;a href=&quot;https://www.youtube.com/watch?v=IJYp9the5h0&quot;&gt; Youtube &lt;/a&gt; atau &lt;a href=&quot;https://vimeo.com/&quot;&gt; Vimeo &lt;/a&gt; dan dapat juga ditampilkan di website kita sebagai bagian dari portofolio nantinya setelah acara berakhir.&lt;/p&gt;
&lt;h3&gt;Gladi Resik&lt;/h3&gt;
&lt;p&gt;Panitia akan mempersiapkan sesi gladi resik untuk pemateri di hari dan jam yang sudah ditentukan. Gladi Resik tentu akan dilakukan secara online. Jika panitia belum mengagendakan gladi resik, mintalah sesi gladi resik. Atau minimal minta latihan bersama panitia untuk kejelasan alur saat nanti presentasi tiba.&lt;/p&gt;
&lt;h2&gt;Sesaat Sebelum Sesi Online&lt;/h2&gt;
&lt;p&gt;Sebelum sesi online berlangsung, ada beberapa aspek yang sebaiknya diperhatikan seperti koneksi, lokasi dan peralatan lainnya.&lt;/p&gt;
&lt;h3&gt;Koneksi Internet&lt;/h3&gt;
&lt;p&gt;Untuk menjalankan sesi online, pastikan koneksi internet stabil. Apabila memungkinkan, gunakan kabel &lt;em&gt;ethernet&lt;/em&gt; untuk mendapatkan koneksi yang lebih stabil dibandingkan menggunakan &lt;em&gt;wifi&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Siapkan juga koneksi cadangan seperti &lt;em&gt;tethering&lt;/em&gt; dengan ponsel, &lt;em&gt;mifi&lt;/em&gt; atau alat sejenis yang akan digunakan ketika koneksi utama bermasalah. Gunakan juga koneksi cadangan tersebut saat latihan atau gladi resik untuk memastikan semuanya berjalan lancar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/mifi.png&quot; alt=&quot;Contoh alat cadangan untuk koneksi internet&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Lokasi Dan Pencahayaan&lt;/h3&gt;
&lt;p&gt;Carilah lokasi dirumah yang cukup tenang dan bebas dari gangguan. Pastikan juga pencahayaan cukup bagus. Jika pencahayaan dirasa kurang, bisa dibantu dengan pencahayaan tambahan dari lampu meja atau lampu belajar atau flash kamera ponsel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/Miniso-quality-product-quality-eye-folding-lamp-touch-office-lamp-reading-lamp.jpg&quot; alt=&quot;Contoh lampu belajar yang bisa digunakan untuk pencahayaan&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Pencahayaan yang baik akan dapat meningkatkan &lt;em&gt;engagement&lt;/em&gt; penonton dengan sangat signifikan.&lt;/p&gt;
&lt;h3&gt;Peralatan Online&lt;/h3&gt;
&lt;p&gt;Jika menggunakan peralatan tambahan seperti webcam, mikrofon, earphone ataupun headphone harap untuk dicoba terlebih dahulu sebelum memulai presentasi. Pastikan sudah menyala dan alat sudah terpilih di platform video call pilihan seperti Hangout, Zoom, Skype atau yang lainnya. Pastikan juga posisi webcam dan mikrofon sudah berada di posisi yang tepat. Pastikan juga volume sudah dalam porsi yang tepat, tidak terlalu besar atau tidak terlalu kecil.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/setting.png&quot; alt=&quot;Setting di aplikasi Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/setting-audio.png&quot; alt=&quot;Setting pemilihan audio di aplikasi Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/zoom-audio.png&quot; alt=&quot;Setting pemilihan audio di aplikasi Zoom&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/setting-video.png&quot; alt=&quot;Setting pemilihan webcam di aplikasi Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/zoom-video.png&quot; alt=&quot;Setting pemilihan webcam di aplikasi Zoom&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Posisi Saat Presentasi&lt;/h3&gt;
&lt;p&gt;Selain suara, hal yang tidak kalah penting saat melakukan presentasi adalah &lt;em&gt;body language&lt;/em&gt;. Jika memungkinkan, materi dapat dibawakan sambil berdiri. Membawakan materi sambil berdiri dapat membantu kita menjadi lebih fokus, seimbang dan biasanya lebih bersemangat. Gerakan kita juga lebih leluasa dibandingkan dalam posisi duduk.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/tips.jpeg&quot; alt=&quot;Tips presentasi sambil berdiri&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Jika memutuskan untuk berdiri, pastikan juga posisi webcam atau laptop berada di posisi yang tepat sehingga tidak aneh dilihat penonton.&lt;/p&gt;
&lt;p&gt;Jika pemateri lebih memilih untuk duduk, carilah posisi duduk yang nyaman. Jangan lupa tersenyum baik berdiri ataupun duduk.&lt;/p&gt;
&lt;h3&gt;Mematikan Semua Notifikasi&lt;/h3&gt;
&lt;p&gt;Agar tidak mengganggu proses penyampaian materi, disarankan untuk mematikan semua notifikasi baik untuk laptop/PC maupun ponsel. Jauhkan posisi ponsel dari mikrofon untuk menghindari bunyi &lt;em&gt;feedback&lt;/em&gt; yang mungkin saja mengganggu kelancaran penyampaian materi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/disturb.png&quot; alt=&quot;Mengaktifkan mode hening&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Sesi Penyampaian Materi&lt;/h2&gt;
&lt;p&gt;Setelah persiapan cukup matang, saatnya menyampaikan materi. Ketika waktunya tiba, berikut beberapa hal yang perlu dilakukan.&lt;/p&gt;
&lt;h3&gt;Ketersediaan Listrik&lt;/h3&gt;
&lt;p&gt;Sebelum mulai menyampaikan materi pastikan laptop sudah terhubung ke aliran listrik sehingga tidak perlu khawatir akan ketersediaan listrik ketika menyampaikan materi. Atau bahkan lebih buruk bisa-bisa laptop mati di tengah sesi.&lt;/p&gt;
&lt;h3&gt;Menyampaikan Materi&lt;/h3&gt;
&lt;p&gt;Klik tombol “Present now” di Google Meet untuk mulai membagikan layar pemateri. Sedangkan di platform Zoom dapat menekan tombol &amp;quot;Share Screen&amp;quot;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/present.png&quot; alt=&quot;Melakukan presentasi dengan share screen di aplikasi Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/zoom-share-screen.png&quot; alt=&quot;Melakukan presentasi dengan share screen di aplikasi Zoom&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Disini terdapat dua pilihan: &lt;em&gt;Present a window&lt;/em&gt; atau &lt;em&gt;Present your entire screen&lt;/em&gt;. Pilih &lt;em&gt;Present a window&lt;/em&gt; dan kemudian pilih &lt;em&gt;window&lt;/em&gt; dimana slide presentasi berada.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/window.png&quot; alt=&quot;Memilih window untuk presentasi dengan aplikasi seperti Keynote di Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/zoom-share-keynote.png&quot; alt=&quot;Memilih window untuk presentasi dengan aplikasi seperti Keynote di Zoom&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Apabila menggunakan alat presentasi online seperti Google Slides, slides.com, Canva atau yang lainnya dan berada di browser yang sama dengan Google Meet atau platform &lt;em&gt;video call&lt;/em&gt; lainnya, maka pilihlah browser tersebut untuk di share lalu segera pindah ke tab dimana slide presentasi berada.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/tab.png&quot; alt=&quot;Memilih browser untuk presentasi dengan aplikasi seperti Google Slides di Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/zoom-share-browser.png&quot; alt=&quot;Memilih browser untuk presentasi dengan aplikasi seperti Slide.com di Zoom&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Mute dan Unmute&lt;/h3&gt;
&lt;p&gt;Pastikan pemateri mengetahui cara melakukan &lt;em&gt;mute&lt;/em&gt; dan &lt;em&gt;unmute&lt;/em&gt;. Bila belum waktunya, pemateri dapat melakukan &lt;em&gt;mute&lt;/em&gt; dirinya sendiri di Google Meet agar tidak mengganggu jalannya sesi pemateri lain. Bila tiba saatnya menyampaikan materi silakan melakukan &lt;em&gt;unmute&lt;/em&gt; terlebih dahulu sebelum berbicara. Karena itu penting buat pemateri mengetahui cara melakukan &lt;em&gt;mute&lt;/em&gt; dan &lt;em&gt;unmute&lt;/em&gt; dan mengingat &lt;em&gt;shortcut&lt;/em&gt; akan lebih baik.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/mute.png&quot; alt=&quot;Mode diam atau mute di aplikasi Google Meet&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/zoom-mute.png&quot; alt=&quot;Mode diam atau mute di aplikasi Zoom&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Menggunakan Lebih Dari Satu Monitor&lt;/h3&gt;
&lt;p&gt;Monitor tambahan dapat digunakan untuk melihat catatan sehingga membantu proses penyampaian materi presentasi. Monitor tambahan juga dapat dimanfaatkan untuk memonitor keadaan &lt;em&gt;live streaming&lt;/em&gt; dan juga untuk memonitor grup apabila terdapat notifikasi dari panitia penyelenggara. Adanya monitor tambahan dapat membantu kelancaran penyampaian materi asalkan tidak membuat pemateri menjadi gagal fokus dan terdistraksi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/panduan/monitor.JPG&quot; alt=&quot;Mode dual monitor&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: Punya tips dan trik yang belum dibahas? Pull-request di tautan &lt;a href=&quot;https://github.com/rizafahmi/rizafahmi.com-v2&quot;&gt;berikut&lt;/a&gt;.️&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Referensi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://medium.com/@whizzoe/tips-to-prepare-an-online-presentation-on-zoom-checklist-e6624a93a093&lt;/li&gt;
&lt;li&gt;https://medium.com/sketchit/visual-tips-for-online-public-speaking-9a24203b3393&lt;/li&gt;
&lt;li&gt;https://blog.webinara.com/5-ways-to-survive-a-horrible-webinar-538c92482ddd&lt;/li&gt;
&lt;li&gt;https://medium.com/@paymantaei/10-ways-to-keep-your-audience-engaged-during-an-online-presentation-578ee603a78f&lt;/li&gt;
&lt;li&gt;https://dev.to/raymondcamden/tips-for-giving-remote-presentations-3p0j&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Mengenal Svelte, Sebuah Komponen Framework</title>
    <link href="https://rizafahmi.com/2020/04/27/svelte/"/>
    <updated>2020-04-27T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/04/27/svelte/</id>
    <content type="html">&lt;p&gt;Secara sederhana Svelte adalah sebuah framework JavaScript untuk menulis komponen antarmuka atau &lt;em&gt;user interface&lt;/em&gt;. Namun, menurut Rich Harris, Svelte bukan hanya sekedar framework tapi lebih dari itu. Menurutnya Svelte adalah semacam &lt;em&gt;compiler&lt;/em&gt;, maksudnya kode yang kita tulis di Svelte dikonversi menjadi JavaScript yang sudah dioptimasi.&lt;/p&gt;
&lt;p&gt;Salah satu fitur kunci dari Svelte adalah ukuran aplikasi yang kita tulis menjadi lebih kecil karena proses kompilasi yang dilakukan. Dan semua itu dicapai tanpa bantuan virtual DOM sama sekali. Seperti yang sama-sama kita ketahui, beberapa framework modern seperti React, Vue, Angular dan lainnya menggunakan alat bantu virtual DOM di framework mereka. Dengan tidak menggunakan virtual DOM maka ukuran aplikasi Svelte menjadi relatif lebih kecil.&lt;/p&gt;
&lt;p&gt;Ada beberapa fitur Svelte yang lainnya seperti &lt;em&gt;reactive&lt;/em&gt; dan juga &lt;em&gt;less code&lt;/em&gt;. Teman-teman bisa mengetahuinya lebih lengkap di &lt;a href=&quot;https://svelte.dev/&quot;&gt;website utamanya&lt;/a&gt;. Svelte dibuat untuk memecahkan masalah yang sama dengan framework lain seperti React dan Vue, namun dengan cara yang berbeda.&lt;/p&gt;
&lt;h2&gt;Memulai Svelte&lt;/h2&gt;
&lt;p&gt;Untuk menggunakan Svelte, disarankan menggunakan alat bantu &lt;a href=&quot;https://github.com/Rich-Harris/degit&quot;&gt;degit&lt;/a&gt; untuk membangun kerangka aplikasi. Node dan npm juga merupakan keharusan untuk menggunakan framework ini.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npx degit sveltejs/template my-svelte-project&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; my-svelte-project&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run dev&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Buka browser, dan arahkan ke alamat localhost dengan port 5000.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/hello.png&quot; alt=&quot;hello&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Sebelum kita &lt;em&gt;intip&lt;/em&gt; kode sumbernya, mari kita lihat terlebih dahulu struktur foldernya.&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;.&lt;br /&gt;├── public&lt;br /&gt;│   ├── build&lt;br /&gt;│   ├── favicon.png&lt;br /&gt;│   ├── global.css&lt;br /&gt;│   └── index.html&lt;br /&gt;├── src&lt;br /&gt;│   ├── App.svelte&lt;br /&gt;│   └── main.js&lt;br /&gt;├── .gitignore&lt;br /&gt;├── README.md&lt;br /&gt;├── package-lock.json&lt;br /&gt;├── package.json&lt;br /&gt;└── rollup.config.js&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita akan fokus kepada &lt;code&gt;package.json&lt;/code&gt; dan kode-kode yang ada di folder &lt;code&gt;src/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;File &lt;code&gt;package.json&lt;/code&gt; adalah daftar &lt;em&gt;dependencies&lt;/em&gt; yang digunakan sebuah proyek JavaScript ataupun Node.js. File ini juga terdapat perintah-perintah yang tersedia seperti bagaimana menjalankan proyek, melakukan test atau mempersiapkan proyek untuk siap diluncurkan atau &lt;em&gt;deploy&lt;/em&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;svelte-app&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;rollup -c&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;rollup -c -w&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sirv public&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;@rollup/plugin-commonjs&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^11.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;@rollup/plugin-node-resolve&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^7.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;rollup&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^1.20.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;rollup-plugin-livereload&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;rollup-plugin-svelte&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^5.0.3&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;rollup-plugin-terser&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^5.1.2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;svelte&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^3.0.0&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;sirv-cli&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^0.4.4&quot;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Seperti yang dapat dilihat, Svelte menggunakan &lt;a href=&quot;https://rizafahmi.com/2020/04/27/svelte/&quot;&gt;rollup&lt;/a&gt; sebagai module bundler. Selain rollup, juga bisa menggunakan webpack. Selanjutnya kita juga dapat melihat bagaimana caranya menjalankan server dengan mode &lt;em&gt;development&lt;/em&gt; dengan cara &lt;code&gt;$ npm run dev&lt;/code&gt; dan juga melakukan &lt;em&gt;bundling&lt;/em&gt; dengan perintah &lt;code&gt;$ npm run build&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;src/main.js&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Berikutnya kita akan melihat kode yang menjadi pintu gerbang atau &lt;em&gt;endpoint&lt;/em&gt; pertama dari aplikasi Svelte yang sudah kita buat.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; App &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./App.svelte&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  target&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  props&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    name&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;world&#39;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; app&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dibaris pertama kita melakukan import dari sebuah file &lt;code&gt;src/App.svelte&lt;/code&gt; dan kemudian diinsialisasi dengan memberikan informasi &lt;code&gt;target&lt;/code&gt; dan &lt;code&gt;props&lt;/code&gt; sebagai datanya.&lt;/p&gt;
&lt;h2&gt;&lt;code&gt;src/App.svelte&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;File dengan ekstensi svelte biasanya memiliki tiga bagian: &lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; untuk kode JavaScript, &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; untuk css dan terakhir untuk HTML.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hello {name}!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    Visit the&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://svelte.dev/tutorial&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Svelte tutorial&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    to learn how to build Svelte apps.&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;main&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 1em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 240px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0 auto&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #ff3e00&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;text-transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; uppercase&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 4em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk membaca data &lt;code&gt;props&lt;/code&gt; yang dikirimkan dari &lt;code&gt;main.js&lt;/code&gt;, kita harus melakukan export terlebih dahulu seperti yang ada di baris ke-2 untuk kemudian ditampilkan di HTML dengan notasi &lt;code&gt;{}&lt;/code&gt;, dalam hal ini &lt;code&gt;{name}&lt;/code&gt; seperti yang ada di baris ke-6.&lt;/p&gt;
&lt;p&gt;Cukup bersahabat bukan sintaksis dari Svelte? Sekarang mari kita coba membuat proyek sederhana dengan Svelte.&lt;/p&gt;
&lt;h2&gt;Membuat Aplikasi dengan Svelte&lt;/h2&gt;
&lt;p&gt;Kita akan membangun sebuah aplikasi sederhana yang membaca data dari Instagram dan menampilkan foto-foto dengan tag yang sudah kita tentukan. Kita namakan saja Sveltagram. Hasil akhirnya kurang-lebih seperti ini. Kita akan menggunakan proyek yang sudah kita buat dibagian sebelumnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/sveltagram.png&quot; alt=&quot;sveltagram&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Kita akan membangun aplikasi sveltagram sembari melihat beberapa fitur dari Svelte.&lt;/p&gt;
&lt;h3&gt;Persiapan Awal&lt;/h3&gt;
&lt;h4&gt;&lt;code&gt;src/main.js&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Kita akan mengirimkan &lt;em&gt;hashtag&lt;/em&gt; yang ingin kita tampilkan daftar fotonya, karena itu kita bisa memanfaatkan &lt;code&gt;props&lt;/code&gt; untuk mengirimkan data ke &lt;code&gt;App.svelte&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;import App from &#39;./App.svelte&#39;;&lt;br /&gt;&lt;br /&gt;const app = new App({&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; target: document.body,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; props: {&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    name: &#39;world&#39;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    hashtag: &#39;ceritanyadeveloper&#39;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; }&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;});&lt;br /&gt;&lt;br /&gt;export default app;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Komponen Bersarang atau Nested Component&lt;/h3&gt;
&lt;p&gt;Svelte mendukung pemanggilan komponen dari komponen lainnya atau dengan kata lain komponen bersarang (&lt;em&gt;nested component&lt;/em&gt;). Karena tidak mungkin sebuah aplikasi hanya terdiri dari satu komponen saja. Caranya cukup mudah, mirip dengan cara penggunaan import dan export dengan gaya ES Module. Kita akan membuat sebuah komponen baru yang akan digunakan di komponen App.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/components/BigHeader.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Komponen &lt;code&gt;BigHeader&lt;/code&gt; akan menjadi judul dari aplikasi yang akan dipanggil di komponen App untuk mendemokan bagaimana komponen bersarang bekerja.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hashtag&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;#{hashtag}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;span class=&quot;token language-css&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token selector&quot;&gt;h1&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #ff3e00&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;text-transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; uppercase&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 4em&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token property&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kode dari &lt;code&gt;BigHeader&lt;/code&gt; cukup sederhana. Komponen ini menerima sebuah properti dengan nama &lt;code&gt;hashtag&lt;/code&gt; dan menampilkannya dengan tag header level 1 atau h1.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/App.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Sekarang kita akan memanggil komponen &lt;code&gt;BigHeader&lt;/code&gt; dari komponen &lt;code&gt;App&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; BigHeader &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./components/BigHeader.svelte&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hashtag&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;script&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;main&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;BigHeader hashtag&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;hashtag&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;main&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;style&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Data Binding&lt;/h3&gt;
&lt;p&gt;Dengan Svelte kita dapat secara langsung mengubah sebuah variable dari hasil masukan dari pengguna dengan memanfaatkan fitur data binding. Kita akan tambahkan sebuah input text untuk mengubah variable &lt;code&gt;hashtag&lt;/code&gt; di komponen App.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import BigHeader from &#39;./components/BigHeader.svelte&#39;;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; export let hashtag;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;BigHeader hashtag={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;input type=&quot;text&quot; bind:value={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/style&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan sekarang kita dapat mengubah judul atau variable &lt;code&gt;hashtag&lt;/code&gt; secara &lt;em&gt;real-time&lt;/em&gt;. Hal ini disebut juga sebagai &lt;em&gt;data binding&lt;/em&gt;.&lt;/p&gt;
&lt;video autoplay=&quot;&quot; loop=&quot;&quot; style=&quot;width: 100%&quot;&gt;
  &lt;source src=&quot;https://rizafahmi.com/assets/images/svelte/binding.mov&quot; /&gt;
&lt;/video&gt;
&lt;h3&gt;Data Dummy Dari JSON&lt;/h3&gt;
&lt;p&gt;Berhubung data yang akan kita gunakan bentuknya JSON, kita akan membaca data contoh berbentuk JSON yang dapat kita unduh langsung dari instagram. Contohnya jika menggunakan &lt;em&gt;hashtag&lt;/em&gt; &amp;quot;ceritanyadeveloper&amp;quot;, maka kita dapat mengakses datanya dari &lt;code&gt;https://www.instagram.com/explore/tags/ceritanyadeveloper/?__a=1&lt;/code&gt;. Kita bisa simpan dengan ekstensi json dan disimpan ke folder &lt;code&gt;src/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/instagram.png&quot; alt=&quot;instagram&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Kita akan import data json tersebut di komponen App seperti berikut.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import BigHeader from &#39;./components/BigHeader.svelte&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import data from &#39;./instagram.json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; export let hashtag;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;BigHeader hashtag={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;input type=&quot;text&quot; bind:value={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/style&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Akan tetapi jika kita lihat di terminal, maka terdapat pesan kesalahan, kurang lebih seperti berikut.&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[!] Error: Unexpected token (Note that you need @rollup/plugin-json to import JSON files)&lt;br /&gt;src/instagram.json (2:13)&lt;br /&gt;&lt;br /&gt;...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pesan kesalahannya cukup jelas dan sudah menyertakan solusinya. Jadi svelte saat ini belum dapat melakukan import dari file dengan format JSON. Dan untuk dapat melakukan import dari JSON, kita dapat menggunakan plugin &lt;code&gt;@rollup/plugin-json&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; --save-dev @rollup/plugin-json&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;code&gt;rollup.config.js&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Kemudian ubah konfigurasi rollup untuk mengakomodasi plugin yang baru saja kita install di file &lt;code&gt;rollup.config.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;import svelte from &#39;rollup-plugin-svelte&#39;;&lt;br /&gt;import resolve from &#39;@rollup/plugin-node-resolve&#39;;&lt;br /&gt;import commonjs from &#39;@rollup/plugin-commonjs&#39;;&lt;br /&gt;import livereload from &#39;rollup-plugin-livereload&#39;;&lt;br /&gt;import { terser } from &#39;rollup-plugin-terser&#39;;&lt;br /&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;import json from &#39;@rollup/plugin-json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;const production = !process.env.ROLLUP_WATCH;&lt;br /&gt;&lt;br /&gt;export default {&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; input: &#39;src/main.js&#39;,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; output: {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   sourcemap: true,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   format: &#39;iife&#39;,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   name: &#39;app&#39;,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   file: &#39;public/build/bundle.js&#39;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; },&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; plugins: [&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   svelte({&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     // enable run-time checks when not in production&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     dev: !production,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     // we&#39;ll extract any component CSS out into&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     // a separate file - better for performance&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     css: (css) =&gt; {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       css.write(&#39;public/build/bundle.css&#39;);&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   }),&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // If you have external dependencies installed from&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // npm, you&#39;ll most likely need these plugins. In&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // some cases you&#39;ll need additional configuration -&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // consult the documentation for details:&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // https://github.com/rollup/plugins/tree/master/packages/commonjs&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   resolve({&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     browser: true,&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     dedupe: [&#39;svelte&#39;]&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   }),&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   commonjs(),&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // In dev mode, call `npm run start` once&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // the bundle has been generated&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   !production &amp;amp;&amp;amp; serve(),&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // Watch the `public` directory and refresh the&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // browser on changes when not in production&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   !production &amp;amp;&amp;amp; livereload(&#39;public&#39;),&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // If we&#39;re building for production (npm run build&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   // instead of npm run dev), minify&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   production &amp;amp;&amp;amp; terser()&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   production &amp;amp;&amp;amp; terser(),&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   json()&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; ],&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; watch: {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   clearScreen: false&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; }&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;};&lt;br /&gt;&lt;br /&gt;function serve() {&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; let started = false;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; return {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   writeBundle() {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     if (!started) {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       started = true;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       require(&#39;child_process&#39;).spawn(&#39;npm&#39;, [&#39;run&#39;, &#39;start&#39;, &#39;--&#39;, &#39;--dev&#39;], {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         stdio: [&#39;ignore&#39;, &#39;inherit&#39;, &#39;inherit&#39;],&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         shell: true&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;       });&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; };&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jalankan kembali server development dengan perintah &lt;code&gt;$ npm run dev&lt;/code&gt; dan pesan kesalahan sudah menghilang.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/App.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Sekarang kita sudah dapat menggunakan data yang berasal dari &lt;code&gt;instagram.json&lt;/code&gt; dan untuk memastikan, kita akan menampilkan salah satu datanya.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import BigHeader from &#39;./components/BigHeader.svelte&#39;;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import data from &#39;./instagram.json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; export let hashtag;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;BigHeader hashtag={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;input type=&quot;text&quot; bind:value={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;pre&gt;{data.graphql.hashtag.edge_hashtag_to_media.edges[0].node.accessibility_caption}&amp;lt;/pre&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Iterasi Data Foto&lt;/h3&gt;
&lt;p&gt;Data sudah siap digunakan, sekarang saatnya kita menampilkan data tersebut dalam bentuk &lt;em&gt;list&lt;/em&gt; atau daftar. Kita akan buat sebuah komponen baru untuk menampilkan data foto-foto yang ada di instagram. Untuk melakukan iterasi dari data instagram, Svelte menggunakan notasi &lt;code&gt;{ # each}{/each}&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/components/PhotoList.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; data &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;../instagram.json&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; photos &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;graphql&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;hashtag&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edge_hashtag_to_media&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;edges&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    { #each photos as photo}&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;img&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;{photo.node.thumbnail_src}&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;thumbnail&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;{photo.node.edge_media_to_caption.edges[0].node.text}&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;li&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    {/each}&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;ul&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;code&gt;src/App.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Kemudian kita panggil komponen &lt;code&gt;PhotoList&lt;/code&gt; yang baru kita buat di komponen utama &lt;code&gt;App&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import BigHeader from &#39;./components/BigHeader.svelte&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import data from &#39;./instagram.json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import PhotoList from &#39;./components/PhotoList.svelte&#39;;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; export let hashtag;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;BigHeader hashtag={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;input type=&quot;text&quot; bind:value={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;pre&gt;{data.graphql.hashtag.edge_hashtag_to_media.edges[0].node.accessibility_caption}&amp;lt;/pre&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; &amp;lt;PhotoList /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/style&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hasilnya seperti berikut. Semua data yang dibutuhkan sudah kita dapatkan meskipun secara tampilan masih biasa saja.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/photolist.png&quot; alt=&quot;photolist&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;CSS&lt;/h3&gt;
&lt;p&gt;Sekarang saatnya &#39;mendandani&#39; aplikasi kita dengan CSS. Di Svelte, ada beberapa opsi menggunakan CSS. Opsi pertama adalah menggunakan &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; seperti yang sudah kita lihat sebelumnya. Sedikit berbeda dengan &lt;em&gt;style&lt;/em&gt; di HTML yang sifatnya global, &lt;em&gt;style&lt;/em&gt; seperti yang kita gunakan sifatnya lokal per komponen. Misalkan saya memiliki &lt;em&gt;styling&lt;/em&gt; untuk &lt;code&gt;h1&lt;/code&gt; di komponen &lt;code&gt;App&lt;/code&gt; maka yang berubah hanyalah &lt;code&gt;h1&lt;/code&gt; yang berada di komponen &lt;code&gt;App&lt;/code&gt;. Komponen lainnya yang juga memiliki &lt;code&gt;h1&lt;/code&gt; tidak akan terkena efeknya.&lt;/p&gt;
&lt;h5&gt;&lt;code&gt;src/App.svelte&lt;/code&gt;&lt;/h5&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;main&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;BigHeader hashtag={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;input type=&quot;text&quot; bind:value={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;h1&gt;Photos&amp;lt;/h1&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;PhotoList /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;style&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  h1 {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    color: #57A71C;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  }&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/style&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Maka yang terkena efeknya hanyalah &lt;code&gt;h1&lt;/code&gt; yang ada di komponen &lt;code&gt;App&lt;/code&gt;, sedangkan &lt;code&gt;h1&lt;/code&gt; yang ada dikomponen lain seperti di &lt;code&gt;BigHeader&lt;/code&gt; tidak terkena efeknya. Begitu pula sebaliknya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/scoped.png&quot; alt=&quot;scoped&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Nah jika ingin menambahkan CSS yang sifatnya global, berlaku untuk seluruh aplikasi, kita bisa menambahkan tag &lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot;&amp;gt;&amp;lt;/link&amp;gt;&lt;/code&gt; sebagaimana biasanya. Kita bisa menambahkan CSS tersebut di &lt;code&gt;public/index.html&lt;/code&gt; di bagian &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; atau kita bisa melakukannya di level komponen dengan tag spesial &lt;code&gt;&amp;lt;svelte:head&amp;gt;&amp;lt;/svelte:head&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/components/PhotoList.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; import data from &#39;../instagram.json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; const photos = data.graphql.hashtag.edge_hashtag_to_media.edges;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;svelte:head&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;link href=&quot;./PhotoList.css&quot; rel=&quot;stylesheet&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/svelte:head&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;div&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;ul&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    { #each photos as photo}&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kemudian kita menambahkan sebuah file &lt;code&gt;PhotoList.css&lt;/code&gt; di folder &lt;code&gt;public/&lt;/code&gt;. Ya, file &lt;code&gt;PhotoList.css&lt;/code&gt; harus berada di folder &lt;code&gt;public/&lt;/code&gt; atau satu level dengan file &lt;code&gt;index.html&lt;/code&gt; yang juga ada di folder yang sama.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;public/PhotoList.css&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #c0ffee&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Maka secara otomatis seluruh tag &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; yang ada di aplikasi akan berubah warna latarnya atau dengan kata lain CSS berlaku secara global.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/background.png&quot; alt=&quot;background&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Menggunakan CSS Framework&lt;/h3&gt;
&lt;p&gt;Tenang saja, kita tidak akan menulis CSS dari awal seperti contoh diatas. Kita akan menggunakan CSS framework dalam hal ini kita akan menggunakan &lt;a href=&quot;https://bulma.io/&quot;&gt;Bulma&lt;/a&gt; dan akan digunakan secara global seperti contoh diatas untuk mempersingkat tutorial ini.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/components/PhotoList.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  import data from &#39;../instagram.json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  const photos = data.graphql.hashtag.edge_hashtag_to_media.edges;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  function truncate_words(text, length) {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    if (text.length &amp;lt;= length) {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      return text;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    } else {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      return `${text.slice(0, length)}...`;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  }&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;svelte:head&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;link href=&quot;./PhotoList.css&quot; rel=&quot;stylesheet&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/svelte:head&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;div&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;ul&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    { #each photos as photo}&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;li&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;div class=&quot;container photolist&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  { #each photos as photo}&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    &amp;lt;div class=&quot;card&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;figure class=&quot;image&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;        &amp;lt;img src=&quot;{photo.node.thumbnail_src}&quot; alt=&quot;thumbnail&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;        &amp;lt;p&gt;{photo.node.edge_media_to_caption.edges[0].node.text}&amp;lt;/p&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;/li&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    {/each}&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;/ul&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;/figure&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;div class=&quot;card-content&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;        &amp;lt;div class=&quot;content&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;          &amp;lt;p&gt;{truncate_words(photo.node.edge_media_to_caption.edges[0].node.text, 200)}&amp;lt;/p&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;        &amp;lt;/div&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      &amp;lt;/div&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    &amp;lt;/div&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  {/each}&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/div&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;style&gt;&amp;lt;/style&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;style&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  .container {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    display: grid;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    grid-gap: 0.5em;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  .card {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    max-width: 90%;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    height: max-content;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    border: 1px solid #cacaca;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    box-shadow: 5px 5px 5px 0px rgba(202, 202, 202, 1);&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/style&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Supaya lebih rapi, kita pindahkan &lt;code&gt;&amp;lt;svelte:head&amp;gt;&lt;/code&gt; ke komponen utama &lt;code&gt;App&lt;/code&gt;. Kemudian kita bisa menggunakan beberapa &lt;em&gt;class&lt;/em&gt; yang sudah disediakan oleh Bulma seperti container, card dan lain sebagainya. Sekaligus kita juga menambahkan beberapa &lt;em&gt;style&lt;/em&gt; tersendiri.&lt;/p&gt;
&lt;p&gt;Dan supaya deskripsi foto tidak terlalu panjang, kita juga membuat fungsi &lt;em&gt;helper&lt;/em&gt; dengan nama &lt;code&gt;truncate_words&lt;/code&gt; yang fungsinya kita definisikan di bagian &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; dengan JavaScript tentunya.&lt;/p&gt;
&lt;h4&gt;&lt;code&gt;src/App.svelte&lt;/code&gt;&lt;/h4&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  export let hashtag;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;svelte:head&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;link href=&quot;https://cdnjs.cloudflare.com/ajax/libs/bulma/0.8.0/css/bulma.min.css&quot; rel=&quot;stylesheet&quot; /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;/svelte:head&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;main class=&quot;container&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;BigHeader hashtag={hashtag} /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  &amp;lt;PhotoList /&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/main&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token deleted-arrow deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;style&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;/style&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Berikut hasilnya. Lumayan keren kan ya? Kita lanjutkan pembelajaran kita dengan mengambil data langsung dari instagram.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/svelte/css.png&quot; alt=&quot;css&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Siklus Hidup Komponen Svelte&lt;/h3&gt;
&lt;p&gt;Sebagaimana komponen framework lainnya, komponen yang dibuat dengan Svelte juga memiliki siklus hidup.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onMount&lt;/code&gt;: akan dieksekusi ketika komponen di-&lt;em&gt;render&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onDestroy&lt;/code&gt;: akan dieksekusi setelah komponen dihancurkan atau &lt;em&gt;destroy&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beforeUpdate&lt;/code&gt;: akan dieksekusi sebelum DOM di &lt;em&gt;update&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;afterUpdate&lt;/code&gt;: akan dieksekusi setelah DOM di &lt;em&gt;update&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sebelumnya kita sudah menampilkan data dari file JSON yang kita unduh dari instagram. Sekarang kita akan melakukan pengambilan data secara langsung yang akan dieksekusi ketika komponen di-&lt;em&gt;render&lt;/em&gt; atau menggunakan &lt;code&gt;onMount&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&amp;lt;script&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  import data from &#39;../instagram.json&#39;;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  const photos = data.graphql.hashtag.edge_hashtag_to_media.edges;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  import { onMount } from &#39;svelte&#39;;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  let photos = [];&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  onMount(async function() {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    try {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      const res = await fetch(`https://www.instagram.com/explore/tags/ceritanyadeveloper/?__a=1`);&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      const data = await res.json();&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      photos = data.graphql.hashtag.edge_hashtag_to_media.edges;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    } catch (err) {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;      console.error(err);&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    }&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  });&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;  function truncate_words(text, length) {&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;    if (text.length &amp;lt;= length) {&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika dilihat di browser, hasilnya pun nyaris sama dengan tampilan sebelumnya, bedanya sekarang data didapat langsung dari instagram. Dan terdapat keterlambatan beberapa waktu sebelum data ditampilkan. Hal ini terjadi karena untuk mengambil data dari internet dibutuhkan waktu dan merupakan sesuatu yang sifatnya &lt;em&gt;asynchronous&lt;/em&gt;.&lt;/p&gt;
&lt;video loop=&quot;&quot; autoplay=&quot;&quot; style=&quot;width: 100%&quot;&gt;
  &lt;source src=&quot;https://rizafahmi.com/assets/images/svelte/fetch.mov&quot; /&gt;
&lt;/video&gt;
&lt;h3&gt;Peluncuran atau Deployment&lt;/h3&gt;
&lt;p&gt;Cara termudah untuk meluncurkan aplikasi atau &lt;em&gt;deployment&lt;/em&gt; svelte adalah dengan alat bantu seperti Netlify, Now (namanya berganti menjadi Vercel sekarang), Surge ataupun servis sejenis. Tinggal jalankan perintah &lt;code&gt;$ npx now&lt;/code&gt; dan selesai. Semudah itu! Silakan langsung kunjungi &lt;a href=&quot;https://sveltagram.now.sh/&quot;&gt;https://sveltagram.now.sh&lt;/a&gt;. Atau silakan cek kodenya di &lt;a href=&quot;https://github.com/rizafahmi/sveltagram&quot;&gt;https://github.com/rizafahmi/sveltagram&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Selanjutnya&lt;/h2&gt;
&lt;p&gt;Untuk mempelajari lebih lanjut tentang Svelte, teman-teman bisa mengikuti dua kelas online dari saya berikut ini:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/BWASVELTE&quot;&gt;Kelas Online Svelte - BuildWithAngga&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/BWAFUNDING&quot;&gt;Kelas Online Svelte Membuat Aplikasi Galang Dana - BuildWithAngga&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Rekursi: Fungsi Yang Memanggil Dirinya Sendiri</title>
    <link href="https://rizafahmi.com/2020/03/26/rekursi-atau-recursion/"/>
    <updated>2020-03-26T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/03/26/rekursi-atau-recursion/</id>
    <content type="html">&lt;p&gt;Di artikel ini kita akan mempelajari salah satu dari konsep fundamental dari ilmu komputer, rekursi atau &lt;em&gt;recursion&lt;/em&gt;. Rekursi sederhananya adalah fungsi yang memanggil fungsi tersebut atau dirinya sendiri. Namun tidak berhenti disitu saja, ada beberapa aspek yang harus dibahas sebelum kita menggunakan rekursi di kode kita.&lt;/p&gt;
&lt;p&gt;Menurut saya pribadi, rekursi ini penting dan tidak penting. Penting karena kita bisa menciptakan solusi yang elegan untuk menerapkan D.R.Y atau (&lt;em&gt;don&#39;t repeat yourself&lt;/em&gt;). Selain itu, rekursi adalah salah satu pengetahuan fundamental yang sangat diharapkan dikuasai oleh kita sebagai developer. Dan yang tidak kalah penting adalah banyak sekali algoritma diluar sana yang menggunakan rekursi sehingga dengan memahaminya, secara tidak langsung kita bisa mengerti algoritma yang menggunakan rekursi.&lt;/p&gt;
&lt;p&gt;Namun sebenarnya pun tanpa rekursi pun kita bisa saja menggunakan perulangan untuk menciptakan solusi yang sama, namun dengan cara yang kurang elegan. Kembali menurut saya, setidaknya mengerti cara kerja rekursi adalah hal yang sangat krusial meskipun kita masih jarang menggunakannya.&lt;/p&gt;
&lt;p&gt;Mari kita buat sebuah fungsi penghitung mundur. Tentu fungsi ini dapat dengan mudah kita buat dengan menggunakan perulangan, nanum untuk keperluan pembelajaran kita akan membuat versi rekursinya.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jika dijalankan, maka akan menghasilkan keluaran sebagai berikut.&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;10&lt;br /&gt;9&lt;br /&gt;8&lt;br /&gt;7&lt;br /&gt;6&lt;br /&gt;5&lt;br /&gt;4&lt;br /&gt;3&lt;br /&gt;2&lt;br /&gt;1&lt;br /&gt;0&lt;br /&gt;-1&lt;br /&gt;-2&lt;br /&gt;-3&lt;br /&gt;-4&lt;br /&gt;-5&lt;br /&gt;-6&lt;br /&gt;-7&lt;br /&gt;-8&lt;br /&gt;-9&lt;br /&gt;-10&lt;br /&gt;-11&lt;br /&gt;-12&lt;br /&gt;-13&lt;br /&gt;-14&lt;br /&gt;-15&lt;br /&gt;-16&lt;br /&gt;-17&lt;br /&gt;....&lt;br /&gt;&lt;br /&gt;RangeError: Maximum call stack size exceeded&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fungsi rekursi diatas akan menghasilkan &lt;em&gt;infinite loop&lt;/em&gt; hingga sumber daya komputer kita habis dan berhenti. Mengapa hal ini bisa terjadi? Karena kita berasumsi bahwa proses menghitung mundur akan berhenti jika mencapai angka 0 kan? Salah besar, karena contoh diatas akan terus berjalan menuju angka negatif.&lt;/p&gt;
&lt;p&gt;Ada dua aspek yang harus dimiliki oleh fungsi rekursi. Sebuah fungsi rekursi harus &lt;em&gt;mengetahui kapan harus berhenti&lt;/em&gt; dan &lt;em&gt;kapan harus memanggil dirinya kembali&lt;/em&gt;. Fungsi &lt;code&gt;countdown()&lt;/code&gt; diatas sudah memanggil dirinya sendiri berulang kali hingga tak terhingga. Namun masih kurang aspek kapan harus berhenti. Sekarang kita akan menambahkan kondisi kapan fungsi &lt;code&gt;countdown()&lt;/code&gt; ini harus berhenti.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;countdown&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan jika kita eksekusi maka hasilnya akan sesuai keinginan kita.&lt;/p&gt;
&lt;pre class=&quot;language-txt&quot;&gt;&lt;code class=&quot;language-txt&quot;&gt;$ node countdown.js&lt;br /&gt;10&lt;br /&gt;9&lt;br /&gt;8&lt;br /&gt;7&lt;br /&gt;6&lt;br /&gt;5&lt;br /&gt;4&lt;br /&gt;3&lt;br /&gt;2&lt;br /&gt;1&lt;br /&gt;0&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Contoh Penggunaan Rekursi&lt;/h2&gt;
&lt;h3&gt;Fungsi Faktorial&lt;/h3&gt;
&lt;p&gt;Sekarang kita akan melihat salah satu contoh populer penggunaan rekursi, yaitu
faktorial. Faktorial adalah sebuah fungsi permutasi dari bilangan bulat positif
yang menggunakan notasi &lt;code&gt;n!&lt;/code&gt;. Faktorial akan mengalikan bilangan dengan bilangan
berikutnya hingga terakhir dikalikan angka 1. Faktorial mengikuti rumus berkikut.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;n! = n * (n-1) * (n-2) * (n-3) * ... * 3 * 2 * 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Contoh, jika kita ingin mendapatkan faktorial dari 5.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;5! = 5 * 4 * 3 * 2 * 1 = 120&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Mari kita buat sebuah algoritma faktorial dengan perulangan terlebih dahulu.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;computeFactorial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; results &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    results &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; results &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; i&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; results&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;computeFactorial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hasilnya tentu saja 120 apabila dijalankan. Dan sekarang mari kita membuat sebuah algoritma faktorial dengan menggunakan rekursi.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculateFactorial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; num &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculateFactorial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;calculateFactorial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mari kita review penggunaan rekuris dari fungsi faktorial diatas. Fungsi rekursi
yang kita buat memiliki fungsi yang memanggil dirinya sendiri di baris ke-5
tepatnya dan juga fungsi juga mengetahui kapan harus berhenti, tepatnya ada di
baris ke-3.&lt;/p&gt;
&lt;p&gt;Sayangnya JavaScript sebagai bahasa belum memiliki fitur semacam pencocokan pola
atau &lt;em&gt;pattern matching&lt;/em&gt; layaknya bahasa pemrograman fungsional. Jika punya, kode
diatas dapat kita buat menjadi lebih elegan 😎 seperti contoh dibawah ini dengan
menggunakan bahasa pemrograman &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt; yang merupakan bahasa pemrograman fungsional.&lt;/p&gt;
&lt;pre class=&quot;language-elixir&quot;&gt;&lt;code class=&quot;language-elixir&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;token module class-name&quot;&gt;Factorial&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;when&lt;/span&gt; num &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;do&lt;/span&gt;&lt;br /&gt;    num &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calculate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;num &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;end&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token module class-name&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;inspect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token module class-name&quot;&gt;Factorial&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;calculate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Fungsi Memutarbalikkan Array&lt;/h3&gt;
&lt;p&gt;Sebagai latihan, kita akan membuat sebuah fungsi yang menerima sebuah array dan
membalikkan isinya dari akhir ke awal dengan rekursi tentu saja. Misalkan saya
memiliki sebuah array &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt; dan akan menghasilkan &lt;code&gt;[6, 5, 4, 3, 2, 1]&lt;/code&gt;. Untuk memudahkan proses pembuatan algoritma, saya akan menulis testing
terlebih dahulu.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// reverse.test.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reverse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;./reverse.js&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;reverse array items, recursively&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan sekarang kita akan menulis kode implementasinya seperti berikut.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// reverse.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;arr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; newArr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  newArr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;arr&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; newArr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;newArr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; newArr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;arr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; newArr&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; reverse&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kode implementasi diatas bukanlah cara satu-satunya untuk menyelesaikan masalah
memutarbalikkan isi dari array. Ada banyak cara lainnya. Ini adalah cara yang
&lt;em&gt;kepikiran&lt;/em&gt; aja saat artikel ini ditulis 😃.&lt;/p&gt;
&lt;h2&gt;Kesimpulan&lt;/h2&gt;
&lt;p&gt;Rekursi adalah sebuah cara elegan untuk menyelesaikan beberapa masalah dalam
pemrograman. Rekursi juga merupakan salah satu kemampuan fundamental yang
diharapkan sudah dikuasai oleh teman-teman yang ingin terjun ke dunia
pemrograman. Maka tak heran jika beberapa pertanyaan terkait rekursi akan muncul
ketika kita melakukan &lt;em&gt;coding interview&lt;/em&gt; di perusahaan teknologi.&lt;/p&gt;
&lt;p&gt;Beberapa konsep struktur data pun seringkali menggunakan rekursi. Hal ini akan
kita bahas lain waktu.&lt;/p&gt;
&lt;p&gt;Selamat belajar!&lt;/p&gt;
&lt;h2&gt;Referensi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.manning.com/books/grokking-algorithms&quot;&gt;Buku &#39;Grokking Algorithms: An illustrated guide for programmers and other curious people&#39;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/data-structures-algorithms/&quot;&gt;Video &#39;FrontendMasters Data Structures and Algorithms in JavaScript, Bianca Gandolfo&#39;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Notasi O Besar atau Big-O Notation</title>
    <link href="https://rizafahmi.com/2020/03/21/notasi-o-besar-big-o-notation/"/>
    <updated>2020-03-21T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/03/21/notasi-o-besar-big-o-notation/</id>
    <content type="html">&lt;p&gt;Ketika kita memikirkan apakah barisan kode yang kita ciptakan sudah cukup &amp;quot;cepat&amp;quot; atau efisien dalam memecahkan masalah yang ingin kita pecahkan, maka kita butuh sebuah metodologi untuk menghitungnya. Salah satu alat bantu yang bisa kita gunakan adalah notasi O besar atau &lt;em&gt;Big-O Notation&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ini juga berarti kita ingin menghitung kompleksitas dari sebuah kode. Ada dua dimensi dalam menghitung kompleksitas kode. Pertama adalah kompleksitas ruang atau &lt;em&gt;space complexity&lt;/em&gt; yang berkaitan dengan berapa banyak ruang yang digunakan seperti memori ataupun harddisk komputer. Kedua adalah kompleksitas waktu atau &lt;em&gt;time complexity&lt;/em&gt; yang berkaitan berapa lama baris kode dijalankan.&lt;/p&gt;
&lt;p&gt;Kenapa dibutuhkan sebuah metode untuk menghitung efisiensi kode? Karena kita tidak bisa hanya mengatakan bahwa kumpulan kode ini dapat dijalankan selama lima detik. Padahal sangat banyak faktor penentu lainnya seperti jumlah datanya, koneksi, latensi, jumlah memori, kecepatan prosesor dan masih banyak yang lainnya.&lt;/p&gt;
&lt;p&gt;Karena itu kita butuh alat ukur untuk menghitung efisiensi kode secara relatif seperti notasi O besar ini.&lt;/p&gt;
&lt;h1&gt;Sekilas Tentang Notasi O Besar&lt;/h1&gt;
&lt;p&gt;Notasi O besar atau yang lazim disebut dengan Big-O Notation adalah sebuah cara atau metode untuk melakukan analisa terhadap sebuah algoritma pemrograman terhadap waktu eksekusi. Tentang seberapa efisien dan kompleksitas barisan kode dalam dimensi waktu.&lt;/p&gt;
&lt;p&gt;Di dalam sebuah program komputer pada umumnya, kita sudah lazim dengan istilah masukan-proses-keluaran.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/notasi/input.png&quot; alt=&quot;input, proses, output&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Notasi O besar merupakan skenario terburuk dari sebuah algoritma, dan biasanya terdapat notasi &lt;em&gt;n&lt;/em&gt; yang merepresentasikan jumlah masukan. Berikut adalah diagram notasi O besar dengan masukan yang dimulai dari 0 hingga tak terhingga.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/notasi/grafikcopy.png&quot; alt=&quot;grafik&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dari diagram diatas dapat kita lihat beberapa notasi yang kerap muncul, yaitu: O&lt;sub&gt;(1)&lt;/sub&gt;, O&lt;sub&gt;(log n)&lt;/sub&gt;, O&lt;sub&gt;(n)&lt;/sub&gt;, O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt; atau O&lt;sub&gt;(n&lt;sup&gt;n&lt;/sup&gt;)&lt;/sub&gt;. Untuk membahasnya, mari kita berandai-andai membangun sebuah aplikasi travel. Dan kita diminta untuk membuat fitur baru yang menampilkan daftar kisaran harga dari hotel-hotel yang berada di area tertentu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/notasi/kayak.png&quot; alt=&quot;kayak&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Untuk membuat fitur tersebut, sederhananya kita mencari harga terendah (min) dan harga tertinggi (max) dari daftar hotel. Tentunya semakin banyak datanya, akan semakin lama pula proses untuk mencari harga terendah dan tertinggi.&lt;/p&gt;
&lt;p&gt;Dan berikut versi sederhana dari representasi data yang akan kita gunakan. Kita akan menggunakan JavaScript sebagai contoh. Dapat juga diaplikasikan ke bahasa pemrograman lain.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hotels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; price&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; brand&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hotel Tugu Lombok&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; price&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;78&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; brand&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sheraton Senggigi Beach Resort&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; price&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;317&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; brand&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;The Oberio&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Pengulangan di Dalam Pengulangan: O&lt;sub&gt;(N&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/h2&gt;
&lt;p&gt;Sekarang, bagaimana caranya mencari harga terendah dan tertinggi? Cara yang paling naif adalah dengan membandingkan harga satu-per-satu. Berikut potongan kode sebagai ilustrasi.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; hotels&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; hotels&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// kode untuk membandingkan satu harga dengan harga lainnya...&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mari kita simulasikan ketika jumlah data semakin banyak.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;n&lt;/th&gt;
&lt;th&gt;3&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;10&lt;/th&gt;
&lt;th&gt;100&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jumlah Operasi&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;10000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Lihat tabel diatas, antara 3 dan 5 cukup dekat perbedaannya hanya dua. Namun jumlah operasi yang dijalankan sangat signifikan bedanya. Semakin banyak datanya semakin signifikan jumlah operasi yang dijalankan.&lt;/p&gt;
&lt;p&gt;Dengan kata lain kita membutuhkan n&lt;sup&gt;2&lt;/sup&gt; dan untuk mencari harga terendah (min) dan harga tertinggi (max). Itulah sebabnya kita menyebutnya dengan notasi &lt;strong&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/strong&gt;. Algoritma seperti ini sangatlah lambat dan tidak optimal.&lt;/p&gt;
&lt;h2&gt;Pengulangan Dari Sebuah Set: O&lt;sub&gt;(N)&lt;/sub&gt;&lt;/h2&gt;
&lt;p&gt;Jika solusi pertama tidak optimal, adakah solusi lain? Tentu. Misalnya kita bisa mencari apakah harga adalah yang terendah atau tertinggi dalam satu kali pengulangan saja seperti ilustrasi kode berikut.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; hotels&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// cari harga paling kecil...&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// cari harga paling besar...&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ketika kita membutuhkan proses &amp;quot;pengulangan untuk setiap item&amp;quot;, merupakan notasi &lt;strong&gt;O&lt;sub&gt;(N)&lt;/sub&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;Hanya Satu Operasi: O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/h2&gt;
&lt;p&gt;Jika dengan asumsi bahwa data &lt;code&gt;hotels&lt;/code&gt; sudah diurutkan berdasarkan harga terendah ke harga tertinggi, maka pencarian harga terendah dan tertinggi menjadi semakin efisien.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; hotels &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; price&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;78&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; brand&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Sheraton Senggigi Beach Resort&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; price&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;180&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; brand&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Hotel Tugu Lombok&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; price&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;317&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; brand&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;The Oberio&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mendapatkan harga terendah, kita tinggal memanggil &lt;code&gt;hotels[0].price&lt;/code&gt;. Sementara untuk harga tertinggi kita bisa menggunakan &lt;code&gt;hotels[hotels.length-1].price&lt;/code&gt;. Selain lebih mudah, eksekusi baris kode juga menjadi lebih cepat dan efisien.&lt;/p&gt;
&lt;p&gt;Ketika kode menjalankan sebuah operasi, misalkan: &lt;em&gt;baris kode untuk mencari item barang teratas&lt;/em&gt; atau &lt;em&gt;mendapatkan nilai sebuah array dengan indeks ke-5&lt;/em&gt;. Operasi seperti ini kita bisa sebut sebagai notasi O&lt;sub&gt;(1)&lt;/sub&gt;.&lt;/p&gt;
&lt;p&gt;Tidak masalah sebanyak apapun isi dari sebuah array atau sebanyak apapun jumlah baris di basis data, untuk mengambil nilai array dengan mengakses indeks maka algoritma berjalan secara konstan atau &lt;em&gt;constant time&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Kita sudah melihat beberapa contoh algoritma untuk menampilkan kisaran harga dari yang terendah hingga tertinggi dan hasilnya sebagai berikut.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Notasi O&lt;/th&gt;
&lt;th&gt;Istilah Lain&lt;/th&gt;
&lt;th&gt;Jumlah Operasi&lt;/th&gt;
&lt;th&gt;Algoritma&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Quadratic&lt;/td&gt;
&lt;td&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt;
&lt;td&gt;Komparasi seluruh harga. Pengulangan dalam pengulangan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Linear&lt;/td&gt;
&lt;td&gt;2n&lt;/td&gt;
&lt;td&gt;Mencari harga terendah dan tertinggi. 1 kali pengulangan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Constant&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Asumsi sudah diurut berdasarkan harga, tinggal mencari elemen pertama dan elemen terakhir&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Dan secara umum berikut urutan dari notasi O besar diurutkan dari yang tercepat hingga yang terpelan.&lt;/p&gt;
&lt;p&gt;&amp;lt;--- Super Cepat --------------------------------------- Super Lambat ---------&amp;gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;em&gt;Nama&lt;/em&gt;&lt;/th&gt;
&lt;th&gt;Constant&lt;/th&gt;
&lt;th&gt;Logaritmic&lt;/th&gt;
&lt;th&gt;Linear&lt;/th&gt;
&lt;th&gt;Quadratic&lt;/th&gt;
&lt;th&gt;Exponential&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Notasi&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;O&lt;sub&gt;(log n)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;O&lt;sub&gt;(n&lt;sup&gt;n&lt;/sup&gt;)&lt;/sub&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/notasi/grafikcopy.png&quot; alt=&quot;grafik&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;subscription-box bg-green&quot;&gt;
  &lt;h3&gt;Kelas Online Struktur Data dengan JavaScript - BuildWithAngga.com&lt;/h3&gt;
  &lt;div&gt;
    &lt;img style=&quot;width:25%&quot; src=&quot;https://www.buildwithangga.com/storage/assets/thumbnails/thumbnail%20alur%20belajar%20menjadi%20front%20end%20developer%20buildwith%20angga.png&quot; /&gt;
    &lt;p&gt;Kelas online Struktur Data dengan JavaScript ini akan membahas berbagai macam struktur data. Mulai dari struktur data fundamental seperti array dan object literal, kemudian struktur data stack dan queue, hingga struktur data linked list.&lt;/p&gt;
    &lt;div class=&quot;my-2&quot;&gt;
    &lt;a class=&quot;color-black button&quot; href=&quot;https://www.buildwithangga.com/kelas/struktur-data-dengan-javascript&quot; target=&quot;_blank&quot;&gt;Ikuti Kelas&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Beberapa Contoh Notasi O Besar&lt;/h2&gt;
&lt;p&gt;Mari kita melihat contoh notasi O besar dari fungsi, ekspresi dan operasi JavaScript yang sederhana.&lt;/p&gt;
&lt;h3&gt;1. Array.push()&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;push()&lt;/code&gt; merupakan sebuah metode untuk menambahkan item baru kedalam sebuah array. Item yang ditambahkan akan berada diakhir array tersebut. Contoh penggunaan dapat dilihat sebagai berikut.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; animals &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;ants&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;goats&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cows&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;animals&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fish&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;animals&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// [&#39;ants&#39;, &#39;goats&#39;, &#39;cows&#39;, &#39;fish&#39;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Apakah notasi yang tepat untuk baris kode &lt;code&gt;animals.push(&#39;fish&#39;);&lt;/code&gt;? Karena metode &lt;code&gt;push()&lt;/code&gt; tidak peduli dengan seberapa banyak atau sedikit jumlah item yang ada, artinya operasi yang berjalan tetap sama, maka metode &lt;code&gt;push()&lt;/code&gt; ini dapat diwakilkan dengan notasi &lt;strong&gt;O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/strong&gt; atau &lt;strong&gt;konstan&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;2. Array.pop()&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pop()&lt;/code&gt; merupakan sebuah metode yang mengambil item terakhir dari array sehingga jumlah item yang ada di array akan berkurang satu. Berikut contoh penggunaannya.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; plants &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;broccoli&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cauliflower&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;cabbage&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;tomato&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;plants&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;plants&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// [&quot;broccoli&quot;, &quot;cauliflower&quot;, &quot;cabbage&quot;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Apakah notasi yang tepat untuk baris kode &lt;code&gt;plants.pop();&lt;/code&gt;? Mirip seperti metode &lt;code&gt;push()&lt;/code&gt; diatas, metode &lt;code&gt;pop()&lt;/code&gt; juga tidak mempermasalahkan jumlah item yang ada, artinya operasi yang berjalan tetap sama, maka metode &lt;code&gt;pop()&lt;/code&gt; ini juga dapat diwakilkan dengan notasi &lt;strong&gt;O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/strong&gt; atau &lt;strong&gt;konstan&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;3. Array.unshift()&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;unshift()&lt;/code&gt; adalah sebuah metode untuk menambahkan satu atau beberapa item ke bagian awal dari sebuah array. Contoh penggunaannya sebagai berikut.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; array1 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;array1&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;array1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// [4, 5, 1, 2, 3]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sekilas operasi &lt;code&gt;unshift()&lt;/code&gt; ini terlihat seperti operasi yang konstan seperti &lt;code&gt;push()&lt;/code&gt; dan &lt;code&gt;pop()&lt;/code&gt; namun jika kita melakukan implementasi ulang metode ini, maka akan terlihat notasi yang sebenarnya. Berikut kira-kira implementasi dari &lt;code&gt;unshift()&lt;/code&gt;, implementasi naif tentunya sekedar gambaran.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;arr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; newItem&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; newArr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  newArr&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newItem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    newArr&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; arr&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; newArr&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hal yang menambah kompleksitas adalah ketika kita harus mengubah indeks dari array karena kita akan menempatkan item baru di indeks ke-0. Secara otomatis indeks akan bergeser sebanyak satu langkah. Dan karena itu kita menggunakan pengulangan &lt;code&gt;for&lt;/code&gt; hingga menjadikan operasi &lt;code&gt;unshift()&lt;/code&gt; dapat diwakilkan oleh notasi &lt;strong&gt;linear&lt;/strong&gt; atau &lt;strong&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/strong&gt;. Kita harus menyadari apa yang dilakukan oleh sebuah fungsi, operasi ataupun pustaka sehingga kita dapat memprediksi kira-kira seberapa tingkat kompleksitasnya.&lt;/p&gt;
&lt;h2&gt;Menghitung Total Kompleksitas Kode&lt;/h2&gt;
&lt;p&gt;Setelah sebelumnya kita sudah menghitung kompleksitas satu baris kode, sekarang kita akan menghitung total keseluruhan untuk beberapa baris kode. Kita akan mulai dari contoh sederhana terlebih dahulu.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// O(n)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// O(n)&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// O(1)&lt;/span&gt;&lt;br /&gt;    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// O(1)&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kompleksitas potongan kode diatas dapat dihitung dengan mengalikan notasi-notasi setiap baris. Karena terdapat pengulangan bersarang, maka operasi yang digunakan adalah perkalian. Artinya hasil dari pengulangan bersarang tersebut adalah: &lt;strong&gt;O(n) * O(n) = O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Jika perintah yang berada di level yang sama seperti:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// O(1)&lt;/span&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// O(1)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Maka operasi yang akan kita lakukan adalah menjumlahkan. Sehingga untuk kedua perintah diatas hasilnya adalah &lt;strong&gt;O&lt;sub&gt;(1)&lt;/sub&gt; + O&lt;sub&gt;(1)&lt;/sub&gt; = O&lt;sub&gt;(2)&lt;/sub&gt;&lt;/strong&gt;. Jika digabungkan hasilnya menjadi &lt;strong&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt; O&lt;sub&gt;(2)&lt;/sub&gt;&lt;/strong&gt;. Namun biasanya untuk jenis kode diatas cukup dilambangkan dengan &lt;strong&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt; _ O&lt;sub&gt;(2)&lt;/sub&gt;&lt;/strong&gt; karena &lt;strong&gt;O&lt;sub&gt;(2)&lt;/sub&gt;&lt;/strong&gt; tidak signifikan perbedaannya.&lt;/p&gt;
&lt;p&gt;Mari kita lihat contoh kode berikutnya.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// O(n)&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token comment&quot;&gt;// O(n)&lt;/span&gt;&lt;br /&gt;  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Potongan kode deiatas dapat dilambangkan sebagai &lt;strong&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/strong&gt; ditambah dengan &lt;strong&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/strong&gt; sehingga menjadi &lt;strong&gt;O&lt;sub&gt;(2n)&lt;/sub&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;Kesimpulan&lt;/h1&gt;
&lt;p&gt;Sebagai kesimpulan, notasi O besar atau &lt;em&gt;Big-O Notation&lt;/em&gt; merupakan metode untuk menghitung kompleksitas dari potongan kode yang kita buat. Sehingga dapat menumbuhkan kesadaran kita untuk mencari alternatif yang lebih baik sebelum data semakin besar dan berdampak kepada performa aplikasi yang kita buat.&lt;/p&gt;
&lt;p&gt;Notasi O besar inipun tidak hanya semata berlaku di bagian kode yang kita tulis,
namun di &lt;em&gt;database&lt;/em&gt; pun berlaku. Jadi proses pengambilan data di database dengan
sintaksis SQL yang dapat dianggap sebagai proses perulangan akan sangat tidak
efektif jika di bagian algoritma kode kita kembali menggunakan perulangan. Maka
proses tersebut akan menjadi &lt;strong&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/strong&gt; karena
akan terdapat perulangan didalam perulangan.&lt;/p&gt;
&lt;p&gt;Begitu juga halnya jika kita mengambil data dengan tabel yang sudah diindeks.
Secara otomatis notasinya akan berubah dari &lt;strong&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/strong&gt;
menjadi &lt;strong&gt;O&lt;sub&gt;(log n)&lt;/sub&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/notasi/tanpa_index.png&quot; alt=&quot;tanpa index&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Tanpa menggunakan indeks database melakukan yang disebut dengan &amp;quot;Sequential
Scan&amp;quot;. Beberapa yang lain menyebutnya dengan istilah &amp;quot;Full Table Scan&amp;quot; yang
kurang-lebih melakukan perulangan setiap barisnya dan membandingkan dengan
argumen query yang kita tentukan.&lt;/p&gt;
&lt;p&gt;Dengan kata lain operasi &lt;em&gt;sequential&lt;/em&gt; seperti contoh diatas dapat kita beri
notasi &lt;strong&gt;O&lt;sub&gt;(n)&lt;/sub&gt;&lt;/strong&gt;. Seiring bertambahnya jumlah data,
efisiensi akan semakin menurun.&lt;/p&gt;
&lt;p&gt;Hal termudah untuk mengangkat performa untuk kasus ini adalah dengan menambahkan
indeks di tabel terkait dan kita dapat melihat perbedaan yang cukup signifikan
terutama ketika data sudah semakin banyak.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/notasi/dengan_index.png&quot; alt=&quot;dengan index&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Sehingga operasi diatas berubah notasinya menjadi &lt;strong&gt;O&lt;sub&gt;(log
n)&lt;/sub&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Hal yang menarik lainnya, &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt; sebuah &lt;em&gt;in-memory
database&lt;/em&gt; menyertakan notasi kompleksitas waktu di setiap perintah yang ada di
&lt;a href=&quot;https://redis.io/commands&quot;&gt;dokumentasinya&lt;/a&gt;. Contohnya dapat dilihat seperti
perintah &lt;a href=&quot;https://redis.io/commands/append&quot;&gt;append&lt;/a&gt;,
&lt;a href=&quot;https://redis.io/commands/del&quot;&gt;del&lt;/a&gt;, &lt;a href=&quot;https://redis.io/commands/lpush&quot;&gt;lpush&lt;/a&gt;,
dan masih banyak lagi yang lainnya.&lt;/p&gt;
&lt;p&gt;Sebagai penutup, berikut daftar kompleksitas kode dari operasi-operasi yang umum kita jumpai.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Kompleksitas&lt;/th&gt;
&lt;th&gt;Operasi&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Menjalankan sebuah perintah&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(1)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Mendapatkan sebuah item dari array, objek atau variabel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(log n)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Pengulangan yang berkurang setengahnya setiap iterasi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(n&lt;sup&gt;2&lt;/sup&gt;)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Pengulangan dalam pengulangan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;O&lt;sub&gt;(n&lt;sup&gt;3&lt;/sup&gt;)&lt;/sub&gt;&lt;/td&gt;
&lt;td&gt;Pengulangan dalam pengulangan dalam pengulangan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&quot;subscription-box bg-green&quot;&gt;
  &lt;h3&gt;Kelas Online Struktur Data dengan JavaScript - BuildWithAngga.com&lt;/h3&gt;
  &lt;div&gt;
    &lt;img style=&quot;width:25%&quot; src=&quot;https://www.buildwithangga.com/storage/assets/thumbnails/thumbnail%20alur%20belajar%20menjadi%20front%20end%20developer%20buildwith%20angga.png&quot; /&gt;
    &lt;p&gt;Kelas online Struktur Data dengan JavaScript ini akan membahas berbagai macam struktur data. Mulai dari struktur data fundamental seperti array dan object literal, kemudian struktur data stack dan queue, hingga struktur data linked list.&lt;/p&gt;
    &lt;div class=&quot;my-2&quot;&gt;
    &lt;a class=&quot;color-black button&quot; href=&quot;https://www.buildwithangga.com/kelas/struktur-data-dengan-javascript&quot; target=&quot;_blank&quot;&gt;Ikuti Kelas&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1&gt;Referensi&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://btholt.github.io/four-semesters-of-cs/&quot;&gt;Materi &#39;Four Semesters of Computer Science in Six Hours&#39;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Data-Structures-Algorithms-Understanding/dp/1484239873&quot;&gt;Buku &#39;JavaScript Data Structures and Algorithms, Sammie Bae&#39;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://frontendmasters.com/courses/data-structures-algorithms/&quot;&gt;Video &#39;FrontendMasters Data Structures and Algorithms in JavaScript, Bianca Gandolfo&#39;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>JavaScript Ecosystem in Indonesia</title>
    <link href="https://rizafahmi.com/2020/02/03/ekosistemjs/en/"/>
    <updated>2020-02-03T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/02/03/ekosistemjs/en/</id>
    <content type="html">&lt;p&gt;Original article in &lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/&quot;&gt; Bahasa Indonesia &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Translated by &lt;a href=&quot;mailto:ajeng.sugiarti@gmail.com&quot;&gt;Ajeng Sugiarti&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This article is going to discuss JavaScript ecosystem growth in Indonesia. Before going deep into the main topic though, let’s first talk about what this article refers to as an ecosystem. This topic is the one I delivered as a keynote session in JSDay 2019.&lt;/p&gt;
&lt;h2&gt;Table of Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#about-javascript-ecosystem&quot;&gt;About JavaScript Ecosystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#discussion-point-of-view&quot;&gt;Discussion Point of View&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#beginners-point-of-view&quot;&gt;Beginners Point of View&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#where-do-we-start&quot;&gt;Where Do We Start?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#which-framework&quot;&gt;Which Framework?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#books-or-literature-availability&quot;&gt;Books or Literature Availability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#online-courses&quot;&gt;Online Courses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#professionals-point-of-view&quot;&gt;Professionals Point of View&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#sample-applications&quot;&gt;Sample Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#tutorials-in-bahasa-indonesia&quot;&gt;Tutorials in Bahasa Indonesia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#tools-and-boilerplates&quot;&gt;Tools and Boilerplates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#how-to-use&quot;&gt;How to Use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#community-support&quot;&gt;Community Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#supporting-libraries&quot;&gt;Supporting Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#performance&quot;&gt;Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#job-vacancies&quot;&gt;Job Vacancies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#masters-point-of-view&quot;&gt;Masters Point of View&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#available-talents&quot;&gt;Available Talents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#maturity-level&quot;&gt;Maturity Level&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;About JavaScript Ecosystem&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;“An ecosystem is a community of living organisms and their interactions with their abiotic (non-living) environment.” — Ecology of ecosystems&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The ecosystem being mentioned here, among other things, refers to community, group, and discussions around tools, frameworks, and JavaScript in general. In this context, we’re going to talk about these four elements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learning resources such as articles, books, video tutorials, etcetera&lt;/li&gt;
&lt;li&gt;Tools like libraries, boilerplates, sample applications, and others&lt;/li&gt;
&lt;li&gt;Community support around those tools and also local communities&lt;/li&gt;
&lt;li&gt;This discussion would focus on the frontend side of JavaScript because the backend side of it is pretty straightforward.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Discussion Point of View&lt;/h2&gt;
&lt;p&gt;This article will divide the topic into three points of view. The first one is addressed for people who are just starting out, usually referred to as beginners. We’re going to try answering a few questions that would often pop out in beginners’ minds when starting to learn JavaScript. Then we’re also going to discuss JavaScript from the perspective of folks who already built some applications and want to learn new stuff, especially around web technology. Let’s use the term professionals for them. The last point of view is intended for decision-makers like Vice President, Chief Technology Officer, Team Lead, and so on so forth. We usually address them as masters’ point of view.&lt;/p&gt;
&lt;h2&gt;Beginners Point of View&lt;/h2&gt;
&lt;p&gt;This point of view is for you who’s a fresh graduate, a professional developer
with less than a year experience, and the one who got ‘trapped’. Trapped as in
you joined a company that’s already implementing some certain library or
framework and you got no choice than to work with it. We’re going to answer the
questions that would often pop out in a beginner’s mind.&lt;/p&gt;
&lt;h3&gt;Where Do We Start?&lt;/h3&gt;
&lt;p&gt;The question that often arises when we start to learn something is, where do we start? Let’s list out some of the questions on starting to learn JavaScript libraries or frameworks. But before that, make sure you already cover the basics of JavaScript itself, plus HTML and a little bit of CSS. If you feel you’re still behind, you can start with those topics first.
Next, we’re going to go with these questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Which framework should I learn?&lt;/li&gt;
&lt;li&gt;Which one is the most used in the surrounding environment? This is pretty important to consider for the ones who are just starting out.&lt;/li&gt;
&lt;li&gt;Then we’re also going to take a look at how many articles and books are available to support the learning process.&lt;/li&gt;
&lt;li&gt;And of course, we’re also going to explore how many online course video tutorials are available out there.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Which Framework?&lt;/h3&gt;
&lt;p&gt;There are a lot of options on JavaScript Frameworks. Sometimes for the ones who are just starting to learn, choosing a framework can be quite difficult. Some say that a particular framework is good. Others’ opinion says that another framework is faster and so on so forth. For this, I pick six options to choose from. These six frameworks are pretty different in characteristics that in my opinion could represent other frameworks available.&lt;/p&gt;
&lt;p&gt;The framework with comprehensive features will be represented by Angular and Ember, the ones with adequate features are React and Vue, and the library for DOM manipulation and quite popular in its time, jQuery. And the last one is the framework that compiles to vanilla JavaScript that potentially becomes a trend in the future, Svelte.&lt;/p&gt;
&lt;p&gt;From those six frameworks and libraries mentioned, let’s see how their ecosystems are with looking at the communities around those frameworks and libraries. Community plays an important role in supporting how we learn and how we advance. Here is the graph showing JavaScript communities in some cities from the data that I gathered. Of course, there are still a lot of other cities that have JavaScript communities but not mentioned here.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-23_at_08.54.48.png&quot; alt=&quot;Members of local communities in several cities in Indonesia&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We can see that MedanJS community has a total of 334 members even though currently they are on hiatus. BaliJS has 474 members, SurabayaJS has 510, and JogjaJS has 545. While the ones with most members are in Bandung with 2.500 members and Jakarta with almost 4.000 members.&lt;/p&gt;
&lt;p&gt;And here are the communities around frameworks that I managed to gather information on. I got three framework communities, for: Vue, Angular, and React.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-23_at_09.00.05.png&quot; alt=&quot;Members of framework communities in Indonesia&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Turned out framework communities are still dominated by React and Angular. While the Vue community is rather far behind React and Angular.&lt;/p&gt;
&lt;p&gt;The next data we’re going to see is the Facebook groups for each framework or library that I managed to find. All these groups are specifically in Bahasa Indonesia. I put information on total members, age of the group, and also the number of the discussion that happened yearly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-23_at_09.11.42.png&quot; alt=&quot;Age, members, and discussions per year&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The result is pretty interesting. The one with the most members is, of course, jQuery group, as it is one of the oldest libraries. jQuery itself has been developer’s companion since 2006 so it’s no wonder that it has the most members.&lt;/p&gt;
&lt;p&gt;While the most active group is, turned out, not the jQuery one. React, Angular and Vue groups are recorded with the most active members.&lt;/p&gt;
&lt;p&gt;At the same time, Svelte and Ember groups have the least number of members compared to other frameworks or libraries. Svelte is, of course, a relatively new framework. While Ember has a few members even though the group has been around for 4 years.&lt;/p&gt;
&lt;p&gt;One more data around communities is the discussion group in the &lt;a href=&quot;https://telegram.org/&quot;&gt; Telegram
&lt;/a&gt; chat platform that is pretty interesting especially for the
ones that are started getting serious into learning programming.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-23_at_09.14.04.png&quot; alt=&quot;Members and discussions on Telegram groups&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In Telegram, I also just managed to find three communities, which are Angular, Vue, and React. This data is gathered with the help of a Telegram chatbot called carikbot. I also got data about the number of members joined and the discussions happening around August until mid-September of 2019.&lt;/p&gt;
&lt;p&gt;The one with the most active and most members is React, with Vue and Angular following behind it.&lt;/p&gt;
&lt;h3&gt;Books or Literature Availability&lt;/h3&gt;
&lt;p&gt;And in this section, we’re going to talk about literature availability, in this case, books. The question is, are books still relevant as a learning resource? Especially book in Bahasa Indonesia. Personally, I think they are still relevant. Especially for students who want to learn and use some particular framework or library in their final project. Isn’t it great when there are books that could be used as a learning reference and properly quoted for the thesis or final project report?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-23_at_09.18.05.png&quot; alt=&quot;Number of books available in Bahasa Indonesia&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Perhaps some of us could already guess the result. It’s rather sad because the number of books available is very limited. This is only for books in Bahasa Indonesia. To get this data, I did some research from Gramedia online and Google. For available physical books, jQuery is the library with the most resources. While other frameworks still got very few.&lt;/p&gt;
&lt;p&gt;Unsatisfied with the physical book result, I also did some research for the e-books in Bahasa Indonesia, which is actually quite interesting. For e-book format, Angular has two books, but still on Angular version 1 which is quite different from the current latest version of Angular. There are also only a few available e-books about Vue and React.&lt;/p&gt;
&lt;h3&gt;Online Courses&lt;/h3&gt;
&lt;p&gt;Next, we’re going to talk about online course videos. I limit the scope here for the ones that are quite comprehensive and have learning paths. Not some random video tutorials in Bahasa Indonesia that are available on &lt;a href=&quot;https://youtube.com/rizafahmi&quot;&gt; Youtube &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are some online course video platforms that have programming courses, specifically about JavaScript and its frameworks. There are &lt;a href=&quot;https://malescast.com/&quot;&gt; malescast &lt;/a&gt;, &lt;a href=&quot;https://dumbways.id/&quot;&gt; dumbways &lt;/a&gt;, &lt;a href=&quot;https://idrails.com/&quot;&gt; idrails &lt;/a&gt;, &lt;a href=&quot;https://sekolahkoding.com/&quot;&gt; sekolah koding &lt;/a&gt;, and also &lt;a href=&quot;https://kode.id/&quot;&gt;KODE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-25_at_17.46.27.png&quot; alt=&quot;Number of JavaScript materials in each platform&quot; /&gt;&lt;/p&gt;
&lt;p&gt;As we can see, the most productive one that made online course videos about JavaScript is sekolah koding, since it’s founded from way back in 2016. Dumbways has more materials around React framework. While malescast is more focused on making resources about Vue. idrails has materials around Vue and react.&lt;/p&gt;
&lt;p&gt;Next, we’re going to see the number of viewers categorized based on libraries and frameworks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-25_at_17.51.13.png&quot; alt=&quot;Total views for each framework/library&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Turned out, jQuery is leading the number of views from online course video with almost a hundred thousand views. That’s the result of the biggest contribution from sekolah koding that’s already produced course videos since 2016. Followed by Vue with seventy-thousands and trailing behind them is React with fifty-thousands.&lt;/p&gt;
&lt;h2&gt;Professionals Point of View&lt;/h2&gt;
&lt;p&gt;Let’s go to the second point of view. We’re going to see from the perspective of someone who already has more experience with the previous one. Included in this category are the folks who at least already experienced how to develop an application, web application for example. From this perspective, we no longer ask how to start, but rather how to learn effectively. we’re going to answer some questions around how to learn something. How one learns is a subjective topic. Each individual can have different ways of learning. So we’re going to answer some general questions about learning, such as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For the ones who prefer learning by examples, we’re going to see how many sample applications are available for each library or framework.&lt;/li&gt;
&lt;li&gt;Then we’re going to see the availability of tutorials in Bahasa Indonesia for each library and framework.&lt;/li&gt;
&lt;li&gt;And then we’re going to take a look at some tools and boilerplate that we can use to make a new project.&lt;/li&gt;
&lt;li&gt;Lastly, we’re going to visit how we use each library and framework. We’re going to make a hello world application in each one.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Sample Applications&lt;/h3&gt;
&lt;p&gt;Now let’s see how many sample applications we can use as reference and guide. I tried to search in various services like glitch.com, codepen but there is no concrete information on how many sample applications available for our six libraries and frameworks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-25_at_18.15.28.png&quot; alt=&quot;The total of available sample applications at codesandbox&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The only one providing the total of sample applications per framework or library is codesandbox. And here we can see there is a huge gap between frameworks. React is dominating with almost 2 million applications. Far above Vue which only got two hundred thousand.&lt;/p&gt;
&lt;p&gt;This data from codesandbox is biased since it initially only supported React for a long time. Only then after a while, it started to support other frameworks. That is why React is far leading here.&lt;/p&gt;
&lt;h3&gt;Tutorials in Bahasa Indonesia&lt;/h3&gt;
&lt;p&gt;To get the number of tutorials in Bahasa Indonesia, I explored Google with
keyword “&lt;framework name=&quot;&quot;&gt; tutorial indonesia” and opened the link one by one
until the third page and made sure that the tutorial is really valid to be
considered as a tutorial and delivered in Bahasa Indonesia. Here is the result.&lt;/framework&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-25_at_18.20.08.png&quot; alt=&quot;The number of tutorials available in Bahasa Indonesia for each framework/library&quot; /&gt;&lt;/p&gt;
&lt;p&gt;From here, we can gather that Angular, jQuery, React, and Vue got an almost equal number between 10 to 15. While Svelte and Ember are rather difficult to find in Bahasa Indonesia. Actually, in general, the number of articles in Bahasa Indonesia also can be considered very limited. The same goes for literature in the form of books. This is actually a big opportunity for you who are interested in making contents in Bahasa Indonesia.&lt;/p&gt;
&lt;h3&gt;Tools and Boilerplates&lt;/h3&gt;
&lt;p&gt;Next, we’re going to discuss available tools and boilerplates. Frameworks, especially libraries, are generally surrounded by various tools and boilerplates which purpose is to simplify the usage of those frameworks or libraries.&lt;/p&gt;
&lt;p&gt;We’re going to look at some of the tools like the existence of Content Delivery Network or CDN. CDN makes it easier for us who don’t want to use command-line interface or CLI. It’s as easy as adding a script link via CDN.&lt;/p&gt;
&lt;p&gt;Of course, we’re also going to look at some CLI support, whether the features like routing, states, development tools or devtools, and generators are available to increase our productivity as a developer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-25_at_19.04.43.png&quot; alt=&quot;Tools availability&quot; /&gt;&lt;/p&gt;
&lt;p&gt;As seen from the above schematic, there is a clear difference between the library and framework. Angular and Ember are better equipped with more features. While Svelte, Vue, and React have just enough, and jQuery is far from fully equipped since it’s basically only a library for manipulating DOM.&lt;/p&gt;
&lt;p&gt;An interesting point from the data is, there is one library or framework that does not support CDN, which is Svelte. This is because Svelte is a framework that would do JavaScript compiling into vanilla JavaScript.&lt;/p&gt;
&lt;h3&gt;How to Use&lt;/h3&gt;
&lt;p&gt;Now let’s take a look at how to use each framework and library with the easiest steps to follow based on the guides provided in their official documentation. There are several frameworks that suggest us to use CLI, and there are others that don’t.&lt;/p&gt;
&lt;h4&gt;Angular&lt;/h4&gt;
&lt;p&gt;For Angular, first, we need to install a CLI tool with npm. Then we also can use CLI to generate a new Angular project. Use serve to open it in the browser.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -g @angular/cli&lt;br /&gt;$ ng new jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;br /&gt;$ ng serve --open&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we’re going to make hello world Component in a new file &lt;code&gt;jsday.component.ts&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/app/jsday.component.ts&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;@&lt;span class=&quot;token function&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  selector&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;jsday&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  template&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;h2&gt;JSDay 2019!!!&amp;lt;/h2&gt;&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JSDayComponent&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;First, make a new file src/app/jsday.component.ts. Angular recommends us to use TypeScript from the beginning. For those who don’t know yet, TypeScript is a subset of JavaScript that added more features, one of them being type system, into JavaScript.&lt;/p&gt;
&lt;p&gt;Next, let’s import Component from Angular core. Then we’ll use decorator component with a selector name, or tag, jsdayand we’ll fill it with a level 2 header text. Don’t forget to export the component.&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/app/app.module.ts&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; BrowserModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@angular/platform-browser&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; NgModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; AppRoutingModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./app-routing.module&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; AppComponent &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./app.component&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; JSDayComponent &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./jsday.component&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token decorator&quot;&gt;&lt;span class=&quot;token at operator&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NgModule&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  declarations&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;AppComponent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; JSDayComponent&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  imports&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;BrowserModule&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; AppRoutingModule&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  providers&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  bootstrap&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;AppComponent&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AppModule&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we’re going to use thejsday component in the main file app.module.ts. Import and declare in NgModule decorator. For the last step, we only need to use the jsday component in the HTML page, for example, app.component.html.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- src/app/app.component.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;jsday&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;jsday&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Ember&lt;/h4&gt;
&lt;p&gt;The steps in Ember are almost the same as the ones we use for Angular. First, we need to install a CLI tool. Then we use CLI to generate a new project. Go into the directory and run ember serve.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -g ember-cli&lt;br /&gt;$ ember new jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;br /&gt;$ ember serve&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We start by making a new component in a new file app/components/jsday.js. Import Component from ember/component library, and then extend it to make a new component.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app/components/jsday.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Component &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@ember/component&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; Component&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  componentMessage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;JSDay 2019!!!&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then make a new template file with handlebars format and show message in tag header level 2.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- app/templates/components/jsday.hbs --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can use jsday component from the template like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;!-- app/templates/application.hbs —&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;jQuery&lt;/h4&gt;
&lt;p&gt;Using jQuery is pretty straightforward, make a new folder and a new file.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then add CDN jQuery and it’s ready to go.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;UTF-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019!!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text/javascript&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://code.jquery.com/jquery-3.4.1.min.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In a file with JavaScript extension, app.js, we add a level 2 header with a JSDay 2019 message inside.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app.js&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;h2&gt;JSDay 2019!!!&amp;lt;/h2&gt;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;React&lt;/h4&gt;
&lt;p&gt;How about React? Since they use CDN in its official tutorial, let’s also use CDN. The steps are actually similar to jQuery. Start by making a folder and an HTML file.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use CDN to import react and react-dom into index.html. But we’re going to write the code itself in a different file app.js.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;UTF-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/react@16/umd/react.development.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;crossorigin&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/react-dom@16/umd/react-dom.development.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;crossorigin&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;root&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In app.js, we will not use babel or jsx. Declare a component with class syntax, and render a level 2 header component with “JSDay 2019” text inside. Then we’re going to render it with ReactDOM and dip it into a div with id root.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token string&quot;&gt;&#39;use strict&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;h2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;JSDay 2019!!!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;ReactDOM&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;App&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Svelte&lt;/h4&gt;
&lt;p&gt;Now we’re going to the next framework, Svelte. Svelte does not have a default CLI tool like Angular or Ember. But in its documentation, they suggested using a tool called degit. Simply put, degit would clone a git or GitHub pre-provided template for a Svelte project or even other projects in general. After running degit command with npx we run npm install and run it with npm run dev.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ npx degit sveltejs/template jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;br /&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run dev&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we’re going to use a new component with a level 2 header in jsday.svelte file.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- src/JSDay.svelte --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019!!!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And we only to use that JSDay component. Don’t forget to import it in order to use it in other components or files.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- src/App.svelte --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; JSDay &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./JSDay.svelte&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;JSDay&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Vue&lt;/h4&gt;
&lt;p&gt;Now we’re going to the last framework in our list, Vue. Vue in its beginner tutorial also suggested us to use CDN, just like React and jQuery. So let’s make a folder and an HTML file.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we’re going to load Vue from CDN. We can write the Vue code inside the script tag or in another file.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/vue&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        el&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          message&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;JSDay 2019!!!&#39;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Community Support&lt;/h3&gt;
&lt;p&gt;Community support is just as important to consider. When we start to learn new things, we will need help from communities. We need study-buddies. The learning process will certainly be faster with them.&lt;/p&gt;
&lt;p&gt;In the first section, we already talked about meetups, Facebook groups, and Telegram groups. Well now let’s focus on when we face issues and need help to find the solutions. Unfortunately, there isn’t yet any Q&amp;amp;A or tech discussion forum in Indonesia, or in Bahasa Indonesia. So I took the data from Stack Overflow.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_17.42.44.png&quot; alt=&quot;Number of answered and unanswered questions in Stack Overflow for each library/framework&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Here jQuery greatly outperformed the number of questions, of course since it is the oldest one, so normally it has the most number of questions. It’s followed by Angular, React, Vue, Ember, and the last one is Svelte.&lt;/p&gt;
&lt;p&gt;If we group them based on numbers, there would be four groups. The first one is jQuery which is far above the rest. In the second group, there are React and Angular. Vue and Ember are in the third one. And Svelte in the last group.&lt;/p&gt;
&lt;p&gt;There are many more questions about Angular and React, compared to the second group, Vue and Ember, which arguably got only 1/4. Ember and Angular can be considered the same age if we count from the first version of Angular. React and Vue also came up almost at the same time.&lt;/p&gt;
&lt;p&gt;For the next data, for a little bit of added fun, let’s compare follower numbers for each of the library/framework official accounts on Twitter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_17.57.01.png&quot; alt=&quot;Number of followers of each library/framework on Twitter&quot; /&gt;&lt;/p&gt;
&lt;p&gt;React and Angular are far ahead of the others in terms of followers count with almost three-hundred-thousand. Vue and Ember also have a big gap of around one hundred thousand. Interestingly, jQuery has the least number of followers. It’s even surpassed by the youngest one Svelte.&lt;/p&gt;
&lt;p&gt;The next statistics we&#39;re going to see is the GitHub repository.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.02.04.png&quot; alt=&quot;Number of watches and stars for each library/framework GitHub repo&quot; /&gt;
Now in the GitHub repository, Vue rule above the others. I think we can group them in three:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vue and React,&lt;/li&gt;
&lt;li&gt;Angular and jQuery&lt;/li&gt;
&lt;li&gt;Svelte and Ember&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the number of watches, React is the library with the most eyes on it.
Also on the GitHub repository, there are also other interesting statistics, that are number of commits, number of contributors, and its lifetime.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.06.54.png&quot; alt=&quot;Age (lifetime), number of contributors, and number of commits for each library/framework GitHub repo&quot; /&gt;&lt;/p&gt;
&lt;p&gt;There are several interesting points to note here, first is about Svelte. With only two years old, it can beat Vue in the number of commits. Even though the numbers of contributors are not that different. Does it mean Svelte contributors implement ‘commit often’ strategy?&lt;/p&gt;
&lt;h3&gt;Supporting Libraries&lt;/h3&gt;
&lt;p&gt;Sooner or later a library and framework will need external help in the form of library, especially for a minimalistic framework. A framework like Svelte or a library like jQuery definitely would need external libraries. I did some searching in the npm with tags angular, ember, jquery, react, svelte and vue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.12.06.png&quot; alt=&quot;Number of external libraries for each library/framework&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We can see React is far surpassing the others with the most libraries had, almost five thousand. Clearly, we can see the difference that React is being marketed as a library, not a framework, that’s why more of its libraries pop up. Even for defacto libraries like redux, react-router, create react app, they appeared as libraries that are developed by the community. Even though React is developed by Facebook.&lt;/p&gt;
&lt;p&gt;Then there are frameworks like Angular and Ember that do not really need external libraries since they’re already rich enough in features.&lt;/p&gt;
&lt;p&gt;While Svelte has very few external libraries, it’s understandable since it’s new. But interestingly, even though it’s a library, jQuery has a very few external libraries in npm. Maybe because in the beginning, jQuery life is not in npm. jQuery was even born before the npm.&lt;/p&gt;
&lt;h3&gt;Performance&lt;/h3&gt;
&lt;p&gt;Now we’re going to a quite fascinating topic to discuss, performance. One of the considerations of senior developers is how fast a framework can indulge the users in terms of speed.&lt;/p&gt;
&lt;p&gt;I didn’t use the benchmarking method that is sometimes ‘misleading’ and subjective, but I chose another method, which actually also is subjective, &lt;a href=&quot;https://developers.google.com/web/tools/chrome-user-experience-report&quot;&gt; Chrome UX Report &lt;/a&gt;. Chrome UX Report is a compilation of data that is anonymously collected from Chrome browser users. So with this tool, the users who use another browser are not included. Data was taken from 2014 until early September of 2019.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.17.03.png&quot; alt=&quot;Number of users for each library/framework&quot; /&gt;&lt;/p&gt;
&lt;p&gt;From Chrome UX Report, I could gather the information on how many users access a particular website. From there, I compile the data on which website using which framework.&lt;/p&gt;
&lt;p&gt;The result is, turned out, libraries and frameworks domain are still dominated by jQuery. Only 10 percent of it is spread among other libraries and frameworks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.18.35.png&quot; alt=&quot;Library/frameworks performance based on Chrome UX Report&quot; /&gt;&lt;/p&gt;
&lt;p&gt;For the performance, we can see two metrics: first contentful paint and first input delay. First Contentful Paint or FCP is the time when the first bit of content of the web is loaded or displayed to the browser. FCP depends on the performance of the rendered server, and how effective a framework does the rendering.&lt;/p&gt;
&lt;p&gt;While First Input Delay or FID is how long does it take for the user to be able to interact with our web application, like scrolling, clicking, etcetera. FID usually depends on the size of our application or the size of the library or framework used.&lt;/p&gt;
&lt;p&gt;In general, the one with the fastest performance is Ember. Svelte has the fastest FID since it compiled into the smallest and pure JavaScript.&lt;/p&gt;
&lt;h3&gt;Job Vacancies&lt;/h3&gt;
&lt;p&gt;After learning new frameworks, and getting a glimpse of the performance for each library or framework, next we’re going to answer how are the prospect of this list of frameworks in the future industry.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.22.48.png&quot; alt=&quot;Number of job vacancies posted in Stack Overflow and Upwork&quot; /&gt;&lt;/p&gt;
&lt;p&gt;First, let’s take a look at the vacancies offered around the globe. Here I searched the data in &lt;a href=&quot;https://stackoverflow.com/jobs&quot;&gt; Stack Overflow jobs &lt;/a&gt; and &lt;a href=&quot;https://www.upwork.com/&quot;&gt; Upwork &lt;/a&gt; for freelancing and remote working offers. I deliberately showed the data from around the world so we can later compare it to the ones in Indonesia. For Stack Overflow, it looks like jQuery talents needed are decreased in number. React has the most vacancies, followed by Angular, jQuery, Vue, and Ember.&lt;/p&gt;
&lt;p&gt;And for Upwork, jQuery is still leading the numbers. Far above Rect, Angular, Vue, Ember, and Svelte.&lt;/p&gt;
&lt;p&gt;How about vacancies in Indonesia? Here I’ll show the data from two sources: &lt;a href=&quot;https://www.linkedin.com/&quot;&gt; LinkedIn &lt;/a&gt; and &lt;a href=&quot;https://www.urbanhire.com/&quot;&gt; Urbanhire &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.46.27.png&quot; alt=&quot;Number of job vacancies posted in LinkedIn Indonesia&quot; /&gt;&lt;/p&gt;
&lt;p&gt;And apparently there are still quite a lot of companies looking for developers with jQuery competency, almost three thousand posts. While React vacancies and others are around six hundred or less. This data from LinkedIn is a little biased since I searched using my personal LinkedIn account. There’s a big possibility that in my circle there are still a lot of companies using jQuery.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.48.52.png&quot; alt=&quot;Number of job vacancies posted in Urbanhire&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I also searched for the job vacancies data in Urbanhire which perhaps would be more objective and unbiased. In this Indonesian job vacancy search platform, it turned out that React has more vacancies than jQuery and others even though the differences are not that significant. They’re fairly balanced.&lt;/p&gt;
&lt;h2&gt;Masters Point of View&lt;/h2&gt;
&lt;p&gt;In this section, we’re going to answer the questions from those who are considered decision-makers like team leads, architects, vice presidents of engineering, to chief technology officer or CTO. And we’re going to take a look at several things like the number of talents available and library or framework maturity level.&lt;/p&gt;
&lt;h3&gt;Available Talents&lt;/h3&gt;
&lt;p&gt;For this, I went back to the LinkedIn search feature to find how many talents are there for each framework and library.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.55.10.png&quot; alt=&quot;Available talents for each library/framework in LinkedIn&quot; /&gt;&lt;/p&gt;
&lt;p&gt;And apparently, there are still quite a number of people who are capable of
jQuery in both Indonesia and around the world. The gap is still pretty far
between jQuery and other frameworks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_18.56.22.png&quot; alt=&quot;Available talents for each library/framework in Geekhunter&quot; /&gt;
And above is the data from &lt;a href=&quot;https://geekhunter.co/&quot;&gt; Geekhunter &lt;/a&gt; database. As we can see, jQuery is still the most widely mastered library.&lt;/p&gt;
&lt;h3&gt;Maturity Level&lt;/h3&gt;
&lt;p&gt;In this section, we’re going to talk about framework maturity. Here we’re also
going to see aspects like number of release cycle, the number of maintainers, issues, pull requests, and also tests.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_19.15.22.png&quot; alt=&quot;Age (lifetime), and yearly releases and commits&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I gathered the data from GitHub and apparently we got some interesting insights. The first interesting thing is Svelte. This youngest framework has the highest release numbers per year. Of course, it’s only natural since it’s new, so we shouldn’t be surprised if there are still API changes or other changes that are not stable. Compared to jQuery, which is the oldest one of them, it has the least yearly release numbers since it’s now 10 years old.&lt;/p&gt;
&lt;p&gt;The most productive repository is Angular in terms of the number of commits. Almost four thousand commits per year. And Angular has a pretty high release cycle compared to the other frameworks, maybe because its age is also relatively younger. Here I only use Angular version 2 repository or later, not the first version. While Ember is the only framework that uses the release cycle method consistently. It releases a new version every 6 weeks.&lt;/p&gt;
&lt;p&gt;React, while it’s only 6 years old, but it’s already developed and used far before it was published. It’s counted as 6 years old from the source code became open source.&lt;/p&gt;
&lt;p&gt;Next, we’re going to see the number of issues reported on GitHub. GitHub issue is one of the metrics we can use to evaluate whether any open source project is healthy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_19.42.03.png&quot; alt=&quot;Number of open and closed issues reported in GitHub&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Angular is the owner of the highest number of issues, for both resolved or closed ones and open or unresolved issues. The difference is quite significant. This might be because Angular has a lot of features that have to be developed and maintained. But on the other hand, Ember which also has quite extensive features does not really have issues as much as Angular, it’s even less compared with React and Vue.&lt;/p&gt;
&lt;p&gt;Svelte is the only framework with the number of open issues more than the closed one. I assume it’s because they’re currently under heavy development phase.&lt;/p&gt;
&lt;p&gt;Next, we’re going to take a look at how many pull requests or PR exist in each repo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_19.45.08.png&quot; alt=&quot;Number of open and merged PR&quot; /&gt;&lt;/p&gt;
&lt;p&gt;jQuery no longer has that many open pull requests, maybe because it’s already mature enough or there are not many new features being developed. Or it could also mean it doesn’t have many bugs. While Angular contributors are apparently the most productive ones with the pull requests and Vue has the least number of pull requests.&lt;/p&gt;
&lt;p&gt;Next, we’re going to see how many test cases are covered and compare them to the lines of code in each framework&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/Screen_Shot_2020-01-26_at_19.46.52.png&quot; alt=&quot;The number of test cases versus the line of codes&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Angular has the most lines of codes with also the most test cases. Rather surprisingly, Ember has almost the same lines of codes with Vue, but with more test cases, it even has more test cases than React one. Svelte also has quite many test cases if compared to the lines of codes in ratio.&lt;/p&gt;
&lt;p&gt;I shared these numbers not to brag which one has the most test cases, but with the intention to look at which framework has more concern for testing. And from this data, it can also correlate to how easy we can test our applications later on.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;These days are the most exciting time, especially for JavaScript developers. The supporting ecosystem is getting more matured, there are numerous options to learn, the same goes for the resources and means to learn. We can learn from articles, books, and videos. There are libraries or frameworks that are really developer-friendly, we can make applications with just a few steps. There are also ones that are user-friendly, in a sense of, it perhaps takes longer development time and not as easy as others, but the result would be very user-indulging. The applications could turn out fast, lightweight, not heavy on the user side.&lt;/p&gt;
&lt;p&gt;You can use these statistics as a reference to make your own learning path. Do you only start learning? Then start with the first point of view: junior or beginner. For those who want to learn new things can check out the second point of view: senior or professional. Or you want to build your own products or build a team? Then consider the aspects we discussed in the third point of view.&lt;/p&gt;
&lt;p&gt;Whatever your choice is, the most important thing is it can help you in your work, be it some simple one or even the extraordinary creation.&lt;/p&gt;
&lt;p&gt;For the decision-makers’ point of view, even though choosing technology based on hype or trends is not entirely wrong, but you also need to consider the number of available talents out there and if I might add my personal opinion, sometimes we also need to go against the stream, doing what others don’t, being anti-mainstream.&lt;/p&gt;
&lt;p&gt;There’s something called the python paradox where we deliberately choose a rarely used technology in order to attract the talents that are interested in that technology. And also in order to avoid competing with unicorn companies recruitment. There are also some who take the path of choosing the mature technology, the obvious one, the technology that’s already become stale, the boring technology club.&lt;/p&gt;
&lt;p&gt;The goal of this article presenting this data is not to see which framework or library is the best one, but more to see which framework or library is the most suited one for us by considering those three perspectives.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Ekosistem JavaScript Di Indonesia</title>
    <link href="https://rizafahmi.com/2020/02/03/ekosistemjs/"/>
    <updated>2020-02-03T00:00:00Z</updated>
    <id>https://rizafahmi.com/2020/02/03/ekosistemjs/</id>
    <content type="html">&lt;h1&gt;Ekosistem JavaScript di Indonesia&lt;/h1&gt;
&lt;p&gt;This article also available in &lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/en/&quot;&gt; Engilish &lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Artikel ini akan membahas tentang bagaimana perkembangan ekosistem JavaScript di
Indonesia. Namun sebelum kita masuk ke pembahasan utama, mari kita bahas dulu
tentang definisi ekosistem di konteks artikel ini. Topik ini merupakan materi
yang saya bawakan ketika mengisi keynote di &lt;a href=&quot;https://jsday.id/&quot;&gt; JSDay 2019 &lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Daftar Isi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#tentang-ekosistem-javascript&quot;&gt;Tentang Ekosistem JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#sudut-pandang-pembahasan&quot;&gt;Sudut Pandang Pembahasan&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#sudut-pandang-pemula&quot;&gt;Sudut Pandang Pemula&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#mulai-dari-mana&quot;&gt;Mulai Dari Mana?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#belajar-framework-apa&quot;&gt;Belajar Framework Apa?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#literatur-atau-buku-tersedia&quot;&gt;Literatur atau Buku Tersedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#kursus-video-online&quot;&gt;Kursus Video Online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#sudut-pandang-profesional&quot;&gt;Sudut Pandang Profesional&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#contoh-aplikasi&quot;&gt;Contoh Aplikasi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#tutorial-berbahasa-indonesia&quot;&gt;Tutorial Berbahasa Indonesia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#alat-bantu-dan-boilerplate&quot;&gt;Alat Bantu dan Boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#mulai-menggunakan&quot;&gt;Mulai Menggunakan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#dukungan-komunitas&quot;&gt;Dukungan Komunitas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#pustaka-pendukung&quot;&gt;Pustaka Pendukung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#performa&quot;&gt;Performa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#lowongan-pekerjaan&quot;&gt;Lowongan Pekerjaan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#sudut-pandang-master&quot;&gt;Sudut Pandang Master&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#talenta-tersedia&quot;&gt;Talenta Tersedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#tingkat-maturity&quot;&gt;Tingkat Maturity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rizafahmi.com/2020/02/03/ekosistemjs/#kesimpulan&quot;&gt;Kesimpulan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Riza is delivering keynote at &lt;a href=&quot;https://twitter.com/hashtag/jsdayid?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#jsdayid&lt;/a&gt;. First JavaScript conference in Indonesia. &lt;a href=&quot;https://twitter.com/rizafahmi22?ref_src=twsrc%5Etfw&quot;&gt;@rizafahmi22&lt;/a&gt; &lt;a href=&quot;https://t.co/yxXKm1cNxM&quot;&gt;pic.twitter.com/yxXKm1cNxM&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jecelyn Yeen (@JecelynYeen) &lt;a href=&quot;https://twitter.com/JecelynYeen/status/1177778326758277120?ref_src=twsrc%5Etfw&quot;&gt;September 28, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;h1&gt;Tentang Ekosistem JavaScript&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;“An ecosystem is a community of living organisms and their interactions with their abiotic (non-living) environment.” — Ecology of ecosystems&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yang dimaksud ekosistem disini diantaranya adalah komunitas, grup dan diskusi sekitar sebuah tools, alat bantu, framework dan JavaScript secara umum. Dalam konteks ini kita akan membahas empat elemen berikut:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sumber belajar seperti artikel, buku, video tutorial dan lain sebagainya&lt;/li&gt;
&lt;li&gt;Kelengkapan alat bantu seperti pustaka, boilerplate, contoh aplikasi dan lain-lain&lt;/li&gt;
&lt;li&gt;Dukungan komunitas di sekitar alat bantu dan juga lingkungan sekitar&lt;/li&gt;
&lt;li&gt;Pembahasan akan fokus di frontend karena JavaScript di sisi backend cukup &lt;em&gt;straightforward&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Sudut Pandang Pembahasan&lt;/h1&gt;
&lt;p&gt;Artikel ini akan membagi pembahasan kepada tiga sudut pandang. Sudut pandang pertama ditujukan untuk yang baru mulai belajar, kita sebut saja pemula. Kita akan mencoba menjawab beberapa pertanyaan yang sering muncul di benak pemula ketika ingin belajar JavaScript. Kemudian kita juga akan membahas JavaScript dari sudut pandang teman-teman yang sudah pernah membuat aplikasi dan ingin belajar hal baru terutama teknologi web. Kita sebut saja sebagai profesional. Sudut pandang terakhir diperuntukkan kepada para pengambil keputusan seperti Vice President, Chief Technology Officer, Team Lead dan lain sebagainya. Kita menyebutnya sebagai sudut pandang master.&lt;/p&gt;
&lt;h2&gt;Sudut Pandang Pemula&lt;/h2&gt;
&lt;p&gt;Sudut pandang ini diperuntukkan kepada teman-teman fresh graduate, developer profesional dengan pengalaman setahun atau kurang, dan yang &#39;terjebak&#39;. Terjebak sudah terlebih dahulu masuk ke sebuah perusahaan yang ternyata sudah menggunakan pustaka atau framework tertentu. Kita akan menjawab pertanyaan-pertanyaan yang seringkali muncul di benak seorang pemula.&lt;/p&gt;
&lt;h3&gt;Mulai Dari Mana?&lt;/h3&gt;
&lt;p&gt;Biasanya pertanyaan yang pertama kali muncul kalau mau mulai belajar, mulainya dari mana? Dan berikut adalah beberapa pertanyaan terkait memulai belajar pustaka atau &lt;em&gt;framework&lt;/em&gt; JavaScript. Namun sebelum itu pastikan teman-teman sudah menguasai JavaScript itu sendiri beserta HTML dan sedikit CSS. Jika merasa belum terlalu menguasai, teman-teman bisa mulai belajar dari hal-hal tersebut.&lt;/p&gt;
&lt;p&gt;Berikutnya kita akan membahas beberapa pertanyaan berikut:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sebaiknya belajar framework apa ya?&lt;/li&gt;
&lt;li&gt;Lingkungan sekitar banyak menggunakan yang mana? Hal ini cukup penting terutama buat yang baru belajar&lt;/li&gt;
&lt;li&gt;Kemudian kita juga akan melihat seberapa banyak artikel, buku yang tersedia untuk mendukung proses belajar&lt;/li&gt;
&lt;li&gt;Dan tentunya kita juga akan mengeksplorasi seberapa banyak kursus video online yang ada&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Belajar Framework Apa?&lt;/h3&gt;
&lt;p&gt;Framework JavaScript banyak sekali pilihannya. Terkadang untuk yang mulai belajar, pemilihan framework menjadi sesuatu yang cukup sulit. Ada yang bilang framework ini bagus. Opini lain mengatakan framework lain lebih cepat dan lain sebagainya. Untuk itu saya memilihkan enam opsi yang dapat dipilih. Keenam framework ini memiliki karakteristik yang cukup berbeda yang menurut saya mewakili framework lain yang tersedia.&lt;/p&gt;
&lt;p&gt;Untuk framework dengan fitur lengkap diwakili oleh Angular dan Ember, yang cukup lengkap ada React dan Vue, pustaka untuk memanipulasi DOM dan cukup terkenal di masanya, jQuery. Dan terakhir ada framework yang melakukan kompilasi ke JavaScript vanilla yang mungkin akan menjadi tren kedepan yaitu Svelte.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;in&quot; dir=&quot;ltr&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/EFhRDE5U8AAcPCj?format=jpg&amp;name=large&quot; alt=&quot;salfok&quot; /&gt; Salfok sama slide presentasi dari om &lt;a href=&quot;https://twitter.com/rizafahmi22?ref_src=twsrc%5Etfw&quot;&gt;@rizafahmi22&lt;/a&gt; 😹 &lt;a href=&quot;https://twitter.com/hashtag/JSDayID?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#JSDayID&lt;/a&gt; &lt;a href=&quot;https://t.co/W5XnrDEits&quot;&gt;pic.twitter.com/W5XnrDEits&lt;/a&gt;&lt;/p&gt;&amp;mdash; FarahLuthfiOktarina (@FarahOktarina) &lt;a href=&quot;https://twitter.com/FarahOktarina/status/1177780426800128001?ref_src=twsrc%5Etfw&quot;&gt;September 28, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;Dari keenam framework dan pustaka diatas, mari kita lihat bagaimana ekosistemnya dengan melihat komunitas disekitar framework dan pustaka tersebut. Peran komunitas ini penting untuk mendukung kita belajar terutama untuk mempercepat proses belajar. Berikut adalah gambaran komunitas JavaScript secara umum di berbagai kota yang datanya berhasil saya dapatkan. Masih banyak kota-kota lain yang memiliki komunitas JavaScript sebenarnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-23_at_08.54.48.png&quot; alt=&quot;Screen_Shot_2020-01-23_at_08.54.48.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Seperti yang dapat dilihat, komunitas MedanJS memiliki total 334 anggota meskipun saat ini sedang vakum. BaliJS ada 474 anggota, SurabayaJS ada 510, JogjaJS 545. Sedangkan jumlah anggota terbanyak masih berada di kota Bandung dengan 2.500 anggota dan Jakarta yang nyaris mencapai 4.000 anggota.&lt;/p&gt;
&lt;p&gt;Dan berikut adalah komunitas untuk beberapa framework yang berhasil saya dapatkan datanya. Saya berhasil mendapatkan tiga komunitas framework, yaitu: Vue, Angular dan juga React.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-23_at_09.00.05.png&quot; alt=&quot;Screen_Shot_2020-01-23_at_09.00.05.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ternyata untuk komunitas per framework masih didominasi oleh React dan Angular. Sedangkan komunitas Vue agak jauh perbedaannya dibandingkan React dan Angular.&lt;/p&gt;
&lt;p&gt;Data berikutnya yang akan kita lihat adalah grup facebook dari tiap-tiap framework atau pustaka yang berhasil saya dapatkan. Semua grup ini spesifik yang berbahasa Indonesia saja. Saya juga menambahkan informasi jumlah anggota, umur dari grup dan juga percakapan yang terjadi per tahunnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-23_at_09.11.42.png&quot; alt=&quot;Screen_Shot_2020-01-23_at_09.11.42.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Hasilnya cukup menarik. Anggota yang paling banyak tentu saja grup jQuery, karena memang termasuk pustaka yang paling lama senior. jQuery sendiri sudah menemani developer JavaScript sejak tahun 2006 sehingga tidak heran jumlah anggotanya yang paling banyak.&lt;/p&gt;
&lt;p&gt;Sedangkan grup yang paling aktif bukanlah jQuery ternyata. Grup React, Angular dan Vue tercatat memiliki anggota yang paling aktif.&lt;/p&gt;
&lt;p&gt;Sedangkan untuk grup Svelte dan Ember memiliki anggota yang paling sedikit dibandingkan framework atau pustaka lainnya. Svelte tentu saja karena merupakan framework yang tergolong baru. Sedangkan Ember anggotanya masih sedikit, meskipun umur grupnya sudah 4 tahun.&lt;/p&gt;
&lt;p&gt;Satu data lagi terkait komunitas, yaitu grup di platform Telegram yang lumayan menarik terutama untuk yang mulai serius belajar pemrograman.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-23_at_09.14.04.png&quot; alt=&quot;Screen_Shot_2020-01-23_at_09.14.04.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Di Telegram, saya juga baru berhasil mendapatkan tiga komunitas yaitu Angular, Vue dan React. Data ini didapat dengan bantuan &lt;a href=&quot;https://carik.id/&quot;&gt; carikbot &lt;/a&gt;. Saya berhasil mendapatkan informasi jumlah anggota dan percakapan yang terjadi sepanjang agustus sampai pertengahan september 2019.&lt;/p&gt;
&lt;p&gt;Yang paling aktif dan paling banyak anggotanya, React disusul Vue dan disusul Angular.&lt;/p&gt;
&lt;h3&gt;Literatur atau Buku Tersedia&lt;/h3&gt;
&lt;p&gt;Dan dibagian ini kita akan membahas tentang ketersediaan literatur, dalam hal ini adalah buku. Pertanyaannya apakah buku masih relevan sebagai sumber belajar? Terutama buku berbahasa Indonesia. Untuk saya pribadi sih jawabannya masih relevan. Apalagi buat teman-teman mahasiswa yang ingin belajar dan menggunakan framework atau pustaka tertentu di tugas akhirnya. Kan keren kalau ada buku yang bisa dijadikan referensi belajar dan bisa dikutip juga untuk skripsi atau tugas akhir.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-23_at_09.18.05.png&quot; alt=&quot;Screen_Shot_2020-01-23_at_09.18.05.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Mungkin sebagian besar dari kita sudah bisa menebak hasilnya. Cukup menyedihkan karena jumlah buku yang tersedia masih sangat sedikit. Ini khusus buku berbahasa Indonesia. Untuk mendapatkan data ini saya melakukan pencarian dari gramedia online dan juga google. Untuk buku fisik yang tersedia, jQuery merupakan pustaka yang paling banyak sumber bacaannya. Sedangkan framework lainnya terhitung masih sangat sedikit.&lt;/p&gt;
&lt;p&gt;Tidak puas dengan buku fisik, saya juga melakukan pencarian buku elektronik berbahasa Indonesia yang sebenarnya cukup menarik. Untuk format buku elektronik, Angular ada dua buku, namun masih membahas tentang Angular versi 1 yang cukup jauh berbeda dengan Angular versi terbaru saat ini. Buku elektronik tentang Vue dan React juga hanya tersedia sedikit.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/EFhQqW6VAAECI30?format=jpg&amp;name=medium&quot; alt=&quot;peluang&quot; /&gt; &lt;a href=&quot;https://twitter.com/rizafahmi22?ref_src=twsrc%5Etfw&quot;&gt;@rizafahmi22&lt;/a&gt; kick off &lt;a href=&quot;https://twitter.com/hashtag/JSDayID?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#JSDayID&lt;/a&gt; with a talk about JavaScript ecosystem. There&amp;#39;s still very few technical book in Bahasa Indonesia. But that means we still have lots of opportunity 😉 &lt;a href=&quot;https://t.co/JCU23Surj2&quot;&gt;pic.twitter.com/JCU23Surj2&lt;/a&gt;&lt;/p&gt;&amp;mdash; Kiki ✈️ (@kelimuttu) &lt;a href=&quot;https://twitter.com/kelimuttu/status/1177780009450127361?ref_src=twsrc%5Etfw&quot;&gt;September 28, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h3&gt;Kursus Video Online&lt;/h3&gt;
&lt;p&gt;Berikutnya kita akan bahas tentang kursus video online. Disini saya batasi khusus untuk kursus video online yang cukup lengkap dan ada learning path. Bukan sembarang video tutorial berbahasa Indonesia yang ada di Youtube.&lt;/p&gt;
&lt;p&gt;Ada beberapa platform kursus video online yang membahas tentang pemrograman, lebih spesifiknya tentang JavaScript dan berbagai frameworknya. Ada malescast, dumbways, idrails, sekolah koding dan juga kode.id.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-25_at_17.46.27.png&quot; alt=&quot;Screen_Shot_2020-01-25_at_17.46.27.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Seperti yang sama-sama bisa kita lihat, yang paling produktif menghasilkan kursus video online terkait JavaScript adalah sekolah koding karena memang sudah berdiri sejak lama, 2016. Dumbways lebih banyak menghasilkan materi seputar framework React. Sedangkan malescast lebih fokus menghasilkan materi tentang vue. Sedangkan idrails memiliki materi seputar vue dan react.&lt;/p&gt;
&lt;p&gt;Selanjutnya kita akan melihat jumlah viewer dikelompokkan berdasarkan pustaka dan framework.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-25_at_17.51.13.png&quot; alt=&quot;Screen_Shot_2020-01-25_at_17.51.13.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Ternyata jQuery merajai jumlah view dari kursus video online dengan angka nyaris seratus ribu. Kontribusi terbesar dari sekolah koding yang memang sudah memproduksi video course dari 2016. Diikuti vue dengan angka sekitar tuju puluh ribuan dan disusul react dengan lima puluh ribuan.&lt;/p&gt;
&lt;h2&gt;Sudut Pandang Profesional&lt;/h2&gt;
&lt;p&gt;Kita masuk ke sudut pandang yang kedua. Kita akan melihat dari sudut pandang seseorang yang memiliki pengalaman lebih banyak dibandingkan sudut pandang pertama. Yang masuk kategori ini adalah teman-teman yang setidaknya sudah pernah merasakan bagaimana mengembangkan sebuah aplikasi, aplikasi web misalnya. Di sudut pandang ini, kita tidak lagi bertanya bagaimana cara memulai, tapi lebih ke bagaimana cara belajar yang efektif. Kita akan menjawab beberapa pertanyaan terkait bagaimana cara belajar sesuatu. Cara belajar merupakan topik yang subjektif. Masing-masing individu memiliki cara belajar yang berbeda-beda. Jadi kita akan mencoba menjawab beberapa pertanyaan umum tentang cara belajar, seperti berikut:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Buat yang suka dengan cara belajar melihat contoh, kita akan melihat berapa banyak contoh aplikasi yang tersedia untuk masing-masing pustaka atau framework.&lt;/li&gt;
&lt;li&gt;Kemudian kita akan melihat ketersediaan tutorial berbahasa Indonesia untuk masing-masing kandidat pustaka dan juga framework.&lt;/li&gt;
&lt;li&gt;Kemudian kita akan melihat beberapa alat bantu dan boilerplate yang bisa kita gunakan untuk membuat project baru.&lt;/li&gt;
&lt;li&gt;Terakhir kita akan melihat bagaimana cara penggunaan masing-masing pustaka dan framework. Kita akan membuat aplikasi hello world satu per satu.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Contoh Aplikasi&lt;/h3&gt;
&lt;p&gt;Sekarang kita akan melihat berapa banyak contoh aplikasi yang bisa kita lihat sebagai referensi dan panduan. Saya mencoba melakukan pencarian di berbagai servis seperti glitch.com, codepen namun tidak ada informasi pasti jumlah contoh aplikasi untuk keenam pustaka dan framework tadi.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;in&quot; dir=&quot;ltr&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/EFiVLvpVAAAtHC7?format=jpg&amp;name=medium&quot; /&gt; sebuah slide yang sangat ciamik dari mas &lt;a href=&quot;https://twitter.com/rizafahmi22?ref_src=twsrc%5Etfw&quot;&gt;@rizafahmi22&lt;/a&gt; ntah berapa lama buatnya 😅😅 &lt;a href=&quot;https://t.co/kAbOiUmMdI&quot;&gt;pic.twitter.com/kAbOiUmMdI&lt;/a&gt;&lt;/p&gt;&amp;mdash; Adib Firman (@dibfirman) &lt;a href=&quot;https://twitter.com/dibfirman/status/1177855341788160000?ref_src=twsrc%5Etfw&quot;&gt;September 28, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;Satu-satunya yang bisa mendapatkan total jumlah aplikasi per framework atau pustaka adalah dari codesandbox. Dan disini sangat jauh perbedaan antar framework. React mendominasi dengan nyaris ada 2 juta contoh aplikasi. Sangat jau dibandingkan vue yang hanya dua ratus ribuan.&lt;/p&gt;
&lt;p&gt;Data dari codesandbox ini agak bias, karena codesandbox awalnya hanya mendukung React cukup lama. Baru kemudian setelah beberapa lama mendukung framework lain. Itulah sebabnya React sangat mendominasi.&lt;/p&gt;
&lt;h3&gt;Tutorial Berbahasa Indonesia&lt;/h3&gt;
&lt;p&gt;Untuk mendapatkan jumlah tutorial berbahasa Indonesia, saya melakukan pencarian via google dengan kata kunci “nama framework tutorial indonesia” dan buka tautannya satu per satu sampai halaman ketiga dan memastikan bahwa tutorial tersebut benar-benar valid dikategorikan sebagai tutorial dan berbahasa Indonesia. Dan berikut hasilnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-25_at_18.20.08.png&quot; alt=&quot;Screen_Shot_2020-01-25_at_18.20.08.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Disini Angular, jQuery, React dan Vue jumlahnya nyaris sama berkisar antara 10 hingga 15. Sedangkan Svelte dan Ember agak susah dicari tutorial berbahasa Indonesia. Sebenarnya secara umum jumlah artikel berbahasa Indonesia ini jumlahnya masih terbilang sedikit. Sama halnya dengan literatur dalam format buku. Ini sebenarnya peluang buat teman-teman yang ingin membuat konten spesifik berbahasa Indonesia.&lt;/p&gt;
&lt;h3&gt;Alat Bantu dan &lt;em&gt;Boilerplate&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Berikutnya kita akan membahas tentang alat bantu dan &lt;em&gt;boilerplate&lt;/em&gt; yang tersedia. Framework, apalagi pustaka umumnya dikelilingi oleh berbagai alat bantu dan juga &lt;em&gt;boilerplate&lt;/em&gt; yang tujuannya adalah memudahkan kita untuk menggunakan framework atau pustaka tersebut.&lt;/p&gt;
&lt;p&gt;Kita akan melihat beberapa alatbantu seperti ketersediaan di Content Delivery Network atau CDN. Adanya CDN memudahkan jika teman-teman tidak ingin menggunakan command line interface atau CLI. Jadi semudah metambahkan link script via CDN.&lt;/p&gt;
&lt;p&gt;Tentu kita juga akan melihat dukungan berupa CLI, apakah sudah tersedia fitur seperti routing, state, alat bantu pengembangan atau devtools dan juga CLI untuk generator yang dapat meningkatkan produktifitas kita sebagai developer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-25_at_19.04.43.png&quot; alt=&quot;Screen_Shot_2020-01-25_at_19.04.43.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Seperti bagan diatas terlihat bedanya pustaka dengan framework. Angular dan Ember secara fitur sangat lengkap. Sementara Svelte, vue dan React cukup lengkap, sedangkan jQuery jauh dari lengkap karena memang jQuery pada dasarnya hanyalah pustaka untuk manipulasi DOM.&lt;/p&gt;
&lt;p&gt;Yang menarik dari bagan diatas ada satu pustaka atau framework yang tidak mendukung CDN yaitu Svelte. Hal ini dikarenakan Svelte adalah framework yang melakukan kompilasi JavaScript sehingga menjadi Vanilla JavaScript.&lt;/p&gt;
&lt;h3&gt;Mulai Menggunakan&lt;/h3&gt;
&lt;p&gt;Sekarang kita akan melihat bagaimana cara menggunakan masing-masing framework dan pustaka dengan cara yang paling mudah diikuti berdasarkan langkah-langkah yang disediakan oleh dokumentasi resmi. Ada beberapa framework yang menyarankan menggunakan CLI, dan ada beberapa yang lain tidak.&lt;/p&gt;
&lt;h4&gt;Angular&lt;/h4&gt;
&lt;p&gt;Untuk Angular, pertama kita instal alat bantu CLI dengan npm. Kemudian CLI kita gunakan untuk men-&lt;em&gt;generate&lt;/em&gt; proyek Angular baru. Serve untuk kemudian dibuka di browser.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -g @angular/cli&lt;br /&gt;$ ng new jsday&lt;br /&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;br /&gt;$ ng serve --open&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kemudian kita akan membuat hello world, dengan komponen dengan membuat file baru &lt;code&gt;jsday.component.ts&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/app/jsday.component.ts&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; Component &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token decorator&quot;&gt;&lt;span class=&quot;token at operator&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;Component&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  selector&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;jsday&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  template&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;h2&gt;JSDay 2019!!!&amp;lt;/h2&gt;&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JSDayComponent&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pertama kita buat file baru di &lt;code&gt;src/app/jsday.component.ts&lt;/code&gt;. Nah disini angular menyarankan kita menggunakan TypeScript sedari awal. Buat yang belum tahu, TypeScript adalah &lt;em&gt;subset&lt;/em&gt; dari JavaScript yang menambahkan salah satunya &lt;em&gt;type system&lt;/em&gt; kedalam JavaScript.&lt;/p&gt;
&lt;p&gt;Selanjutnya kita import component dari angular core. Lalu kita gunakan decorator component dengan nama selector atau tag yaitu jsday, dengan isinya header level 2. Jangan lupa kemudian juga di eksport komponen-nya.&lt;/p&gt;
&lt;pre class=&quot;language-typescript&quot;&gt;&lt;code class=&quot;language-typescript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// src/app/app.module.ts&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; BrowserModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@angular/platform-browser&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; NgModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@angular/core&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; AppRoutingModule &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./app-routing.module&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; AppComponent &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./app.component&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; JSDayComponent &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./jsday.component&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token decorator&quot;&gt;&lt;span class=&quot;token at operator&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NgModule&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  declarations&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;AppComponent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; JSDayComponent&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  imports&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;BrowserModule&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; AppRoutingModule&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  providers&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  bootstrap&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;AppComponent&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AppModule&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kemudian kita akan menggunakan komponen jsday di file utama &lt;code&gt;app.module.ts&lt;/code&gt;. Import dan deklarasikan di decorator NgModule. Langkah terakhir, tinggal menggunakan komponen jsday di &lt;code&gt;app.component.html&lt;/code&gt; misalnya.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- src/app/app.component.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;jsday&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;jsday&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Ember&lt;/h4&gt;
&lt;p&gt;Langkah-langkahnya hampir mirip dengan Angular, pertama kita lakukan instalasi alat bantu CLI. Kemudian kita Ggunakan CLI untuk men-generate proyek baru. Masuk ke direktor dan jalankan ember serve.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;br /&gt;    $ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -g ember-cli&lt;br /&gt;    $ ember new jsday&lt;br /&gt;    $ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;br /&gt;    $ ember serve&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kita mulai dengan membuat komponen baru di file baru di &lt;code&gt;app/components/jsday.js&lt;/code&gt;. Import component dari pustaka &lt;code&gt;ember/component&lt;/code&gt;, dan kemudian di extend untuk membuat komponen baru.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app/components/jsday.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Component &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@ember/component&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;default&lt;/span&gt; Component&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  componentMessage&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;JSDay 2019!!!&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan kita buat sebuah file template dengan format handlebars dan menampilkan &lt;code&gt;message&lt;/code&gt; didalam tag header level 2.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- app/templates/components/jsday.hbs --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan sekarang kita dapat menggunakan komponen jsday di template seperti ini.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- app/templates/application.hbs --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt; &lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;jQuery&lt;/h4&gt;
&lt;p&gt;Untuk jQuery cukup straigthforward penggunaannya, buat sebuah folder dan sebuah file.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;    $ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; jsday&lt;br /&gt;    $ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kemudian tambahkan CDN jQuery dan dapat segera digunakan.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;UTF-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019!!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;text/javascript&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://code.jquery.com/jquery-3.4.1.min.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Di file dengan ekstensi JavaScript, &lt;code&gt;app.js&lt;/code&gt; kita tambahkan header level 2 dengan pesan jsday 2019 didalamnya.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;&amp;lt;h2&gt;JSDay 2019!!!&amp;lt;/h2&gt;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;React&lt;/h4&gt;
&lt;p&gt;Bagaimana dengan React? Karena di tutorial resminya menggunakan CDN, maka kita akan menggunakan CDN. Langkah-langkahnya mirip dengan jQuery sebenarnya. Dimulai dengan membuat folder dan file html.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;    $ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; jsday&lt;br /&gt;    $ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gunakan CDN untuk pustaka react dan react-dom didalam file &lt;code&gt;index.html&lt;/code&gt;. Kodenya sendiri kita akan tulis di file terpisah &lt;code&gt;app.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;en&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;meta&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;UTF-8&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/react@16/umd/react.development.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;crossorigin&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/react-dom@16/umd/react-dom.development.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token attr-name&quot;&gt;crossorigin&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;root&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Di app.js kita juga tidak menggunakan babel ataupun jsx. Komponen menggunakan sintaksis class, me-render sebuah komponen header leel 2 dengan teks JSDay 2019. Lalu kemudian kita render dengan ReactDOM dan di cemplungin ke div dengan id root.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// app.js&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token string&quot;&gt;&#39;use strict&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Component&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;h2&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;JSDay 2019!!!&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;ReactDOM&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;App&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/react.jpeg&quot; alt=&quot;react&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;Svelte&lt;/h4&gt;
&lt;p&gt;Sekarang kita masuk ke framework berikutnya, Svelte. Svelte memang tidak memiliki CLI bawaan seperti halnya Angular atau Ember. Tapi di dokumentasinya kita disarankan menggunakan tools yang namanya degit. Sederhananya degit ini melakukan clone template yang sudah disiapkan di git atau github untuk proyek svelte ataupun proyek lainnya secara umum. Setelah menjalankan degit dengan npx kita jalankan npm install dan jalankan dengan npm run dev.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;    $ npx degit sveltejs/template jsday&lt;br /&gt;    $ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;br /&gt;    $ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt;&lt;br /&gt;    $ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run dev&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Selanjutnya kita buat komponen baru dengan header level 2 dengan nama &lt;code&gt;jsday.svelte&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- src/JSDay.svelte --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019!!!&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan kita tinggal gunakan komponen JSDay. Jangan lupa diimport agar dapat digunakan di komponen atau file lain.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- src/App.svelte --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; JSDay &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;./JSDay.svelte&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token style&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;JSDay&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;Vue&lt;/h4&gt;
&lt;p&gt;Kita masuk ke framework terakhir yaitu Vue. Vue juga di awal tutorialnya menyarankan menggunakan CDN sama halnya seperti React dan jQuery. Jadi tinggal buat sebuah folder dan buat sebuah file html.&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;    $ &lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; jsday&lt;br /&gt;    $ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; jsday&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Kemudian load vue dari CDN. Dan tulis kode vue di bagian script dibawah atau di file terpisah.&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;&amp;lt;!-- index.html --&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token doctype&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;token doctype-tag&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;token name&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;JSDay 2019&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;title&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;https://unpkg.com/vue&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;head&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;h2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;span class=&quot;token language-javascript&quot;&gt;&lt;br /&gt;      &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        el&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;#app&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;        data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;          message&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;JSDay 2019!!!&#39;&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;html&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Dukungan Komunitas&lt;/h3&gt;
&lt;p&gt;Yang tidak kalah penting adalah dukungan komunitas di sekitar kita. Ketika kita belajar kita butuh dukungan komunitas. Kita butuh teman belajar. Proses belajar tentu akan lebih cepat.&lt;/p&gt;
&lt;p&gt;Tadi di bagian pertama kita sudah membahas tentang &lt;em&gt;meetup&lt;/em&gt;, grup di facebook dan grup telegram. Nah sekarang kita akan fokus gimana kalau kita kesulitan dan butuh mencari solusi jika menemukan masalah. Sayangnya belum ada forum tanya jawab **di Indonesia atau yang berbahasa Indonesia. Sehingga data diambil dari stackoverflow.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_17.42.44.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_17.42.44.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Disini jquery sangat jauh mengungguli jumlah pertanyaan karena memang yang paling senior, otomatis pertanyaan juga yang paling banyak. Kemudian diikuti Angular, React, Vue, Ember dan terakhir Svelte.&lt;/p&gt;
&lt;p&gt;Jika kita kelompokkan, ada empat kelompok. Kelompok pertama adalah jQuery yang sangat jauh berbeda. Kelompok kedua ada React dan Angular. Vue dan ember ada di kelompok ketiga. Svelte menjadi kelompok terakhir.&lt;/p&gt;
&lt;p&gt;Pertanyaan terkait Angular dan React banyak sekali, sementara dibandingkan kelompok kedua, vue dan Ember yang bisa dibilang hanya 1/4 nya saja. Ember dan Angular bisa diasumsikan umurnya mendekati jika dihitung dari angular versi pertama. React dan Vue lahirnya juga hampir bersamaan.&lt;/p&gt;
&lt;p&gt;Data berikutnya, sedikit seru-seruan, mari kita bandingkan pengikut masing-masing akun resmi tiap framework dan pustaka di twitter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_17.57.01.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_17.57.01.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;React dan Angular cukup jauh meninggalkan teman-teman yang lainnya dari sisi pengikut atau &lt;em&gt;follower&lt;/em&gt; yang mencapai tiga ratus ribuan. Vue dan Ember juga cukup jauh sekitar seratus ribuan. Yang menarik jQuery pengikutnya paling sedikit. Bahkan sudah dilewati Svelte yang umurnya paling muda.&lt;/p&gt;
&lt;p&gt;Statistik berikutnya yang akan kita lihat adalah dari repositori GitHub.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.02.04.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.02.04.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Nah kalo di repositori GitHub, Vue cukup merajai. Disini seperti ada tiga kelompok:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vue dan React,&lt;/li&gt;
&lt;li&gt;Angular dan jQuery,&lt;/li&gt;
&lt;li&gt;Svelte dan Ember&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Untuk jumlah &lt;em&gt;watches&lt;/em&gt; React merupakan pustaka yang paling banyak jumlah &#39;pengintainya&#39;.&lt;/p&gt;
&lt;p&gt;Masih dari repositori GitHub, beberapa statistik menarik lainnya, yaitu jumlah &lt;em&gt;commit&lt;/em&gt;, jumlah kontributor dan umurnya di GitHub.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.06.54.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.06.54.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Beberapa hal menarik disini pertama tentang Svelte. Dengan umur yang baru dua tahun bisa mengalahkan vue dari sisi jumlah &lt;em&gt;commit&lt;/em&gt;. Padahal jumlah kontributornya tidak terlalu jauh berbeda. Apakah artinya kontributorSsvelte menerapkan strategi &lt;em&gt;commit often&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Disini juga dapat dilihat framework seperti Angular, React, dan Ember memiliki kontributor yang sangat banyak dibandingkan framework atau pustaka lainnya.&lt;/p&gt;
&lt;h3&gt;Pustaka Pendukung&lt;/h3&gt;
&lt;p&gt;Cepat atau lambat sebuah pustaka dan framework membutuhkan bantuan tambahan dalam bentuk pustaka atau &lt;em&gt;library&lt;/em&gt;, terutama untuk framework yang minimalis. Framework seperti Svelte atau pustaka jquery apalagi, pasti akan butuh pustaka tambahan. Nah disini saya melakukan pencarian dari npm dengan tag angular, ember, jquery, react, svlete dan vue.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.12.06.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.12.06.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Terlihat React melesat sendirian dengan jumlah pustaka terbanyak, nyaris lima puluh ribu. Disini terlihat jelas perbedaannya, React dipasarkan sebagai pustaka bukan framework, makanya banyak pustaka tambahan bermunculan. Bahkan beberapa pustaka &lt;em&gt;de facto&lt;/em&gt; seperti redux, react router, create react app muncul sebagai pustaka yang dikembangkan oleh komunitas. Meskipun React dikembangkan oleh Facebook.&lt;/p&gt;
&lt;p&gt;Kemudian framework seperti Angular dan Ember yang memang tidak terlalu membutuhkan pustaka tambahan karena memang secara fitur sudah cukup lengkap.&lt;/p&gt;
&lt;p&gt;Sedangkan Svelte jumlahnya sedikit, wajar karena masih baru. Namun ada yang menarik, meskipun bentuknya pustaka, jQuery pustaka tambahan sedikit sekali ada di npm. Mungkin karena diawal, jQuery hidupnya bukan di npm. jQuery lahir lebih dulu sebelum ada npm.&lt;/p&gt;
&lt;h3&gt;Performa&lt;/h3&gt;
&lt;p&gt;Nah sekarang kita masuk ke pembahasan yang cukup menarik dibahas, yaitu performa. Salah satu konsiderasi developer senior adalah seberapa cepat sebuah framework memanjakan penggunanya dalam hal kecepatan.&lt;/p&gt;
&lt;p&gt;Disini saya tidak menggunakan metode benchmark yang kadang ‘menyesatkan’ dan subjektif, namun saya akan menggunakan metode yang sebenarnya cukup subjektif, yaitu Chrome UX Report. Chrome UX Report adalah data yang secara anonymous didapat dari pengguna browser chrome. Jadi disini pengguna browser lain tidak dihitung. Data diambil dari 2014 hingga awal september 2019.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.17.03.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.17.03.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dari Chrome UX Report saya bisa mendapatkan informasi jumlah pengguna yang mengakses website. Dari situ kemudian dipilah lagi website yang diakses menggunakan framework apa.&lt;/p&gt;
&lt;p&gt;Hasilnya, ternyata penggunaan pustaka dan framework dunia masih dikuasai secara dominan oleh jQuery. Hanya 10 persen sisanya dibagi-bagi ke framework dan pustaka lainnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.18.35.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.18.35.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Untuk performanya sendiri. Kita akan lihat dua metrik: first contentful paint dan first input delay. First Contentful Paint atau FCP adalah saat pertama kali konten atau isi dari sebuah web atau dicetak ke browser. FCP bergantung pada performa server rendered, dan seberapa efektif sebuah framework melakukan proses rendering.&lt;/p&gt;
&lt;p&gt;Sedangkan First Input Delay atau FID adalah seberapa lama waktu yang dibutuhkan agar pengguna dapat berinteraksi dengan aplikasi web kita, seperti scroll, klik, ketik dan lain sebagainya. FID biasanya bergantung ke ukuran aplikasi atau ukuran pustaka atau framework itu sendiri.&lt;/p&gt;
&lt;p&gt;Dan secara umum yang memiliki performa tercepat adalah Ember. Svelte sendiri memiliki kemampuan FID tercepat karena memang JavaScript yang dihasilkan termasuk yang paling kecil.&lt;/p&gt;
&lt;h3&gt;Lowongan Pekerjaan&lt;/h3&gt;
&lt;p&gt;Setelah belajar framework baru, dan sudah mendapatkan gambaran performa untuk masing-masing pustaka atau framework, sekarang kita akan mencoba menjawab kira-kira dari daftar framework ini prospek nya gimana saat ini dan kedepannya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.22.48.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.22.48.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Pertama kita lihat jumlah lowongan pekerjaan tersedia di dunia. Disini saya melakukan pencarian data di stackoverflow jobs dan upwork untuk pekerjaan lepas atau &lt;em&gt;freelance&lt;/em&gt; dan juga &lt;em&gt;remote working. S&lt;/em&gt;engaja saya tampilkan data seluruh dunia supaya bisa dikomparasi juga dengan perkembangan di Indonesia. Untuk stackoverflow jobs sendiri, talenta jQuery terlihat sudah mulai menurun. Lowongan React paling banyak, diikuti Angular, jQuery, Vue dan Ember.&lt;/p&gt;
&lt;p&gt;Dan untuk data dari upwork, jQuery masih merajai. Jauh sekali dibandingkan React, Angular, Vue, Ember dan diikuti dengan Svelte.&lt;/p&gt;
&lt;p&gt;Bagaimana dengan lowongan pekerjaan di Indonesia? Disini saya menyajikan data dari dua sumber: LinkedIn dan juga Urbanhire.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.46.27.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.46.27.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan ternyata masih banyak sekali yang mencari developer yang bisa jQuery, nyaris mencapai tiga ribu lowongan. Sementara lowongan rReact dan yang lainnya berkisar di enam ratus atau lebih rendah. Data dari Linkedin ini sedikit bias karena saya melakukan proses pencarian di LinkedIn pribadi. Kemungkinan besar di lingkaran saya masih banyak yang membuka lowongan yang membutuhkan kemampuan jQuery.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.48.52.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.48.52.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Saya juga melakukan pencarian data lowongan di Urbanhire yang mungkin lebih objektif dan tidak bias. Di platform pencarian lowongan pekerjaan di Indonesia ini, ternyata jumlah lowongan React lebih banyak dari jQuery dan yang lainnya meski tidak terlalu signifikan perbedaannya. Cukup berimbang.&lt;/p&gt;
&lt;h2&gt;Sudut Pandang Master&lt;/h2&gt;
&lt;p&gt;Dan di bagian ini kita akan menjawab pertanyaan-pertanyaan dari golongan yang termasuk kedalam pengambil keputusan seperti team lead, arsitek, Vice President of Engineering hingga Chief Technology Officer atau CTO. Dan kita akan melihat beberapa hal seperti: jumlah talenta tersedia dan tingkat maturity dari sebuah framework atau pustaka.&lt;/p&gt;
&lt;h3&gt;Talenta Tersedia&lt;/h3&gt;
&lt;p&gt;Disini saya kembali menggunakan fitur pencarian di &lt;a href=&quot;https://linkedin.com/in/rizafahmi&quot;&gt; LinkedIn &lt;/a&gt; untuk mencari banyaknya talenta untuk setiap framework dan pustaka.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.55.10.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.55.10.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan ternyata yang menguasai jQuery masih sangat banyak baik di Indonesia ataupun di dunia. Dan jaraknya masih cukup jauh antara jQuery dengan framework lainnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_18.56.22.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_18.56.22.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan berikut data yang ada di database &lt;a href=&quot;https://geekhunter.co/&quot;&gt; geekhunter &lt;/a&gt;. Seperti yang bisa dilihat, jQuery masih merupakan pustaka yang paling banyak dikuasai.&lt;/p&gt;
&lt;h3&gt;Tingkat Maturity&lt;/h3&gt;
&lt;p&gt;Dibagian ini kita akan membahas tentang kedewasaan framework atau maturity. Disini kita akan melihat hal-hal seperti &lt;em&gt;release cycle&lt;/em&gt;, jumlah pengelola, &lt;em&gt;issues&lt;/em&gt;, &lt;em&gt;pull request&lt;/em&gt; dan juga &lt;em&gt;testing.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_19.15.22.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_19.15.22.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Disini data saya dapatkan dari GitHub dan terlihat ada beberapa &lt;em&gt;insight&lt;/em&gt; menarik. Pertama yang menarik adalah Svelte. Framework termuda disini rilis per tahunnya paling tinggi. Wajar karena masih baru, jadi jangan kaget kalau masih sering terjadi perubahan API atau belum stabil. Bandingkan dengan jQuery yang secara umur adalah yang paling tua. Rilis per tahunnya paling kecil karena sudah berumur 10 tahun.&lt;/p&gt;
&lt;p&gt;Repositori yang paling produktif adalah Angular dalam hal jumlah &lt;em&gt;commit&lt;/em&gt;. Nyaris empat ribu &lt;em&gt;commit&lt;/em&gt; per tahun. Dan Angular memiliki &lt;em&gt;release cycle&lt;/em&gt; cukup tinggi dibandingkan framework lain, mungkin karena umurnya tergolong lebih muda. Disini saya hanya menggunakan repositori Angular versi kedua atau yang lebih baru, bukan Angular versi pertama. Sedangkan Ember adalah satu-satunya framework yang menggunakan metode release cycle secara konsisten. Menghasilkan rilis baru setiap 6 minggu.&lt;/p&gt;
&lt;p&gt;React sendiri meskipun disini umurnya 6 tahun namun React sudah dikembangkan dan digunakan jauh sebelum itu. Angka 6 tahun disini adalah umur saat kodenya menjadi sumber terbuka atau open source.&lt;/p&gt;
&lt;p&gt;Berikutnya kita melihat jumlah issue di GitHub. Issue github ini merupakan salah satu metrik untuk menilai apakah sebuah proyek open source itu sehat atau tidak.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_19.42.03.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_19.42.03.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Disini Angular adalah pemilik issues terbanyak baik yang sudah selesai atau &lt;em&gt;closed&lt;/em&gt; maupun yang masih belum diselesaikan atau &lt;em&gt;open.&lt;/em&gt; Perbedaannya cukup signifikan. Hal ini mungkin disebabkan karena Angular punya banyak fitur yang harus dikembangkan dan dikelola. Namun Ember dengan fitur yang cukup lengkap juga jumlah &lt;em&gt;issue&lt;/em&gt;-nya tidak sebanyak Angular, bahkan lebih sedikit jika dibandingkan React dan Vue.&lt;/p&gt;
&lt;p&gt;Svelte adalah satu-satunya framework yangjumlah open issue-nya lebih banyak daripada yang closed. Mungkin karena mereka sedang &lt;em&gt;heavy development&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Berikutnya kita melihat seberapa banyak pull request atau PR yang terjadi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_19.45.08.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_19.45.08.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;jQuery sudah tidak terlalu banyak pull request yang open karena mungkin sudah cukup &lt;em&gt;mature&lt;/em&gt; atau sudah tidak terlalu banyak fitur yang dikembangkan. Atau juga sudah tidak memiliki banyak bugs. Sedangkan kontributor Angular ternyata adalah yang paling produktif mengirimkan pull request sementara Vue memiliki jumlah pull request yang paling sedikit.&lt;/p&gt;
&lt;p&gt;Selanjutnya kita akan melihat sebeapa banyak testing yang dilakukan oleh masing-masing framework dibandingkan dengan jumlah baris kode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/Screen_Shot_2020-01-26_at_19.46.52.png&quot; alt=&quot;Screen_Shot_2020-01-26_at_19.46.52.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Angular memiliki baris kode yang paling banyak dengan jumlah test case juga yang paling banyak. Yang agak mengejutkan disini adalah Ember ternyata jumlah baris kodenya hampir sama dengan Vue tapi dengan jumlah test case yang lebih banyak bahkan lebih banyak dibandingkan React. Svelte juga jumlah test case-nya cukup banyak jika dibandingkan dengan jumlah baris kodenya, secara rasio.&lt;/p&gt;
&lt;p&gt;Maksud saya menampilkan data ini bukan untuk adu siapa yang paling banyak jumlah test, tapi lebih melihat gambaran &lt;em&gt;framework&lt;/em&gt; mana yang peduli dengan testing. Dan data ini bisa jadi bereleasi dengan seberapa mudah aplikasi kita di test nantinya.&lt;/p&gt;
&lt;h1&gt;Kesimpulan&lt;/h1&gt;
&lt;p&gt;Masa-masa saat ini adalah masa yang sangat menyenangkan dan &lt;em&gt;exciting&lt;/em&gt; terutama untuk developer JavaScript. Ekosistem pendukung semakin matang, pilihan untuk belajar sangat banyak, begitu juga media dan pilihan cara belajar. Bisa belajar dari artikel, buku hingga format video. Ada pustaka atau framework yang sangat &lt;em&gt;developer friendly&lt;/em&gt;, dengan beberapa langkah kita sudah bisa membuat aplikasi. Ada juga yang sangat &lt;em&gt;user friendly&lt;/em&gt; dalam artian mungkin untuk &lt;em&gt;development&lt;/em&gt; butuh waktu yang agak panjang dan tidak semudah yang lain, namun hasil akhirnya sangat memanjakan. Aplikasinya cepat dan ringan tidak memberatkan pengguna.&lt;/p&gt;
&lt;p&gt;Teman-teman bisa jadikan statistik-statistik ini sebagai bahan untuk &lt;em&gt;learning path&lt;/em&gt;. Baru belajar? Mulai dari sudut pandang pertama: junior. Buat yang ingin belajar hal baru bisa dilihat dari sudut pandang kedua: senior. Mau bikin produk atau membangun tim? Konsiderasi hal-hal yang kita bahas di sudut pandang ketiga.&lt;/p&gt;
&lt;p&gt;Apapun piilihan teman-teman, yang penting semua itu bisa membantu teman-teman dalam berkarya, baik karya yang sederhana hingga karya yang luar biasa.&lt;/p&gt;
&lt;p&gt;Untuk sudut pandang pengambil keputusan, meskipun memilih teknologi berdasarkan &lt;em&gt;hype&lt;/em&gt; atau tren bukanlah hal yang salah, tapi perlu dikonsiderasi juga talenta tersedia dan jika saya diperbolehkan menambahkan opini pribadi, kadang kita perlu melawan arus, melakukan apa yang tidak dilakukan orang lain, anti mainstream.&lt;/p&gt;
&lt;p&gt;Ada yg namanya &lt;a href=&quot;http://www.paulgraham.com/pypar.html&quot;&gt; python paradox &lt;/a&gt; dimana kita sengaja pilih teknologi yang jarang digunakan agar memikat talenta-talenta yang memang tertarik dengan teknologi tersebut sekaligus tidak perlu bersaing dengan para &lt;em&gt;unicorn&lt;/em&gt; untuk merekrut developer. Ada juga yang mengambil jalur untuk memilih teknologi yang sudah matang, &lt;em&gt;obvious&lt;/em&gt;, teknologi yang sudah membosankan, &lt;em&gt;boring technology club&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Tujuan disajikannya data ini bukan untuk melihat framework atau pustaka mana yang paling bagus, tapi lebih kepada framework atau pustaka mana yang cocok buat kita dari ketiga sudut pandang tadi.&lt;/p&gt;
&lt;hr class=&quot;border-b&quot; /&gt;
&lt;p&gt;PS: Terimakasih banyak saya ucapkan kepada beberapa teman yang sudah membantu menyusun materi ini. Orang pertama yang saya hubungi ketika mulai menyusun topik ini adalah &lt;a href=&quot;https://twitter.com/tyohan&quot;&gt;Yohan Totting&lt;/a&gt;. Dari awal &lt;em&gt;brainstorm&lt;/em&gt; materi sampai hari h di mentorin oleh beliau.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;img src=&quot;https://pbs.twimg.com/media/EB7kz-iU8AI2rwz?format=jpg&amp;name=4096x4096&quot; alt=&quot;notes&quot; /&gt; Helping &lt;a href=&quot;https://twitter.com/rizafahmi22?ref_src=twsrc%5Etfw&quot;&gt;@rizafahmi22&lt;/a&gt; to prepare his keynote for &lt;a href=&quot;https://twitter.com/hashtag/JSDayID?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#JSDayID&lt;/a&gt; &lt;a href=&quot;https://t.co/miuEfuqNzz&quot;&gt;pic.twitter.com/miuEfuqNzz&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yohan Totting (@tyohan) &lt;a href=&quot;https://twitter.com/tyohan/status/1161617348228292610?ref_src=twsrc%5Etfw&quot;&gt;August 14, 2019&lt;/a&gt;&lt;/blockquote&gt; &lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;Terimakasih juga buat &lt;a href=&quot;https://www.instagram.com/herlambang_srihartono/&quot;&gt; Herlambang&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/rizqme&quot;&gt; Rizqi &lt;/a&gt; dan &lt;a href=&quot;https://twitter.com/hismamaz&quot;&gt; Hisma &lt;/a&gt; alias Mamaz yang juga ikut &lt;em&gt;brainstorming&lt;/em&gt; dari awal. Terimakasih juga untuk &lt;a href=&quot;https://twitter.com/JecelynYeen&quot;&gt; Jecelyn Yeen &lt;/a&gt; yang menghubungkan saya dengan salah satu kontributor Angular. Tak lupa terimakasih untuk om &lt;a href=&quot;https://www.facebook.com/luridarmawan/&quot;&gt;Luri Darmawan&lt;/a&gt; yang sudah membagikan data terkait percakapan di telegram via &lt;a href=&quot;https://carik.id/&quot;&gt;carikbot&lt;/a&gt; dan juga &lt;a href=&quot;https://twitter.com/kenratriiswari&quot;&gt; Ken Ratri &lt;/a&gt; dari &lt;a href=&quot;http://geekhunter.co/&quot;&gt; geekhunter &lt;/a&gt; yang udah bagi data talenta di Indonesia.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/ekosistemjs/jecelyn.jpeg&quot; alt=&quot;Jecelyn&quot; /&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Memahami Sistem Konkurensi BEAM Melalui Elixir</title>
    <link href="https://rizafahmi.com/2019/04/29/memahami-beam/"/>
    <updated>2019-04-29T00:00:00Z</updated>
    <id>https://rizafahmi.com/2019/04/29/memahami-beam/</id>
    <content type="html">&lt;p&gt;Salah satu kontribusi besar &lt;a href=&quot;https://twitter.com/FrancescoC/status/1119596234166218754&quot;&gt; Joe Armstrong &lt;/a&gt; yang ketika tulisan ini dibuat baru saja meninggal dunia adalah bahasa pemrograman Erlang beserta BEAM, atau yang lebih dikenal dengan Erlang Virtual Machine. Erlang VM cukup terkenal kehebatannya terutama ketika &lt;a href=&quot;http://highscalability.com/blog/2014/3/31/how-whatsapp-grew-to-nearly-500-million-users-11000-cores-an.html&quot;&gt; mampu menangani 2 juta koneksi per server di aplikasi chat WhatsApp! &lt;/a&gt; Di artikel ini kita akan membedah mekanisme dibalik kemampuan konkurensi yang dimiliki BEAM dengan bahasa pemrograman Elixir. Meskipun demikian, semua yang akan dilakukan di artikel ini dapat pula diimplementasikan di bahasa pemrograman lain yang juga berjalan di BEAM atau Erlang VM seperti Erlang, LFE, Alpaca, Gleam dan lain-lain.&lt;/p&gt;
&lt;h2&gt;Mekanisme Konkurensi di BEAM&lt;/h2&gt;
&lt;p&gt;Ide utama dari BEAM berpusat di sesuatu yang disebut dengan proses atau process. Proses sederhananya adalah program yang berjalan secara sekuensial, baris-per-baris dan tidak dapat berjalan secara paralel atau menjalankan pola konkurensi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/process.png&quot; alt=&quot;process&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Untuk membuatnya menjadi konkuren, kita harus menjalankan proses lebih dari satu. Di Elixir, hal ini bisa kita lakukan dengan fungsi &lt;code&gt;spawn&lt;/code&gt;. Dan ketika kita melakukan spawn, aplikasi kita akan memiliki dua proses yang berjalan bersamaan. Proses disini bukanlah proses di level sistem operasi. Proses di BEAM sangat ringan, hanya beberapa kilobytes saja dan kita dapat memiliki proses sebanyak yang kita mau. Satu mesin bisa memiliki hingga 268 juta proses!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/spawn.png&quot; alt=&quot;spawn&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Sebenarnya kita akan memiliki dua program independen yang berjalan terpisah satu
dengan yang lainnya. Mereka tidak berbagi &lt;em&gt;state&lt;/em&gt; atau apapun, dan tidak memiliki
kesamaan sama sekali. Berada di memori, &lt;em&gt;stack, heap&lt;/em&gt; yang berbeda, dan juga
&lt;em&gt;garbage collector&lt;/em&gt; sendiri-sendiri dan tidak saling mengganggu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/processes.png&quot; alt=&quot;proses&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan satu-satunya cara untuk membuat kedua proses yang berbeda tadi untuk dapat
bekerjasama adalah dengan saling berkirim pesan. Hal ini juga dikenal dengan
pola konkurensi melalui berkirim pesan (message passing concurrency) atau lebih
dikenal dengan actor model. Pola ini mirip dengan ide mircoservice dimana setiap
service terpisah satu dengan yang lain dan saling berhubungan dengan protokol
HTTP.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/processes_link.png&quot; alt=&quot;processes link&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Misalkan proses pertama mengirimkan pesan ke proses kedua. Proses pertama mengirimkan pesan dengan fungsi &lt;code&gt;send&lt;/code&gt; dan proses kedua menerima fungsi dengan blok &lt;code&gt;receive&lt;/code&gt; dan kemudian menangani permintaan dari proses pertama.&lt;/p&gt;
&lt;p&gt;Ketika aplikasi dijalankan, yang terjadi adalah sebuah proses di sistem operasi
akan muncul. Yap, hanya satu proses di level sistem operasi. Di dalam proses inilah semua proses yang kita &lt;code&gt;spawn&lt;/code&gt; akan berjalan. Proses-proses yang berjalan secara sekuensial, independen, dan ringan.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/activity.png&quot; alt=&quot;activity&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/BEAM.png&quot; alt=&quot;BEAM&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Proses disini bukanlah proses di level sistem operasi. Proses di BEAM sangat ringan, hanya beberapa kilobytes saja dan kita dapat memiliki proses sebanyak yang kita mau. Satu mesin bisa memiliki hingga 268 juta proses!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/BEAM-Processes.png&quot; alt=&quot;BEAM-Processes&quot; /&gt;&lt;/p&gt;
&lt;p&gt;BEAM secara internal kemudian menjalankan threads yang diberi nama penjadwal atau scheduler. Satu penjadwal untu satu inti dari CPU. Jika kita memiliki CPU dengan empat inti, maka penjadwalnya ada empat.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/BEAM-Scheduler.png&quot; alt=&quot;scheduler&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Penjadwal ini yang bertanggungjawab mengeksekusi proses-proses. Sederhananya,
proses akan mengantri di satu jalur dan setiap penjadwal akan bergiliran
mengambil satu proses dan kemudian mengeksekusinya hingga proses tersebut
selesai dan akan mengambil proses di antrian berikutnya. Begitu seterusnya.&lt;/p&gt;
&lt;h2&gt;Praktek Menggunakan Konkurensi BEAM&lt;/h2&gt;
&lt;p&gt;Sekarang pertanyaannya, bagaimana cara kita melakukan implementasi pola proses di aplikasi atau sistem yang kita kembangkan? Bagaimana caranya kita memisahkan tugas-tugas sehingga menjadi proses-proses kecil dan independen? Mari kita lihat demo aplikasi berikut ini.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/dasbor.png&quot; alt=&quot;dasbor&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Jobs&lt;/em&gt; adalah proses yang melakukan &lt;em&gt;infinite loop&lt;/em&gt;. Didalam &lt;em&gt;loop&lt;/em&gt; ada tugas
yang dapat menyebabkan &lt;em&gt;CPU bound&lt;/em&gt; untuk melakukan simulasi tugas yang cukup
berat. Selanjutnya setiap proses yang ditelurkan (&lt;em&gt;spawn&lt;/em&gt;), pada ilustrasi
diatas terdapat 10.000 proses. Setelah proses selesai mengerjakan tugasnya, ia
akan mengirimkan pesan ke proses lain yang tugasnya melakukan pencatatan bahwa
proses berhasil dieksekusi atau tidak berhasil. Proses-proses yang melakukan
tugas berat kemudian ditidurkan (&lt;em&gt;sleep&lt;/em&gt;) selama satu detik dan hidup kembali. Begitu seterusnya.&lt;/p&gt;
&lt;p&gt;Di demo ini kita hanya menggunakan satu penjadwal (&lt;em&gt;scheduler&lt;/em&gt;) saja, bukan empat meskipun memiliki empat inti CPU. Tujuannya agar memudahkan saja untuk membuat sibuk CPU.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/frontend.png&quot; alt=&quot;frontend&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Kemudian di halaman yang dapat diakses pengguna, aplikasinya cukup sederhana namun sudah cukup mewakili aplikasi web secara umum. Ada sebuah input teks yang dapat menerima bilangan bulat positif dan ketika disubmit aplikasi akan menghitung jumlah dari angka tersebut berurutan dari angka satu. Misalnya kita memasukkan angka 3 maka hasilnya menjadi 1 + 2 + 3 yaitu 6 atau jika kita memasukkan angka 4 maka hasilnya menjadi 10 dan seterusnya. Berikut cuplikan kode dari proses kalkulasinya.&lt;/p&gt;
&lt;pre class=&quot;language-elixir&quot;&gt;&lt;code class=&quot;language-elixir&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;do:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sum&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;do:&lt;/span&gt; sum &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; from&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; acc_sum&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;do:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; acc_sum &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setiap ada yang membuka halaman ini koneksi akan terbentuk antara klien dan server atau sistem. Dan ketika pengguna memasukkan angka 3 maka sistem akan melakukan perhitungan dan mengembalikan hasilnya dalam hal ini angka 6.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/client-server.png&quot; alt=&quot;client-server&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan misalkan ada tiga pengguna yang mengakses secara bersamaan, maka akan ada tiga koneksi. Satu untuk setiap pengguna atau setiap sesi (&lt;em&gt;session&lt;/em&gt;). Begitu pula jika ada 1000 orang, akan ada 1000 koneksi yang terjadi antar proses dan begitu seterusnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/clients-servers.png&quot; alt=&quot;clients-servers&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;We do not have one web server handling 2 millions sessions. We have 2 millions web servers handling one session each.&amp;quot; -- Joe Armstrong&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Proses kalkulasinya sendiri terjadi di proses yang berbeda. Koneksi menelurkan (&lt;em&gt;spawn&lt;/em&gt;) proses baru, kita sebut saja sebagai &lt;em&gt;calculation&lt;/em&gt;. Proses &lt;em&gt;calculation&lt;/em&gt; melakukan kalkulasi dan mengirimkan hasilnya kembali ke proses &lt;em&gt;server&lt;/em&gt; untuk seterusnya diteruskan ke proses &lt;em&gt;client&lt;/em&gt;. Kemudian proses &lt;em&gt;calculation&lt;/em&gt; berhenti dan mati karena sudah menyelesaikan pekerjaannya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/server-calculation.png&quot; alt=&quot;server-calculation&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Pola seperti ini dibentuk dengan harapan sistem akan menjadi &lt;em&gt;fault-tolerant&lt;/em&gt; dan &lt;em&gt;high availability&lt;/em&gt; untuk menghasilkan servis yang tetap berjalan meski terjadi masalah di &lt;em&gt;production&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Situasi yang umum ditemui di &lt;em&gt;production&lt;/em&gt;, misalnya ada kesalahan, yang akan menghasilkan kesalahan yang belum ditangani (&lt;em&gt;unhandled exception&lt;/em&gt;) seperti &lt;code&gt;division by zero&lt;/code&gt; atau &lt;code&gt;undefined is not a function&lt;/code&gt;. Coba masukkan angka keberuntungan: 13! Terjadi kesalahan dan pesan kesalahan muncul di server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/13error.png&quot; alt=&quot;13 error&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Namun menariknya, sistem tetap berjalan normal. Kita tetap bisa memasukkan angka lain selain angka 13 dan sistem tetap memberikan hasil yang tepat. Hanya satu proses &lt;em&gt;calculation&lt;/em&gt; angka 13 saja yang bermasalah dan mati.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catatan penting&lt;/strong&gt;: Sampai tahapan ini kita berhasil memisahkan kesalahan-kesalahan (&lt;em&gt;failures&lt;/em&gt;) dengan cara mendelegasikannya kedalam proses-proses kecil.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/running.gif&quot; alt=&quot;running&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Praktek Sistem Latensi&lt;/h2&gt;
&lt;p&gt;Mari kita coba memasukkan angka yang cukup besar agar sistem bisa menghitung lebih lama seperti angka 999999999. Otomatis load di dasbor pun meningkat. Meski demikian, sistem tetap reaktif menerima angka lain sambil menunggu hasil dari 999999999! Hal ini karena yang sibuk menghitung hanyalah satu proses saja. Proses lainnya dapat berjalan normal seperti tidak terjadi apa-apa. Buat saya, ini adalah definisi dari &lt;em&gt;high availability&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/availability.gif&quot; alt=&quot;availability&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Simulasi Kesalahan Yang Lebih Fatal&lt;/h2&gt;
&lt;p&gt;Sekarang kita akan melihat kesalahan yang lebih berbahaya. Kita akan memasukkan
angka negatif, misalnya -1 yang akan menyebabkan CPU menjadi 100% karena sistem
yang dikembangkan sebenarnya hanya menerima bilangan bulat negatif. Namun kita
lupa untuk menangani jika pengguna memasukkan angka negatif. Hal yang biasa
terjadi kan?!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/negatif.gif&quot; alt=&quot;negatif&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan benar saja, ketika -1 diinput, yang terjadi adalah CPU langsung 100% dalam waktu yang cukup lama, bahkan terus menerus karena proses kalkulasi terus terjadi dan tidak dapat berhenti. Meski demikian, sistem tetap jalan, dan kita tetap bisa menggunakan aplikasi dan sistem tetap dapat digunakan seperti biasa.&lt;/p&gt;
&lt;p&gt;Masalah semakin rumit ketika tidak ada informasi apapun di catatan (&lt;em&gt;log&lt;/em&gt;) sistem. Seolah tidak terjadi apa-apa. Yang kita dapatkan adalah CPU 100% terus menerus.&lt;/p&gt;
&lt;h2&gt;Bug Fixing di &lt;em&gt;Production&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Mari sekarang kita telusuri dan mencari tahu apa yang terjadi. Ceritanya kita mendapatkan notifikasi bahwa sistem mencapai CPU 100% dalam waktu yang lama meski proses lainnya bekerja seperti biasa. Dapat dipastikan dari dasbor terlihat sepuluh ribu tugas yang kita instruksikan tetap berjalan dan memiliki tingkat kesuksesan nyaris 100%.&lt;/p&gt;
&lt;p&gt;Mari kita ssh ke server dan melihat apa yang terjadi. Ternyata tidak ada informasi apapun dari catatan sistem (&lt;em&gt;log&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/catatan.png&quot; alt=&quot;catatan&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Berhubung hanya ada satu proses di level sistem operasi, kita tidak bisa membunuh proses tersebut di level sistem operasi dengan menggunakan manajemen tugas (&lt;em&gt;task manager&lt;/em&gt;) misalnya. Apabila hal ini kita lakukan, seluruh sistem akan berhenti. Untuk itu kita harus masuk kedalam sistem.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/taskmanager.png&quot; alt=&quot;taskmanager&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Kita bisa melakukannya dengan perintah &lt;code&gt;_build/prod/rel/system/bin/system remote_console&lt;/code&gt; dari direktori aplikasi berada untuk masuk ke sesi IEx dengan konteks sistem yang sedang berjalan dan kita bisa melakukan investigasi disana. IEx adalah REPL Elixir dan dengan menggunakan perintah diatas, kita akan mendapatkan sesi IEx didalam sistem berjalan dan konteks sistem yang sedang berjalan sehingga kita bisa melakukan investigasi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/iex.png&quot; alt=&quot;iex&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Di sesi IEx kita bisa melakukan apapun yang biasa kita lakukan. Misalnya &lt;code&gt;1 + 2&lt;/code&gt;. Kita bisa melihat daftar proses yang sedang berjalan dengan fungsi &lt;code&gt;Process.list()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/process_list.png&quot; alt=&quot;process_list&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan kita bisa mendapatkan informasi dari sebuah proses dengan fungsi &lt;code&gt;Process.info()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/process_info.png&quot; alt=&quot;process info&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan kita bisa mendapatkan informasi proses mana yang membuat &lt;em&gt;CPU load&lt;/em&gt; yang tinggi dengan melakukan agregasi dari informasi yang didapat dari &lt;code&gt;Process.info()&lt;/code&gt;. Di sistem sudah disiapkan sebuah fungsi untuk agregasi dengan menjalankan &lt;code&gt;Runtime.top()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/top.png&quot; alt=&quot;top&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Jalankan fungsi ini beberapa kali untuk memastikan id proses (PID) dengan CPU tertinggi adalah id proses yang sama. Dan kita sudah bisa menyimpulkan bahwa id proses yang bermasalah adalah &lt;code&gt;#PID&amp;lt;0.12507.0&amp;gt;&lt;/code&gt;. Kita simpan informasi id proses kedalam sebuah variable untuk mendapatkan informasi lebih rinci dengan &lt;code&gt;Process.info()&lt;/code&gt;. Dan kita bisa mendapatkan informasi seperti &lt;code&gt;current_stacktrace&lt;/code&gt;. Dan disana kita dapat melihat sistem menjalankan modul &lt;code&gt;ExampleSystem.Math&lt;/code&gt; dan fungsi &lt;code&gt;calc_sum&lt;/code&gt; dengan jumlah argumen 3 dengan kode sumber berada di &lt;code&gt;lib/example_system/math.ex&lt;/code&gt; dibaris ke-20.&lt;/p&gt;
&lt;p&gt;Dan kita bisa membunuh proses tersebut dengan fungsi &lt;code&gt;Process.kill()&lt;/code&gt; dan sistem kembali &lt;em&gt;cool down&lt;/em&gt;. Dan di sisi klien akhirnya setelah sekian lama, pesan kesalahan akhirnya muncul.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/dasbor-2.png&quot; alt=&quot;dasbor&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/frontend-2.png&quot; alt=&quot;frontend&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Setelah sistem mereda, langkah selanjutnya yang biasa kita lakukan adalah memperbaiki kesalahan tersebut. Kita sebelumnya sudah mendapatkan informasi bahwa terakhir kali dieksekusi adalah baris ke-20 dari file &lt;code&gt;lib/example_system/math.ex&lt;/code&gt;. Mari kita lihat kodenya.&lt;/p&gt;
&lt;pre class=&quot;language-elixir&quot;&gt;&lt;code class=&quot;language-elixir&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;do:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; n&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sum&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;do:&lt;/span&gt; sum &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; from&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; acc_sum&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;do:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;calc_sum&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;from &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; to&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; acc_sum &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; from&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan fungsi &lt;code&gt;calc_sum&lt;/code&gt; ini dipanggil dari &lt;code&gt;lib/example_system_web/math/sum.ex&lt;/code&gt;. Dan benar saja, nilai negatif belum ditangani. Memperbaikinya cukup mudah, tinggal tambahkan satu kasus dimana input lebih kecil dari 0 dan kita nyatakan input yang tidak valid.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;defp start_sum(socket, str_input) do&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; operation =&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     case Integer.parse(str_input) do&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     :error -&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         %{pid: nil, input: str_input, result: &quot;invalid input&quot;}&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     {_input, remaining} when byte_size(remaining) &gt; 0 -&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         %{pid: nil, input: str_input, result: &quot;invalid input&quot;}&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     {input, &quot;&quot;} when input &amp;lt;= 0 -&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         %{pid: nil, input: input, result: &quot;invalid input&quot;}&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     {input, &quot;&quot;} -&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;         do_start_sum(input)&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;     end&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt; socket |&gt; update(:operations, &amp;amp;[operation | &amp;amp;1]) |&gt; assign(:data, data())&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;end&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Namun jika diperhatikan , fungsi calc&lt;em&gt;sum kita juga terdapat beberapa kesalahan. Pertama, penanganan input 13 yang memang sengaja dibuat _error&lt;/em&gt;. Dan proses kalkulasinya kurang optimal. Dengan kekuatan &lt;em&gt;googling&lt;/em&gt; dan &lt;em&gt;stackoverflow&lt;/em&gt;, saya mendapatkan perhitungan yang lebih optimal.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token deleted-sign deleted&quot;&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;defp calc_sum(n), do: calc_sum(1, n, 0)&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;defp calc_sum(from, from, sum), do: sum + from&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix deleted&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;defp calc_sum(from, to, acc_sum), do: calc_sum(from + 1, to, acc_sum + from)&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token inserted-sign inserted&quot;&gt;&lt;span class=&quot;token prefix inserted&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;defp calc_sum(n), do: div(n * (n + 1), 2)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Setelah kesalahan diperbaiki, jalankan &lt;em&gt;test&lt;/em&gt; untuk memastikan bahwa semua sudah sesuai ekspektasi. Lalu, &lt;em&gt;moment of truth!&lt;/em&gt; Kita bisa melakukan peluncuran ulang (&lt;em&gt;deployment&lt;/em&gt;) dengan &lt;em&gt;zero downtime&lt;/em&gt; dengan perintah &lt;code&gt;mix system.upgrade&lt;/code&gt;! Ini terbukti dengan aplikasi dasbor yang tetap menyala.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/test-upgrade.png&quot; alt=&quot;test-upgrade&quot; /&gt;
&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/dasbor-3.png&quot; alt=&quot;dasbor&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Dan sekarang kita bisa mencoba kembali kesalahan-kesalahan yang tadi kita
lakukan bahkan tanpa menghentikan sistem secara keseluruhan. Dan karena
perhitungan sudah lebih optimal, perhitungan yang tadinya berjalan cukup lama,
sekarang sudah jauh lebih cepat tanpa memberatkan CPU sama sekali.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/final.png&quot; alt=&quot;final&quot; /&gt;
&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/dasbor-4.png&quot; alt=&quot;dasbor&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/XjlNyeZp5lDri/giphy.gif&quot; alt=&quot;fixing bug in production&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Catatan penting&lt;/strong&gt;: Jangan lakukan hal ini di sistem lain. Hanya di Elixir dan
bahasa-bahasa yang berjalan diatas BEAM yang bisa 😃. Hal ini juga dapat dibuktikan dengan Erlang yang digunakan di sistem telekomunikasi Ericsson yang ketika kode baru diluncurkan ketika kita sedang melakukan percakapan di telepon, telepon tidak terputus.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/BXmOlCy0oBM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;hr /&gt;
&lt;p&gt;Kode dapat dilihat di https://github.com/rizafahmi/demo_system. Untuk belajar
lebih lanjut tentang Elixir dan BEAM silakan baca buku &lt;a href=&quot;https://medium.com/r/?url=https%3A%2F%2Fwww.manning.com%2Fbooks%2Felixir-in-action&quot;&gt; Elixir in Action
&lt;/a&gt;
karya Sasa Juric dan &lt;a href=&quot;https://medium.com/r/?url=https%3A%2F%2Fwww.manning.com%2Fbooks%2Fthe-little-elixir-and-otp-guidebook&quot;&gt; Little Elixir &amp;amp; OTP Guidebook
&lt;/a&gt;
karya Ben Tan Wei Hao.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/elixirinaction.png&quot; alt=&quot;elixir in action&quot; /&gt;
&lt;img src=&quot;https://rizafahmi.com/assets/images/memahami-beam/elixirotp.png&quot; alt=&quot;elixir otp&quot; /&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Pengalaman Pertama Menghadiri Chrome Dev Summit</title>
    <link href="https://rizafahmi.com/2018/12/22/pengalaman-pertama-cds/"/>
    <updated>2018-12-22T00:00:00Z</updated>
    <id>https://rizafahmi.com/2018/12/22/pengalaman-pertama-cds/</id>
    <content type="html">&lt;p&gt;Berikut cerita pengalaman pertama saya menghadiri &lt;a href=&quot;https://developer.chrome.com/devsummit/&quot;&gt;Chrome Dev Summit 2018&lt;/a&gt; atas undangan Google untuk para &lt;a href=&quot;https://developers.google.com/experts/people/riza-fahmi.html&quot;&gt;Google Developers Expert&lt;/a&gt; yang fokus di &lt;a href=&quot;https://developers.google.com/experts/all/technology/web-technologies&quot;&gt;Web Technologies&lt;/a&gt;. Setelah sehari sebelumnya, di tanggal 10–11 November 2018 juga ada perhelatan akbar Developers Experts Summit dimana GDE atau &lt;a href=&quot;https://developers.google.com/experts/&quot;&gt;Google Developers Experts&lt;/a&gt; seluruh dunia berkumpul dan ber-&lt;em&gt;summit&lt;/em&gt;-ria.&lt;/p&gt;
&lt;p&gt;Sebelum mengulas acara yang diselenggarakan di &lt;a href=&quot;https://www.ybca.org/&quot;&gt;Yerba Buena Center for the Arts, San Francisco&lt;/a&gt; pada tanggal 12–13 November 2018 saya ingin menceritakan bagaimana saya bisa menjadi &lt;a href=&quot;https://developers.google.com/experts/&quot;&gt;Google Developers Experts&lt;/a&gt; terlebih dahulu agar konteksnya sesuai.&lt;/p&gt;
&lt;h2&gt;Menjadi Google Developers Experts&lt;/h2&gt;
&lt;p&gt;Suatu sore, saya &lt;em&gt;ngobrol&lt;/em&gt; dengan Mas &lt;a href=&quot;https://twitter.com/tyohan&quot;&gt;Yohan Totting&lt;/a&gt; dan dia ingin saya menjadi GDE, awalnya saya terkejut dan penasaran. Saya yakin masih banyak diluar sana orang yang lebih &lt;em&gt;expert&lt;/em&gt; dibanding saya. Karena penasaran, saya kemudian menanyakan apa itu GDE dan apa tugasnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1__qVaoo5NzVm8UgujxqQfUg.png&quot; alt=&quot;Yohan Totting — Developer Advocate, Web Developer Relations at Google&quot; /&gt;&lt;em&gt;Yohan Totting — Developer Advocate, Web Developer Relations at Google&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Saya masih ingat banget jawaban Mas Yohan saat itu: “Lo lakukan apa yang selama ini sudah lo kerjakan. Tulis artikel, &lt;em&gt;screencast&lt;/em&gt;, &lt;em&gt;podcast&lt;/em&gt;, dan &lt;em&gt;talks&lt;/em&gt;.” Bedanya sekarang semua itu di &lt;em&gt;support&lt;/em&gt; Google. Jadi kalau saya diundang menjadi pembicara diluar Jakarta dan di sekitar Asia Tenggara, Google akan memberikan dukungan dalam bentuk tiket pesawat dan penginapan.&lt;/p&gt;
&lt;p&gt;Dalam hati, seru juga ya karena memang hal tersebut yang saya lakukan beberapa tahun terakhir dalam skala kecil. Singkat cerita, saya memberanikan diri untuk apply dengan &lt;em&gt;mindset nothing to lose&lt;/em&gt;. Banyak tahapan yang harus dilewati, mulai dari &lt;em&gt;screening&lt;/em&gt; awal, interview dengan GDE dan terakhir, kalau lulus, akan diinterview oleh &lt;em&gt;Googler&lt;/em&gt;! Lumayan kan, menambah pengalaman.&lt;/p&gt;
&lt;p&gt;Setelah melewati proses &lt;em&gt;screening&lt;/em&gt;, saya akhirnya dapat kesempatan diinterview oleh GDE. Saya anggap ini sebagai kesempatan saya meyakinkan diri apakah GDE pantas saya perjuangkan, karena praktis akan banyak waktu dan juga biaya yang akan keluar. Saya berkesempatan diinterview oleh &lt;a href=&quot;https://developers.google.com/experts/people/warat-wongmaneekit&quot;&gt;Warat Wongmaneekit&lt;/a&gt;, GDE asal Thailand.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_KGqjtipczDlZErawutzSSQ.png&quot; alt=&quot;Warat Wongmaneekit (kanan)&quot; /&gt;&lt;em&gt;Warat Wongmaneekit (kanan).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Di interview ini saya banyak ‘menjual’ konsep &lt;a href=&quot;https://randomscreencast.com/&quot;&gt;randomscreencast&lt;/a&gt;, &lt;em&gt;video screencast&lt;/em&gt; yang saya produksi. Saya menceritakan konsep &lt;em&gt;randomness&lt;/em&gt;, topik yang &lt;em&gt;random&lt;/em&gt;, dan di-&lt;em&gt;publish&lt;/em&gt; di tanggal dan jam yang &lt;em&gt;random&lt;/em&gt; pula. Kemudian saya juga banyak bercerita tentang beberapa komunitas yang saya inisiasi dan kelola, seperti &lt;a href=&quot;https://www.meetup.com/Meteor-Jakarta/&quot;&gt;Meteor Jakarta&lt;/a&gt;, &lt;a href=&quot;https://www.meetup.com/reactindonesia/&quot;&gt;React Indonesia&lt;/a&gt; dan &lt;a href=&quot;https://www.meetup.com/JakartaJS/&quot;&gt;JakartaJS&lt;/a&gt; tentunya.&lt;/p&gt;
&lt;p&gt;Dan ternyata saya lanjut! Meskipun ada beberapa pertanyaan teknis yang menurut saya jawabannya sulit dan juga pilihan spesialisasi juga cukup sulit. Saya diminta memilih spesialisasi di &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;Progressive Web Apps&lt;/a&gt;, &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; atau &lt;a href=&quot;https://www.webcomponents.org/&quot;&gt;Web Components&lt;/a&gt;/&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt;. Dan saya akhirnya memilih &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;PWA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_qgBvAulWYDj_vsgONAMHYw.png&quot; alt=&quot;Jeff Posnick — Developer Platform Engineer at Google&quot; /&gt;&lt;em&gt;Jeff Posnick — Developer Platform Engineer at Google&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Karena memilih &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;PWA&lt;/a&gt;, maka saya akan diinterview oleh &lt;em&gt;Googler&lt;/em&gt; yang berhubungan dengan PWA. Googler tersebut tak lain adalah yang bikin &lt;em&gt;library service worker&lt;/em&gt;, salah satu bagian penting dari PWA, &lt;a href=&quot;https://developers.google.com/web/tools/workbox/&quot;&gt;workbox&lt;/a&gt; nama &lt;em&gt;library&lt;/em&gt;-nya. Namanya &lt;a href=&quot;https://github.com/jeffposnick&quot;&gt;Jeff Posnick&lt;/a&gt;, yang adalah Developer Platform Engineer di Google.&lt;/p&gt;
&lt;p&gt;Singkat cerita, saya akhirnya menjadi &lt;a href=&quot;https://developers.google.com/experts/&quot;&gt;Google Developers Experts&lt;/a&gt; di Web Technologies fokusnya Progressive Web Apps. Tidak terbayang sebelumnya saya bisa berada di satu lingkaran dengan GDE lain seperti &lt;a href=&quot;https://developers.google.com/experts/people/shirley-wu.html&quot;&gt;Shirley Wu&lt;/a&gt; yang mengajarkan saya tentang &lt;a href=&quot;https://d3js.org/&quot;&gt;D3js&lt;/a&gt; melalui &lt;em&gt;video course&lt;/em&gt;, &lt;a href=&quot;https://developers.google.com/experts/people/kent-c-dodds.html&quot;&gt;Kent C. Dodds&lt;/a&gt; yang mengajarkan saya &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; dan &lt;a href=&quot;https://jestjs.io/&quot;&gt;testing&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/experts/people/ryan-chenkie.html&quot;&gt;Ryan Chenkie&lt;/a&gt; yang mengajarkan saya &lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; melalui &lt;em&gt;video course&lt;/em&gt; dan experts lainnya diseluruh dunia!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_kq0fNkin8vBfmenP7PDMlg.png&quot; alt=&quot;Berada satu lingkaran dengan para experts&quot; /&gt;&lt;em&gt;Berada satu lingkaran dengan para experts.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ketika apa yang saya produksi selama ini diakui oleh seorang Web Developer Relations sekelas Mas &lt;a href=&quot;https://twitter.com/tyohan&quot;&gt;Yohan&lt;/a&gt; dan diapresiasi oleh Google kebahagiaan yang hakiki buat saya. Jadi buat teman-teman yang ingin mengundang saya untuk berbagi silakan kontak saya, transportasi dan akomodasi akan ditanggung oleh Google (&lt;em&gt;syarat dan ketentuan berlaku&lt;/em&gt;).&lt;/p&gt;
&lt;h2&gt;Tentang Acara Chrome Dev Summit&lt;/h2&gt;
&lt;p&gt;Sehari sebelum acara Chrome Dev Summit, saya bertemu dengan Mas &lt;a href=&quot;https://twitter.com/AriyaHidayat&quot;&gt;Ariya Hidayat&lt;/a&gt; yang memang domisili di &lt;a href=&quot;https://en.wikipedia.org/wiki/San_Jose,_California&quot;&gt;San Jose&lt;/a&gt;, dekat dengan lokasi hotel dan &lt;em&gt;venue&lt;/em&gt; Experts Summit. Dan saya diberi bocoran bahwa &lt;a href=&quot;https://developer.chrome.com/devsummit/&quot;&gt;Chrome Dev Summit&lt;/a&gt; itu serunya adalah bagian &lt;em&gt;networking&lt;/em&gt;-nya karena untuk sesi talks-nya dapat dinikmati secara live-streaming via &lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcIDjlCx1PcphPpmf43aKOAdF&quot;&gt;youtube&lt;/a&gt;. Dan itulah yang saya lakukan!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_BXXlQnFRaDaDDhW3q9lRoQ.jpeg&quot; alt=&quot;Bersama sang Legenda, Ariya Hidayat&quot; /&gt;&lt;em&gt;Bersama sang Legenda, Ariya Hidayat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pastinya banyak developer kelas dunia &lt;em&gt;berseliweran&lt;/em&gt; disana, sebagian besar karyawan Google sih, beberapa idola saya. Jadi sekalian berburu &lt;em&gt;selfie&lt;/em&gt; atau sekedar &lt;em&gt;say hi&lt;/em&gt;. Setelah nonton beberapa sesi, terutama sesi yang dibawakan oleh pak &lt;a href=&quot;https://twitter.com/paul_irish&quot;&gt;Paul Irish&lt;/a&gt; tentang performa dan tools &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;lighthouse&lt;/a&gt;.. eh, ternyata pak Paul malah nongkrong jaga stand &lt;em&gt;lighthouse&lt;/em&gt;. Ngga kebayang sih, orang sepenting beliau masih sempat ikutan jaga stand. Ya mumpung beliau idola saya sejak &lt;a href=&quot;https://html5boilerplate.com/&quot;&gt;HTML5 Boilerplate&lt;/a&gt;, &lt;em&gt;say hi&lt;/em&gt; dan foto bareng tentunya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_UQAwr3lgW6hg7GzcRf2E8g.png&quot; alt=&quot;Paul Irish — Performance Engineer at Google&quot; /&gt;&lt;strong&gt;Paul Irish — Performance Engineer at Google&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Saat dulu diminta untuk membawakan materi tentang Progressive Web Apps di TechInAsia Product Development Conference 2017 saya banyak belajar topik tersebut dari &lt;a href=&quot;https://www.udacity.com/course/intro-to-progressive-web-apps--ud811&quot;&gt;online course ini&lt;/a&gt;. Instrukturnya Pete LePage yang sangat, sangat lucu dan membawakan materi dengan menarik. Jauh dari kata &lt;em&gt;boring&lt;/em&gt;. Saya yakin beberapa teman-teman di Indonesia pernah bertemu atau melihat bapak Pete ini karena beliau pernah datang ke Indonesia untuk mengisi materi workshop PWA. Di hari kedua CDS sekilas saya melihat sosok tersebut. Awalnya saya lupa namanya sampai harus &lt;em&gt;googling&lt;/em&gt; dulu supaya ingat namanya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_2w2llYk5fok7ylcU5zaUBQ.png&quot; alt=&quot;Pete LePage — Dev Advocate at google&quot; /&gt;*Pete LePage — *Dev Advocate at google**&lt;/p&gt;
&lt;p&gt;Akhirnya saya berhasil mencegat dia, ngobrol dan foto bareng tentunya. Berterimakasih karena dia yang mengajarkan saya PWA pertama kali dan dari hal tersebut akhirnya membawa saya menjadi GDE. Tak lupa saya tanya rahasia gimana bisa &lt;em&gt;seluwes&lt;/em&gt; itu didepan kamera. Saya pernah berada didepan kamera dan sumpah, susah banget membawakan materi dengan lancar dan luwes ketika berhadapan dengan kamera. Sederhananya, ngga ada rahasia karena &lt;em&gt;he’s a natural&lt;/em&gt;. Memang aslinya dia lucu aja. Berikut cuplikan video Pak Pete buat yang penasaran.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/_dXBibRO0SM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;p&gt;Kemudian tentu, saya bertemu dengan Jeff Posnick yang menginterview saya dan meloloskan saya menjadi GDE. Menariknya, saya sempat bertemu pak Jeff ini dihari pertama, tapi saya ngga *ngeh *kalo itu dia. Beda banget tampilannya di video call dengan aslinya, jadi pangling saya. Ketika ngobrol dengan Mas Yohan saya bilang pengen ketemu pak Jeff, dia kaget. “Lah, yang kemaren sebelah gue itu Jeff.”&lt;/p&gt;
&lt;p&gt;Akhirnya di hari kedua saya cari dia dan akhirnya ketemu. Pas ketemu saya nge-&lt;em&gt;blank&lt;/em&gt; sampe lupa namanya: &lt;em&gt;“Hey man, my name is Riza. I’m totally blank right now and suddenly forgot your name.&lt;/em&gt;” Untungnya dia dengan baik hati membalas: &lt;em&gt;“My name is Jeff, nice to meet you!”&lt;/em&gt; Setelah itu percakapan berjalan cukup lancar. Tak lupa saya ucapkan terimakasih karena telah menerima saya menjadi GDE dan tak lupa &lt;em&gt;selfie&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_8dKYVqXD9qpBVHiI91e2mg.png&quot; alt=&quot;Akhirnya bisa bertemu Pak Jeff secara langsung&quot; /&gt;&lt;em&gt;Akhirnya bisa bertemu Pak Jeff secara langsung&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Lalu secara tidak sengaja saya berpapasan dengan seseorang dengan tshirt yang menarik perhatian saya. Tulisannya momentum beserta logonya. Oh, saya tahu &lt;a href=&quot;https://momentumdash.com/&quot;&gt;momentum&lt;/a&gt;, sebuah &lt;a href=&quot;https://momentumdash.com/&quot;&gt;chrome extension&lt;/a&gt; yang menampilkan foto-foto indah ketika kita buka tab baru. Tentu setelah itu fiturnya bertambah sebagai salah satu &lt;em&gt;productivity tools&lt;/em&gt; dengan penambahan todo list dan lain sebagainya.&lt;/p&gt;
&lt;p&gt;Ketika berpapasan, saya cuma &lt;em&gt;nyeletuk&lt;/em&gt;: &lt;em&gt;“Nice shirt!”.&lt;/em&gt; Gayung bersambut, dia lantas bertanya: &lt;em&gt;“You knew momentum?!”&lt;/em&gt; dan pembicaraan berlanjut. Dia minta kontak linkedin saya (entah buat apa), dan menawarkan apakah saya mau stiker. Tentu saja saya terima dengan tangan terbuka 🤗&lt;/p&gt;
&lt;p&gt;Tidak lupa saya bertanya tentang strategi monetisasi dari momentum. Saya tidak bisa membayangkan bagaimana mereka bisa menemukan cara untuk monetisasi dari sebuah produk sederhana seperti momentum ini. Ternyata mereka benar-benar ingin menjadi sebuah produk yang membantu orang untuk fokus dan produktif. Mereka menyasar &lt;em&gt;corporate&lt;/em&gt; untuk memberikan &lt;em&gt;best practic&lt;/em&gt;e dan &lt;em&gt;tools berbayar&lt;/em&gt; dalam rangkan meningkatkan produktifitas karyawannya. Keren juga ya…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_-PLXV7dY7mr189OsfH2cZQ.png&quot; alt=&quot;Jason Waterman — Co-founder, CTO Momentum&quot; /&gt;&lt;strong&gt;Jason Waterman — Co-founder, CTO Momentum&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Lalu di hari kedua atau hari terakhir, malam harinya saya diundang oleh tim Chrome untuk penataran tambahan. Tidak semua orang diundang ternyata. Selain dapat makan malam, saya bisa bertemu developer heroes seperti pak &lt;a href=&quot;https://www.linkedin.com/in/bgalbs/&quot;&gt;Ben Galbraith&lt;/a&gt;, pak &lt;a href=&quot;https://www.linkedin.com/in/dalmaer/&quot;&gt;Dion Almaer&lt;/a&gt;, ibu &lt;a href=&quot;https://www.linkedin.com/in/egsweeny/&quot;&gt;Elizabeth Sweeny&lt;/a&gt;, bang &lt;a href=&quot;https://addyosmani.com/&quot;&gt;Addy Osmani&lt;/a&gt; dan om &lt;a href=&quot;https://twitter.com/slightlylate&quot;&gt;Alex Russell&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Saya dan om Alex ngobrol cukup banyak tentang PWA dan betapa &lt;em&gt;bloated&lt;/em&gt;-nya framework-framework JavaScript yang ada sekarang. Ternyata om yang satu ini cukup &lt;em&gt;old school&lt;/em&gt; yang lebih memilih menulis kode dengan vanilla JavaScript saja. Saya ingat banget dia bilang gini: “Once you initialize new project with create-react-app, it’s already bloated!” Benar juga ya, &lt;em&gt;point taken&lt;/em&gt;! Itu bahkan belum kita apa-apain, belum install *redux, routes *dan library lainnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_hAn3urFSLoRJGLGRGk6L3A.png&quot; alt=&quot;Alex Russell — Senior Engineer at Google&quot; /&gt;&lt;em&gt;Alex Russell — Senior Engineer at Google&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Oh iya, buat yang belum kenal dengan om Alex Russell, dia adalah Senior Engineer yang mengerjakan &lt;a href=&quot;http://www.chromium.org/blink&quot;&gt;Blink&lt;/a&gt; engine Chrome, &lt;a href=&quot;http://dojotoolkit.org/&quot;&gt;dojo&lt;/a&gt;, App Cache, Service Worker, &lt;a href=&quot;https://www.webcomponents.org/community/author/alex_russell&quot;&gt;web component&lt;/a&gt;, anggota &lt;a href=&quot;http://www.ecma-international.org/memento/TC39.htm&quot;&gt;ECMA TC39&lt;/a&gt;, anggota &lt;a href=&quot;http://www.w3.org/2001/tag/&quot;&gt;W3C Technical Architecture Group&lt;/a&gt; dan masih banyak lagi. Sangking serunya percakapan kami, acara selesai dan saya tidak sempat &lt;em&gt;say hi&lt;/em&gt; dengan Addy Osmani, &lt;em&gt;damn&lt;/em&gt;! &lt;em&gt;Maybe next time&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Tentang Sesi Chrome Dev Summit&lt;/h2&gt;
&lt;p&gt;Meskipun sesi &lt;em&gt;networking&lt;/em&gt; adalah sesi yang paling seru, bukan artinya sesi talks tidak seru. Banyak sekali pelajaran penting yang saya dapatkan. Mulai dari melihat bagaimana panitia menciptakan alur cerita dan kondisi agar penonton tetap &lt;em&gt;engage&lt;/em&gt; dan terhibur, topik, cara presentasi, hingga &lt;a href=&quot;https://youtu.be/nKtQHxfRVAM?t=20576&quot;&gt;kegagalan pembicara kala membawakan sesi* live code&lt;/a&gt;* dan bagaimana mereka mengatasinya. Meskipun tidak semua sesi dapat saya tonton karena ramai dan beberapa kali tidak kebagian tempat. Dilain kesempatan saya dapat tempat dan secara spontan tertidur dan terbangun ketika sesi berakhir. Apalagi semua &lt;a href=&quot;https://bit.ly/CDS18-AllSessions&quot;&gt;video tersedia di youtube&lt;/a&gt;, jadi saya bisa nonton video-video menarik setelah pulang saja. Berikut beberapa hal yang menarik perhatian saya.&lt;/p&gt;
&lt;h3&gt;Keynote Hari Pertama&lt;/h3&gt;
&lt;p&gt;Tahun 2018 ternyata merupakan ulang tahun &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt; yang ke-10. Tidak hanya itu saja, &lt;a href=&quot;https://www.android.com/&quot;&gt;Android&lt;/a&gt; pun berulangtahun yang ke-10 di tahun ini. Begitupula dengan &lt;a href=&quot;https://v8.dev/&quot;&gt;V8&lt;/a&gt;, &lt;em&gt;engine&lt;/em&gt; JavaScript yang digunakan Chrome, umurnya juga 10 tahun. Lebih jauh, di tahun 2018 ini &lt;a href=&quot;https://google.com/&quot;&gt;Google&lt;/a&gt; sudah berumur 20 tahun saja!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_Sa4zAFsROJdtnioMJROM3Q.png&quot; alt=&quot;Peningkatan Fitur Modern JavaScript di V8&quot; /&gt;&lt;em&gt;Peningkatan Fitur Modern JavaScript di V8&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://v8.dev/&quot;&gt;V8&lt;/a&gt; sudah banyak sekali melakukan optimisasi. Teraktual, mereka berhasil meningkatkan kinerja &lt;em&gt;garbage collector&lt;/em&gt; menjadi lebih cepat 100 kali lipat! Kemudian mereka juga mengoptimalkan beberapa fitur JavaScript modern seperti promise, async/await, array destructuring dan masih banyak optimisasi lainnya. Dan V8 sekarang sudah mendukung &lt;a href=&quot;https://webassembly.org/&quot;&gt;webassembly&lt;/a&gt;. Tentang &lt;a href=&quot;https://webassembly.org/&quot;&gt;webassembly&lt;/a&gt; akan kita bahas di bagian tersendiri nanti.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://medium.com/@addyosmani/the-cost-of-javascript-in-2018-7d8950fbb5d4&quot;&gt;Performance bugdet&lt;/a&gt; juga merupakan salah satu topik yang sangat sering muncul di berbagai sesi dan secara umum tema dari Summit kali ini memang didominasi oleh topik seputar performa.&lt;/p&gt;
&lt;p&gt;Kemudian hadir pembicaraan tentang &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Worker&lt;/a&gt; dan juga &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;Porgressive Web Apps&lt;/a&gt;. Jika teman-teman tertarik untuk belajar Service Worker dengan cara yang menyenangkan, bisa main game &lt;a href=&quot;https://serviceworkies.com/&quot;&gt;serviceworkies.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Untuk lebih detailnya, bisa cek video keynote hari pertama berikut.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/zPHyxvPT0gg&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;h3&gt;Keynote Hari Kedua&lt;/h3&gt;
&lt;p&gt;Hari berikutnya cukup menarik terutama keynote hari kedua. Hal yang cukup menggelitik adalah ketika mbak &lt;a href=&quot;https://www.linkedin.com/in/nicolesullivan&quot;&gt;Nicole Sullivan&lt;/a&gt; mengatakan bahwa &lt;em&gt;framework&lt;/em&gt; terkadang membuat aplikasi kita lambat. Tapi &lt;em&gt;framework&lt;/em&gt; juga harapan utama kita untuk membuat aplikasi kita menjadi lebih cepat. Karena itu duet mbak &lt;a href=&quot;https://www.linkedin.com/in/nicolesullivan&quot;&gt;Nicole&lt;/a&gt; dan juga mas &lt;a href=&quot;https://twitter.com/cramforce&quot;&gt;Malte Ubl&lt;/a&gt; menggarisbawahi beberapa perubahan yang dilakukan &lt;em&gt;framework-framework&lt;/em&gt; untuk membuat performa aplikasi menjadi lebih optimal.&lt;/p&gt;
&lt;p&gt;Pertama ada &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; yang sudah menerapkan &lt;em&gt;code splitting&lt;/em&gt; dan melakukan proses render lebih optimal dengan memecahnya menjadi bagian kecil. Kemudian React juga memperkenalkan &lt;em&gt;lazy mode&lt;/em&gt;, &lt;em&gt;suspense&lt;/em&gt; dan juga konkurensi.&lt;/p&gt;
&lt;p&gt;Selanjutnya ada Angular yang memasukkan performance budget kedalam &lt;a href=&quot;https://cli.angular.io/&quot;&gt;angular-cli&lt;/a&gt;, beberapa &lt;em&gt;polyfill&lt;/em&gt; dibuang dan memperkenalkan &lt;a href=&quot;https://blog.angularindepth.com/inside-ivy-exploring-the-new-angular-compiler-ebf85141cee1?gi=e853685fe5a4&quot;&gt;Ivy&lt;/a&gt;, sebuah kompiler baru untuk membuat Angular view menjadi lebih cepat.&lt;/p&gt;
&lt;p&gt;Framework berikutnya, &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; yang memperkenalkan &lt;em&gt;modern mode&lt;/em&gt; untuk men-&lt;em&gt;deliver&lt;/em&gt; aplikasi web kita ke modern browser saja. Hal ini dapat menghapus beberapa &lt;em&gt;polyfill&lt;/em&gt; yang digunakan dalam rangka mengakomodasi browser &lt;em&gt;jadul&lt;/em&gt;. Vue juga telah melakukan &lt;em&gt;preloading&lt;/em&gt; dan &lt;em&gt;prefetching&lt;/em&gt; secara default.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt;, akan bertransformasi menjadi &lt;a href=&quot;https://lit-element.polymer-project.org/&quot;&gt;lit-element&lt;/a&gt; dalam rangka menerapkan web component yang sangat &lt;em&gt;slim&lt;/em&gt;. Dan, kabar gembiranya, &lt;em&gt;web component&lt;/em&gt; sekarang sudah didukung secara &lt;em&gt;native&lt;/em&gt; di firefox!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_YFeztoPNMcKP-Q808mgZQg.png&quot; alt=&quot;Kompatibilitas Web Components. Dikutip dari https://www.webcomponents.org/&quot; /&gt;&lt;em&gt;Kompatibilitas Web Components. Dikutip dari &lt;a href=&quot;https://www.webcomponents.org/&quot;&gt;https://www.webcomponents.org/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/0_otRMcCbm0f6_rNdY.jpg&quot; alt=&quot;Svelte&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://svelte.technology/&quot;&gt;Svelte&lt;/a&gt;, sebuah &lt;a href=&quot;https://svelte.technology/blog/frameworks-without-the-framework&quot;&gt;framework tanpa framework&lt;/a&gt;, sebuah konsep yang sangat menarik buat saya pribadi. Disini Svelte di-&lt;em&gt;highlight&lt;/em&gt; sebagai sebuah framework yang pada dasarnya sudah sangat cepat, tanpa harus ada optimisasi lebih lanjut. Sederhananya, kita men-&lt;em&gt;develop&lt;/em&gt; aplikasi web dengan &lt;em&gt;framework&lt;/em&gt; Svelte, mungkin ditambah beberapa &lt;em&gt;library&lt;/em&gt; seperti &lt;em&gt;state management&lt;/em&gt;, &lt;em&gt;routes&lt;/em&gt;, dan lain sebagainya. Yang menarik, kemudian kita melakukan kompilasi dengan &lt;em&gt;tools&lt;/em&gt; yang disediakan sehingga hasil akhirnya berupa html, css dan &lt;strong&gt;vanilla JavaScript&lt;/strong&gt; yang bisa berjalan bahkan di browser yang tidak terlalu modern. Dan ukuran yang dihasilkan sangat kecil dan optimal!&lt;/p&gt;
&lt;p&gt;Terakhir &lt;a href=&quot;https://www.emberjs.com/&quot;&gt;Ember&lt;/a&gt;, yang menghapus &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; dari *boilerplate default-*nya. Meskipun bisa ditambahkan jika perlu. Dengan menghapus jQuery, Ember mampu mengurangi ukurannya sebanyak 20% saja! Selain menghapus jQuery, Ember juga melakukan optimasi di bagian &lt;em&gt;rendering&lt;/em&gt;-nya.&lt;/p&gt;
&lt;p&gt;Untuk lebih lengkapnya, berikut video keynote hari kedua.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/SbUAkQ_s7Os&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;h3&gt;Actor Model Untuk Web&lt;/h3&gt;
&lt;p&gt;Actor model adalah sebuah konsep yang berkembang dikalangan komputasi konkurensi yang muncul pertama kali ditahun 1973. Actor model yang paling terkenal diterapkan di bahasa pemrograman &lt;a href=&quot;https://www.erlang.org/&quot;&gt;Erlang&lt;/a&gt;, dan kemudian dilanjutkan oleh &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt;. Kita juga dapat menerapkan konsep ini di bahasa seperti &lt;a href=&quot;https://medium.com/pujanggateknologi/berkenalan-dengan-scala-dd6452596fa6&quot;&gt;scala&lt;/a&gt; dengan memanfaatkan framework seperti &lt;a href=&quot;https://akka.io/&quot;&gt;Akka&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ternyata di web &lt;em&gt;actor model&lt;/em&gt; ini juga cocok diterapkan di web. Mas &lt;a href=&quot;https://twitter.com/dassurma&quot;&gt;Surma&lt;/a&gt; dan mas &lt;a href=&quot;https://twitter.com/aerotwist&quot;&gt;Paul Lewis&lt;/a&gt; dalam sesi yang diberi judul “*Architecting Web Apps — lights, camera, action!” *mendemokan &lt;em&gt;actor model&lt;/em&gt; yang diterapkan disisi web. Misalnya sebuah aplikasi web mempunyai &lt;em&gt;actor&lt;/em&gt;: UI, state, storage dan juga broadcaster. Cukup familiar kan dengan konsep seperti ini? Kalau dipikir-pikir ada sedikit kemiripan dengan Redux. &lt;em&gt;Well&lt;/em&gt;, teman-teman bisa cek langsung &lt;a href=&quot;https://github.com/PolymerLabs/actor-boilerplate&quot;&gt;reponya disini&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Vg60lf92EkM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;h3&gt;Houdini CSS&lt;/h3&gt;
&lt;p&gt;Sesi berikutnya yang menurut saya menarik adalah tentang &lt;a href=&quot;https://wiki.mozilla.org/CSS/Houdini&quot;&gt;Houdini&lt;/a&gt;. Houdini adalah sebuah inisiasi yang isinya sekelompok orang yang ditunjuk oleh konsorsium &lt;a href=&quot;https://www.w3.org/&quot;&gt;w3c&lt;/a&gt; untuk mengembangkan CSS berikutnya. Mereka menciptakan &lt;em&gt;tools&lt;/em&gt; untuk membuat fitur-fitur CSS baru yang saat ini belum diterapkan browser.&lt;/p&gt;
&lt;p&gt;Secara sederhana, Houdini adalah &lt;em&gt;low-level API&lt;/em&gt; JavaScript untuk kebutuhan rendering. Artinya kita bisa mengajari HTML untuk me-&lt;em&gt;render&lt;/em&gt; sesuatu yang belum bisa dilakukan oleh CSS. Memang untuk saat ini belum semua API dan browser mendukung Houdini, tapi kita sudah bisa menggunakan paint API-nya di &lt;a href=&quot;https://ishoudinireadyyet.com/&quot;&gt;Chrome dan Opera&lt;/a&gt;, paling tidak.&lt;/p&gt;
&lt;p&gt;Contohnya ketika kita ingin membuat lingkaran sebagai background dari textarea, kita bisa ‘mengajari’ browser untuk melakukannya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_vmHK2v4dEvQKrZG5xyJoww.png&quot; alt=&quot;Contoh mengajari browser menggambar lingkaran di textarea.&quot; /&gt;&lt;em&gt;Contoh mengajari browser menggambar lingkaran di textarea.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kemudian kita definisikan bagaimana cara membuat lingkaran di &lt;code&gt;circle.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_6wRx6hybqgUlgQ2EoyufvA.png&quot; alt=&quot;Contoh menggambar lingkaran denga JavaScript&quot; /&gt;&lt;em&gt;Contoh menggambar lingkaran denga JavaScript&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Nah, sekarang kita bisa menggunakan &lt;em&gt;circle&lt;/em&gt; tadi di file CSS dengan &lt;code&gt;paint&lt;/code&gt; API yang sudah tersedia di beberapa browser modern.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_8EH9hEb7wYfjuwCrXdndxQ.png&quot; alt=&quot;Memanggil circle di CSS&quot; /&gt;&lt;em&gt;Memanggil circle di CSS&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rizafahmi.com/assets/images/cds/1_Kav2jetOJcCnqXhsAzMAAA.png&quot; alt=&quot;Hasilnya kita bisa menjadikan circle sebagai background dari textarea.&quot; /&gt;&lt;em&gt;Hasilnya kita bisa menjadikan circle sebagai background dari textarea.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Gimana, seru ya?! Bayangkan banyak hal yang bisa kita buat dengan Houdini ini. Untuk lebih jelasnya bisa simak video-nya dibawah ini yang kembali dibawakan oleh abang &lt;a href=&quot;https://twitter.com/dassurma&quot;&gt;Surma&lt;/a&gt;.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/lK3OiJvwgSc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;h3&gt;Sesi WebAssembly&lt;/h3&gt;
&lt;p&gt;Sebenarnya sesi tentang &lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt; ada juga di hari pertama, tapi saya gabungkan saja supaya lebih jelas juga. Saya juga tidak akan terlalu banyak membahas sesinya. Bisa nonton sendiri nanti. Tapi pembahasan saya akan banyak kepada &lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt; itu sendiri.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://webassembly.org/&quot;&gt;WebAssembly&lt;/a&gt; adalah bahasa baru untuk web. Sekarang ini bahasa pemrograman lain dapat menargetkan untuk dikompilasi dan dieksekusi di web dengan bantuan format bahasa wasm atau WebAssembly. Otomatis banyak yang khawatir, gimana nasib JavaScript. Tenang saja, WebAssembly tidak akan menggantikan JavaScript. Justru wasm dan JavaScript akan berjalan beriringan.&lt;/p&gt;
&lt;p&gt;Dengan bantuan wasm, aplikasi berat seperti &lt;a href=&quot;https://web.autocad.com/&quot;&gt;Autocad&lt;/a&gt;, &lt;a href=&quot;https://www.google.com/earth/&quot;&gt;Google Earth&lt;/a&gt; ataupun &lt;a href=&quot;https://www.figma.com/&quot;&gt;Figma&lt;/a&gt; dapat berjalan di web. Ambil contoh &lt;a href=&quot;https://web.autocad.com/&quot;&gt;Autocad&lt;/a&gt;, sebuah aplikasi yang cukup berat yang ditulis dengan C++ sebagai aplikasi desktop. Tanpa banyak perubahan, kode lama dapat dengan mudah dikompilasi ke format wasm dan &lt;em&gt;viola&lt;/em&gt;! Autocad sudah bisa digunakan di web dengan performa yang sama bagusnya dengan versi desktopnya.&lt;/p&gt;
&lt;p&gt;Beberapa bahasa yang sudah bisa dikompilasi ke wasm diantaranya ada C, C++, Rust, dan Lua. Sedangkan Golang, C#, Java, Ruby, Python dan lainnya akan segera menyusul. Dan dukungan dari browser pun sudah mumpuni jadi kita sudah bisa mulai belajar dari sekarang.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/zgOGZgAPUjQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;h2&gt;Kesimpulan&lt;/h2&gt;
&lt;p&gt;Perhelatan yang diselenggarakan oleh Google ini sangat seru. Sesi &lt;em&gt;networking&lt;/em&gt;-nya dengan bertemu developer tingkat dewa yang beberapa adalah idola saya merupakan hal yang buat saya membangkitkan semangat untuk bekerja lebih giat mengejar ketertinggalan dan lebih semangat lagi untuk berbagi ilmu dengan developer di Indonesia. Sesi &lt;em&gt;talks&lt;/em&gt;-nya pun tidak kalah seru yang tentunya bisa kita nikmati bersama-sama melalui video.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3888/1*ldJrzjIXQ5OoJfDz1fbRgw.png&quot; alt=&quot;Bonus: Swaaaagggg!!&quot; /&gt;&lt;em&gt;Bonus: Swaaaagggg!!&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Artikel ini pertama kali dipublikasikan di &lt;a href=&quot;https://medium.com/wwwid/pengalaman-pertama-menghadiri-chrome-dev-summit-f2db2d7a17ae&quot;&gt;Medium WWWID&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Perkenalan ReasonML, Sintaks Baru untuk OCaml</title>
    <link href="https://rizafahmi.com/2018/12/10/perkenalan-reasonml/"/>
    <updated>2018-12-10T00:00:00Z</updated>
    <id>https://rizafahmi.com/2018/12/10/perkenalan-reasonml/</id>
    <content type="html">&lt;p&gt;ReasonML adalah bahasa sintaks, ekstensi dan &lt;em&gt;toolchain&lt;/em&gt; yang berada diatas sebuah bahasa &lt;em&gt;jadul&lt;/em&gt; &lt;a href=&quot;https://ocaml.org/&quot;&gt;OCaml&lt;/a&gt;. Selain dapat dikompilasi ke JavaScript dengan bantuan &lt;a href=&quot;https://bucklescript.github.io/&quot;&gt;BuckleScript&lt;/a&gt;, Reason juga dapat dikompilasi menjadi aplikasi native melalui OCaml. Daripada membuat bahasa baru dari awal, tim Facebook memutuskan untuk membuat sintaks baru dan memperkaya &lt;em&gt;environment&lt;/em&gt; OCaml sehingga menjadi lebih modern dan kekinian. OCaml sendiri sudah digunakan lebih dari 20 tahun dan sudah teruji oleh industri sejak tahun 90-an.&lt;/p&gt;
&lt;p&gt;Jika melihat sintaks Reason saat ini sudah mirip dan menyerupai ES6. Lihat perbandingan dibawah ini antara sintaks OCaml, Reason versi awal dan Reason terbaru. Semakin baru, sintaks nya semaki mirip ES6 atau JavaScript modern.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3860/1*i4DqT6krOCc5JH9Fk9CpmQ.png&quot; alt=&quot;Perbandingan sintaks OCaml, Reason lama, dan Reason terbaru.&quot; /&gt;&lt;em&gt;Perbandingan sintaks OCaml, Reason lama, dan Reason terbaru.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Kenapa Menggunakan Reason&lt;/h2&gt;
&lt;p&gt;Ada beberapa alasan kenapa teman-teman perlu mempertimbangkan Reason sebagai platform yang layak untuk dipelajari. Selain proses kompilasi yang cepat dan sintaks yang familiar, ada beberapa keunggulan lainnya. Berikut beberapa diantaranya.&lt;/p&gt;
&lt;h3&gt;Type System dan &lt;em&gt;Type Inference&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Seperti yang kita ketahui bersama, JavaScript bukanlah bahasa pemrograman yang memiliki &lt;em&gt;type system.&lt;/em&gt; Dan semakin besar basis kode yang kita miliki akan semakin butuh kita akan &lt;em&gt;type system.&lt;/em&gt; Makanya muncul beberapa solusi seperti TypeScript dan juga Flow.&lt;/p&gt;
&lt;p&gt;TypeScript adalah sebuah bahasa pemrograman dari Microsoft yang merupakan &lt;em&gt;subset&lt;/em&gt; dari JavaScript dengan menambahkan &lt;em&gt;type system&lt;/em&gt;. Jadi kita sebenarnya tetap bisa menulis JavaScript didalam file-file TypeScript.&lt;/p&gt;
&lt;p&gt;Begitu juga dengan Flow, sebuah &lt;em&gt;static type checker&lt;/em&gt; untuk JavaScript yang juga berasal dari Facebook. Flow bertindak sebagai anotasi untuk kode JavaScript yang sudah ada. Uniknya, Flow dikembangkan menggunakan OCaml.&lt;/p&gt;
&lt;p&gt;Dibandingkan dengan Reason? Pertama, Reason bukanlah sintaks baru untuk JavaScript. Reason adalah sintaks baru untuk OCaml, baru kemudian dari OCaml dikompilasi ke JavaScript. Kedua, fitur Reason lebih lengkap dan utamanya &lt;em&gt;type system&lt;/em&gt; jauh lebih &lt;strong&gt;solid&lt;/strong&gt; berkat OCaml.&lt;/p&gt;
&lt;p&gt;Dan yang bikin Reason lebih keren lagi adalah fitur &lt;em&gt;type inference&lt;/em&gt;-nya. Reason dapat menebak &lt;em&gt;type&lt;/em&gt; dari kodingan kita tanpa harus mendefinisikan &lt;em&gt;type&lt;/em&gt;-nya satu-per-satu. Dan fitur ini belum dapat ditandingi oleh TypeScript ataupun Flow. Mari kita lihat contohnya di rtop, REPL untuk Reason.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/5760/1*nlpG7UlWXmAhIjF8FbgdyA.png&quot; alt=&quot;Fungsi add menerima dua buah parameter integer dan fungsi add akan me-return integer juga.&quot; /&gt;&lt;em&gt;Fungsi add menerima dua buah parameter integer dan fungsi add akan me-return integer juga.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Seperti bisa dilihat, kita membuat sebuah fungsi dengan nama add yang memiliki parameter a dan b dan menghasilkan penjumlahan a dengan b . Ketika mendeklarasikan fungsi add tersebut, kita tidak sama sekali mendefinisikan tipe data dari a, b dan juga hasil dari fungsi add. Akan tetapi setelah dievaluasi, menghasilkan kode berikut ini: &lt;code&gt;let add: (int, int) =&amp;gt; int = &amp;lt;fun&amp;gt;;&lt;/code&gt;. Artinya Reason dapat menebak bahwa tipe data a, b dan juga hasil dari add adalah integer.&lt;/p&gt;
&lt;p&gt;Mari kita lihat satu contoh &lt;em&gt;type inference&lt;/em&gt; lagi yang lebih keren dengan menggunakan struktur data records.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/4612/1*GvIibB8iZCIUA2q879Bedg.png&quot; alt=&quot;Reason mampu menebak records sesuai properti yang terkandung didalamnya.&quot; /&gt;&lt;em&gt;Reason mampu menebak tipe records sesuai properti yang terkandung didalamnya.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ketika kita mendefinisikan sebuah record, disarankan untuk memberi anotasi atau catatan untuk mengarahkan sebuah variable kepada tipenya. Misalnya &lt;code&gt;let kuririn : person = { age: 31, name: &amp;quot;Kuririn&amp;quot; };&lt;/code&gt;. Disini kita mendefinisikan record baru dengan tipe person seperti yang sudah kita definisikan sebelumnya. Tetapi sebenarnya kita tidak perlu melakukannya, seperti variable chiChi dan piccolo, kita tidak mendefinisikan sebagai tipe person, Reason dapat membedakan tipenya berdasarkan properti yang didefinisikan. Karena chiChi tidak memiliki properti species, maka chiChi dikategorikan sebagai person. Sementara piccolo karena memiliki properti species, maka ia termasuk nonPerson.&lt;/p&gt;
&lt;h3&gt;Pesan Kesalahan yang Manusiawi&lt;/h3&gt;
&lt;p&gt;Dan karena &lt;em&gt;type system&lt;/em&gt; yang solid, Reason dapat menampilkan pesan kesalahan yang cukup detil dan manusiawi. Kita kembali ke contoh fungsi add sebelumnya yang menerima dua parameter integer. Bagaimana jika kita memanggil fungsi tersebut dengan parameter integer dan string?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3596/1*3VpX4PwJLhVS7e5ag_droQ.png&quot; alt=&quot;Pesan kesalahan yang detil dan manusiawi.&quot; /&gt;&lt;em&gt;Pesan kesalahan yang detil dan manusiawi.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dari pesan kesalahan diatas sudah cukup jelas bahwa string “7” merupakan sumber kesalahan, karena diharapkan integer bukan string.&lt;/p&gt;
&lt;p&gt;Jika kita menggunakan JavaScript fungsi tersebut akan dieksekusi dengan baik, meskipun hasilnya salah, yaitu menjadi “67”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*zTMnImlX1yGVpZmAjp1WhA.png&quot; alt=&quot;Bukan pesan kesalahan yang kita dapatkan, akan tetapi bug yang akan muncul jika di JavaScript&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bukan pesan kesalahan yang kita dapatkan, akan tetapi bug yang akan muncul jika di JavaScript&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hal ini cukup berbahaya, JavaScript dapat mengeksekusi pemanggilan fungsi diatas tanpa masalah, akan tetapi hasilnya nge-&lt;em&gt;bug&lt;/em&gt;. Sebagai tambahan, Reason juga dapat mendeteksi &lt;em&gt;typo&lt;/em&gt; atau kesalahan pengetikan. Bayangkan berapa banyak bugs dan &lt;em&gt;typo&lt;/em&gt; yang dapat dihindari.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*6HeGFhbOkfMNG9saWV-FAA.png&quot; alt=&quot;Mendeteksi Typo.&quot; /&gt;&lt;em&gt;Mendeteksi Typo.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Alat Bantu Yang Kompit&lt;/h3&gt;
&lt;p&gt;Meskipun tergolong baru, Reason sudah dilengkapi dengan alat bantu yang tergolong komplit. Hal ini juga terbantu dengan keputusan untuk menggunakan beberapa alat bantu yang sudah ada seperti yarn/npm, babel, create-react-app dan webpack. Sehingga selain melengkapi alat bantu lain, developer yang sudah terbiasa menggunakan yarn/npm dan webpack menjadi lebih mudah mempelajari Reason.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3888/1*eqqXemwsvNxetgfUFemx1Q.png&quot; alt=&quot;Reason ‘meminjam’ beberapa alat bantu yang sudah ada di ekosistem JavaScript&quot; /&gt;&lt;em&gt;Reason ‘meminjam’ beberapa alat bantu yang sudah ada di ekosistem JavaScript&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Kemudahan Adopsi dan Kemudahan Untuk Dikelola&lt;/h3&gt;
&lt;p&gt;Reason berada di &lt;em&gt;sweet spot&lt;/em&gt; antara kemudahan adopsi dan kemudahan untuk dikelola. Dengan sintaks yang lebih familiar, terutama bagi modern JavaScript developer, mempelajari Reason akan menjadi lebih lancar. Dan dengan bantuan Type System dan fitur-fitur lainnya, kemudahan &lt;em&gt;maintenance&lt;/em&gt; pun dapat dicapai. Terutama dalam menghindari &lt;em&gt;bugs&lt;/em&gt; dan kesalahan yang umum terjadi ketika &lt;em&gt;runtime&lt;/em&gt; dipindah ke &lt;em&gt;compile time&lt;/em&gt; sehingga pengguna tidak terkena dampaknya. Ketika kode Reason berhasil dikompilasi, artinya kode kita sudah terbebas dari *silly mistakes *seperti &lt;em&gt;typo&lt;/em&gt; dan lain sebagainya. Jika tidak, maka proses kompilasi gagal.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3840/1*vktrkdYUCyeJQlTfvl7TUA.png&quot; alt=&quot;Grid yang diadaptasi dari talk Jared Forsyth (https://jaredforsyth.com/)&quot; /&gt;&lt;em&gt;Grid yang diadaptasi dari &lt;em&gt;talk&lt;/em&gt; Jared Forsyth (&lt;a href=&quot;https://jaredforsyth.com/&quot;&gt;https://jaredforsyth.com/&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Seperti yang dapat dilihat dari ilustrasi diatas, JavaScript dan ES6 sangat mudah dipelajari. Lain halnya jika kita berbicara *maintenance *kode kita karena JavaScript tidak memiliki type system dan rentan &lt;em&gt;bugs&lt;/em&gt; dan kesalahan. TypeScript masih cenderung mudah dipelajari dan diadopsi. Proses &lt;em&gt;maintenance&lt;/em&gt; kodenya sendiri memang jauh lebih baik daripada JavaScript.&lt;/p&gt;
&lt;p&gt;Dari sisi yang berbeda, maintenance kode di Haskell sangatlah mudah, bahkan jika sudah berjalan, kemungkinan besar kode Haskell tidak perlu dikelola lagi. Akan tetapi Haskell terkenal dengan bahasa yang sulit dimengerti dan dipelajari. Elm adalah versi &lt;em&gt;mainstream&lt;/em&gt; dari Haskell yang juga merupakan bahasa pemrograman yang dapat dikompilasi ke JavaScript.&lt;/p&gt;
&lt;p&gt;Reason berada diposisi yang cukup strategis dimana kemudahan adopsi masih bisa ditoleransi dan kemudahan &lt;em&gt;maintenance&lt;/em&gt; juga masih tergolong cukup baik.&lt;/p&gt;
&lt;h3&gt;Interopabilitas Dengan JavaScript&lt;/h3&gt;
&lt;p&gt;Seperti yang sudah dijelaskan sebelumnya, Reason menggunakan beberapa alat bantu yang juga digunakan oleh JavaScript seperti yarn/npm dan juga webpack. Sehingga ‘jarak’ dengan JavaScript terbilang masih cukup dekat apabila dibandingkan dengan Elm, misalnya.&lt;/p&gt;
&lt;p&gt;Elm, menggunakan ekosistem dan &lt;em&gt;packages&lt;/em&gt; sendiri sehingga cukup menyulitkan apabila kita ingin memanfaatkan &lt;em&gt;library&lt;/em&gt; yang sudah tersedia di npm. Sementara dengan Reason menggunakan &lt;em&gt;library&lt;/em&gt; JavaScript masih sangat memungkinkan.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3212/1*zTSKdzAuvwzi61RQnUV47w.png&quot; alt=&quot;Interopabilitas Reason dengan JavaScript masih cukup dekat.&quot; /&gt;&lt;em&gt;Interopabilitas Reason dengan JavaScript masih cukup dekat.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Komunitas Kecil Tapi Hangat&lt;/h3&gt;
&lt;p&gt;Karena memang masih tergolong baru, komunitas Reason masih cukup kecil untuk ukuran kuantitas, akan tetapi sangat hangat dan fokus.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“The community is small but very focused on delivering a better experience for developers.” &lt;strong&gt;Wojciech Bilicki&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ngga percaya, berikut saya sertakan buktinya. Seorang teman di Facebook mem-post foto ini. Identitas disamarkan, tentunya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/4148/1*gEXMwYk-7bq0LcPYBpHb8A.png&quot; alt=&quot;Disapa oleh Leader Komunitas ketika baru join grup discord.&quot; /&gt;&lt;em&gt;Disapa oleh Leader Komunitas ketika baru join grup discord.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Bayangkan, seorang &lt;a href=&quot;https://twitter.com/_chenglou?lang=en&quot;&gt;Cheng Lou&lt;/a&gt;, yang me-&lt;em&gt;lead&lt;/em&gt; project Reason punya waktu untuk &lt;em&gt;say hi&lt;/em&gt; kepada seseorang yang baru join komunitas adalah sebuah sentuhan yang hangat.&lt;/p&gt;
&lt;h3&gt;Bahasa Fungsional Yang Permisif&lt;/h3&gt;
&lt;p&gt;Reason termasuk kedalam kategori bahasa fungsional nan deklaratif. Namun ia tidak melarang ketika kita ‘terpaksa’ menggunakan beberapa sintaks yang imperatif. Ketika kita kesulitan mendeklarasikan baris kode, kita masih dapat menggunakan &lt;em&gt;for loop&lt;/em&gt; yang imperatif atau bahkan variable pun dapat kita buat &lt;em&gt;mutable&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*RsJilTLJ3joLfNEZG9C1Gw.png&quot; alt=&quot;Penggunaan mutable variable dan imperative loop.&quot; /&gt;&lt;em&gt;Penggunaan mutable variable dan imperative loop.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Jadi misalnya kita sedang belajar functional programming tetapi belum menguasai sepenuhnya, Reason tidak akan menghentikanmu menulis kode yang imperatif seperti diatas, sehingga produktifitas tetap terjaga.&lt;/p&gt;
&lt;h2&gt;Memulai Reason&lt;/h2&gt;
&lt;p&gt;Untuk mulai menggunakan Reason, ada beberapa package yang kita butuhkan. Pertama, kita butuh reason-cli . Karena kita akan membuat aplikasi JavaScript di sisi client, kita juga butuh BuckleScript untuk melakukan kompilasi Reason atau OCaml ke JavaScript. Kedua &lt;em&gt;package&lt;/em&gt; tersebut dapat kita install menggunakan yarn atau npm.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ yarn global add reason-cli
$ yarn global add bs-platform
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk membuat aplikasi sederhana, kita sekarang bisa menggunakan perintah:&lt;/p&gt;
&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;    $ bsb -init nama-app -theme basic-reason&lt;br /&gt;    $ &lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; nama-app&lt;br /&gt;    $ tree&lt;br /&gt;    ./reason-demo/&lt;br /&gt;    ├── .vscode&lt;br /&gt;    ├── src&lt;br /&gt;    │   └── Demo.re&lt;br /&gt;    ├── .gitignore&lt;br /&gt;    ├── README.md&lt;br /&gt;    ├── bsconfig.json&lt;br /&gt;    └── package.json&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mari kita bahas satu-per-satu. Pertama ada folder src yang berisi kode Reason kita. Kemudian ada package.json yang merupakan daftar &lt;em&gt;dependencies&lt;/em&gt; sama seperti project JavaScript ataupun NodeJS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*HCeyWrc1lpvI30BpCB2dbQ.png&quot; alt=&quot;Isi file package.json&quot; /&gt;&lt;em&gt;Isi file package.json&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yang berbeda adalah bsconfig.json yang berisi *dependencies *dan konfigurasi untuk Reason dan BuckleScript seperti definisi source direktori, pengaturan penamaan dan lain sebagainya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*T-UkFOCEFuCCYB5WOTm6yA.png&quot; alt=&quot;Isi file bsconfig.json&quot; /&gt;&lt;em&gt;Isi file bsconfig.json&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sekarang mari kita coba buka file src/Demo.re . Isinya kodenya cukup sederhana, sebuah pesan Hello World.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*G2-tutUVTQOX1K17E-2CCw.png&quot; alt=&quot;Placeholder kode Demo.re&quot; /&gt;&lt;em&gt;Placeholder kode Demo.re&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sekedar informasi, semua modul yang menggunakan Js.* berasal dari BuckleScript. Contohnya Js.log, Js.Promise, Js.then_ dan lain sebagainya. Dan untuk melakukan kompilasi dari Reason menjadi JavaScript, kita tinggal menjalankan perintah berikut.&lt;/p&gt;
&lt;pre class=&quot;language-diff&quot;&gt;&lt;code class=&quot;language-diff&quot;&gt;&lt;span class=&quot;token unchanged&quot;&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   $ yarn build&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   $ tree .&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   .&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── .vscode&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── lib&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   │   └── bs&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── src&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   │   ├── Demo.bs.js&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   │   └── Demo.re&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── .gitignore&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── .merlin&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── README.md&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   ├── bsconfig.json&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;token prefix unchanged&quot;&gt; &lt;/span&gt;&lt;span class=&quot;token line&quot;&gt;   └── package.json&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dan sekarang sudah ada sebuah file baru, Demo.bs.js . Mari kita lihat isinya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*p8VliE5_MXpqGOWqbtKKJw.png&quot; alt=&quot;Hasil kompilasi BuckleScript&quot; /&gt;&lt;em&gt;Hasil kompilasi BuckleScript&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Seperti yang sudah bisa kita tebak, hasilnya adalah console.log . Script ini kemudian dapat kita gabungkan dengan file html, misalnya seperti ini.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*8C-dM0qfhXlGmoH7vSExkA.png&quot; alt=&quot;Load JavaScript file ke HTML&quot; /&gt;&lt;em&gt;Load JavaScript file ke HTML&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dan kita buka file tersebut di browser dan jangan lupa buka &lt;em&gt;chrome console&lt;/em&gt; untuk melihat hasilnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/3112/1*8ySipLVTgIAVtXWMgtZNRQ.png&quot; alt=&quot;Dijalankan di browser&quot; /&gt;&lt;em&gt;Dijalankan di browser&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mari sekarang kita belajar sintaks Reason dengan membuat aplikasi perhitungan sederhana. Sekarang coba kita buat file baru src/Calc.re untuk membuat modul baru dengan nama Calc yang akan kita panggil nantinya dari src/Demo.re. Di Reason, file baru secara otomatis menjadi modul sendiri tanpa perlu export dan import. Mari lihat demonya.&lt;/p&gt;
&lt;h2&gt;Mendeklarasikan Variable dan Fungsi&lt;/h2&gt;
&lt;p&gt;Untuk mendeklarasikan fungsi di Reason, mirip sekali dengan notasi yang biasa kita lihat di JavaScript modern. Dengan menggunakan sintaks let diikuti dengan nama fungsinya, notasi = lalu kemudian diikuti dengan pendefinisian argumen atau parameter dan dilanjutkan dengan tanda &lt;em&gt;arrow&lt;/em&gt; =&amp;gt; terakhir diikuti dengan isi fungsinya. Jika isi fungsinya lebih dari satu baris, harus berada didalam &lt;em&gt;scope&lt;/em&gt; dengan {}. Jika hanya satu baris tidak perlu menggunakan &lt;em&gt;scope {}.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*t8wSThN56mrG-q2smhNjYA.png&quot; alt=&quot;Fungsi add di modul Calc&quot; /&gt;&lt;em&gt;Fungsi add di modul Calc&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Untuk memanggil fungsi add dari file Demo.re kita bisa lakukan dengan cukup mudah. Kita bisa menggunakan notasi titik atau &lt;em&gt;dot&lt;/em&gt;. Reason secara otomatis memahami bahwa fungsi add berada didalam file Calc.re ketika kita memanggil dengan cara Calc.add().&lt;/p&gt;
&lt;p&gt;Dan semua proses deklarasi variable menggunakan let . Lebih luas, let di Reason juga digunakan untuk &lt;em&gt;scoping&lt;/em&gt;, mendeklarasikan fungsi, *pattern matching *dan banyak lagi.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*LAU7t8wv9JrjB2mIjZnPyg.png&quot; alt=&quot;Memanggil modul Calc dan fungsi add dari modul Demo.&quot; /&gt;&lt;em&gt;Memanggil modul Calc dan fungsi add dari modul Demo.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Untuk menjalankannya kita bisa lakukan perintah yarn build terlebih dahulu untuk konversi Reason ke JavaScript baru kemudian file JavaScript-nya kita eksekusi atau buka di file index.html yang sebelumnya sudah kita buat.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2696/1*a-hgRCsAQNb1WktCrl7mIw.png&quot; alt=&quot;Opps, error!&quot; /&gt;&lt;em&gt;Opps, error!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wah, ada &lt;em&gt;error&lt;/em&gt; di file Demo.bs.js di baris ke-empat. Mari kita lihat hasil konversinya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*X1w2p1gQUCcFNBUmVjmLUg.png&quot; alt=&quot;Error require di file Demo.bs.js&quot; /&gt;&lt;em&gt;Error require di file Demo.bs.js&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Terjadi kesalahan di sintaks require. Hal ini terjadi karena browser belum mengerti sintaks exports dan juga require. Kita butuh bantuan &lt;em&gt;bundler&lt;/em&gt; seperti webpack, rollup ataupun parcel agar browser dapat mengeksekusinya. Jika Demo.bs.js kita eksekusi di sisi backend dengan NodeJS, semua bisa berjalan normal karena NodeJS sudah mendukung sintaks require dan juga exports. Mari kita lihat.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2112/1*T9_NyXF8Gam1Z5-PuhZiNQ.png&quot; alt=&quot;Di NodeJS aplikasi berjalan normal&quot; /&gt;&lt;em&gt;Di NodeJS aplikasi berjalan normal&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Karena kita ingin eksekusi di browser, mari kita buat project baru dan kita gunakan parcel sebagai bundler. Alasannya, karena parcel menerapkan &lt;em&gt;zero-configuration&lt;/em&gt; dibandingkan webpack yang harus melakukan konfigurasi terlebih dahulu. Jika belum, mari kita install parcel terlebih dahulu secara global dengan yarn atau npm. Kemudian kita akan buat folder baru untuk project kita dan buat file index.html.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ yarn global add parcel-bundler
$ mkdir reason-parcel
$ cd reason-parcel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*6IHWwR3-_poLDzukl0Vs0g.png&quot; alt=&quot;File index.html&quot; /&gt;&lt;em&gt;File index.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Buat juga file src/index.re dengan isi hello world terlebih dahulu untuk memastikan parcel berjalan sebagaimana mestinya. Kemudian untuk menjalankan, kita tinggal memanggil perintah parcel index.html.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*JKgqgN1dSIHGnUKPB3AIHg.png&quot; alt=&quot;Placeholder index.re&quot; /&gt;&lt;em&gt;Placeholder index.re&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dan kita juga butuh file bsconfig.json sebagai penanda bahwa folder ini adalah project Reason. Kita samakan saja dengan konfigurasi di project sebelumnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*9ExqMLUETZQH39UDGilbCQ.png&quot; alt=&quot;Konfigurasi bsconfig.json&quot; /&gt;&lt;em&gt;Konfigurasi bsconfig.json&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Coba jalankan lagi perintah parcel index.html dan kemungkinan besar akan terjadi error karena project tidak mengetahui keberadaan package bs-platform yang kita install secara global sebelumnya. Dan dari pesan kesalahan seharusnya sudah cukup jelas apa yang harus kita lakukan selanjutnya.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/4288/1*aB5Vpu42Gvtd1eTqqu2x8A.png&quot; alt=&quot;Package bs-platform tidak ditemukan&quot; /&gt;&lt;em&gt;Package bs-platform tidak ditemukan&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kita tinggal menjalankan perintah npm link bs-platform sehingga npm akan me-&lt;em&gt;link&lt;/em&gt; project ini ke package bs-platform yang sudah kita install secara global sebelumnya.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm link bs-platform
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jalankan lagi perintah parcel index.html dan aplikasi kita sudah berjalan di &lt;a href=&quot;http://localhost:1234/&quot;&gt;http://localhost:1234&lt;/a&gt; dan sudah dapat dibuka di browser dan mendapatkan pesan “Hello, world!” di browser console.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*FeU8LIKqPfWwkBslCb5DOw.png&quot; alt=&quot;Parcel sudah berhasil menjalankan project Reason!&quot; /&gt;&lt;em&gt;Parcel sudah berhasil menjalankan project Reason!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sip! Sekarang mari kita buat modul Calc seperti sebelumnya untuk memastikan dapat dieksekusi di browser dengan parcel. Agar berbeda dengan modul Calc sebelumnya, kali ini kita tambahkan &lt;em&gt;type annotation&lt;/em&gt; biar lebih jelas dan akan berguna sebagai dokumentasi juga.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*2MPbvFjQLPv59EIt9f2Exw.png&quot; alt=&quot;Modul Calc dengan fungsi add, dengan type annotation&quot; /&gt;&lt;em&gt;Modul Calc dengan fungsi add, dengan type annotation&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sekarang, mari kita panggil fungsi add tersebut di file index.re sebelumnya. Secara otomatis ketika kita membuat file baru, Reason akan menjadikan file Calc sebagai modul sehingga pemanggilannya dapat dilakukan dengan notasi titik atau &lt;em&gt;dot.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*caekOhKGcbdLlZrhqjqzSg.png&quot; alt=&quot;Melakukan pemanggilan Modul Calc dan fungsi add.&quot; /&gt;&lt;em&gt;Melakukan pemanggilan Modul Calc dan fungsi add.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Hasilnya dapat kita nikmati di console browser seperti berikut.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*GYlHR2jiPuxSGRHcY5wB2A.png&quot; alt=&quot;Hasil pemanggilan fungsi add.&quot; /&gt;&lt;em&gt;Hasil pemanggilan fungsi add.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sekarang mari kita belajar tentang variant dan pattern matching.&lt;/p&gt;
&lt;h2&gt;Variant, Record dan Pattern Matching&lt;/h2&gt;
&lt;p&gt;Variant ini adalah salah satu fitur yang tidak semua bahasa pemrograman punya. JavaScript tidak memiliki fitur ini. Sederhananya, kita bisa membuat struktur data sendiri dengan menggunakan variant. Misalnya kita ingin membuat struktur data spesies yang muncul di komik Dragon Ball.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*nYhg9HX7er4-1ejej1IVLg.png&quot; alt=&quot;Definisi spesies DragonBall&quot; /&gt;&lt;em&gt;Definisi spesies DragonBall&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kemudian jika kita ingin menciptakan karakter baru dengan spesies tertentu, kita bisa definisikan bentuknya dengan struktur data Record. Record ini mirip object di JavaScript dengan beberapa perbedaan: lebih ringan, cepat, immutable, bentuk dan jumlah &lt;em&gt;field&lt;/em&gt; yang baku, harus mendefinisikan tipe datanya.&lt;/p&gt;
&lt;p&gt;Jadi untuk menggunakan record kita harus mendefinisikan tipe data dan bentuknya seperti berikut.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*PKmOQMieB9b6lNGUqpBVpw.png&quot; alt=&quot;Tipe Record characters.&quot; /&gt;&lt;em&gt;Tipe Record characters.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Setelah didefinisikan bentuk dan tipe datanya barulah kita dapat menggunakan record.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*N25teCKUFx-S0gZHLcfNjw.png&quot; alt=&quot;Menggunakan record Bejita dengan tipe record characters.&quot; /&gt;&lt;em&gt;Menggunakan record Bejita dengan tipe record characters.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Dan pattern matching adalah fitur yang sangat powerful. Misalnya untuk contoh diatas, kita ingin mencocokkan apakah karakter yang kita definisikan seorang Namek, Saiya, ataupun yang lain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*LuERyXDd1HHbHEsWN5utOg.png&quot; alt=&quot;Mencocokkan berdasarkan species.&quot; /&gt;&lt;em&gt;Mencocokkan berdasarkan species.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Namun, jika kita lihat di editor, misalnya VS Code atau vim ada peringatan bahwa pattern matching masih ada yang kurang, atau &lt;em&gt;pattern matching is not exhaustive enough&lt;/em&gt;. Hal seperti ini memang diizinkan di bahasa seperti JavaScript. Tapi bahasa dengan &lt;em&gt;strongly typed&lt;/em&gt; biasanya tidak memperbolehkannya. Solusinya kita harus menulis kasus untuk semua spesies. Atau, kita bisa menggunakan notasi &lt;em&gt;underscore&lt;/em&gt; untuk menyatakan &lt;em&gt;else&lt;/em&gt; atau spesies selain Saiyan atau Namekian.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2200/1*pLlJAkEbEfrdsK_xD5leww.png&quot; alt=&quot;Support Other species&quot; /&gt;&lt;em&gt;Support Other species&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Binding dan Interop&lt;/h3&gt;
&lt;p&gt;Seperti yang sudah dijabarkan sebelumnya, interopabilitas Reason dengan JavaScript sangat mudah. Kita bahkan bisa menuliskan sintaks JavaScript dengan bantuan bs.raw().&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*5gpTjelFVz5Hy3IAqJ7xQQ.png&quot; alt=&quot;Interopabilitas dengan bs.raw&quot; /&gt;&lt;em&gt;Interopabilitas dengan bs.raw&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kita juga bisa menulis sintaks JavaScript yang setelah dievaluasi kemudian di &lt;em&gt;binding&lt;/em&gt; ke variable Reason.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*xqMqys9wJyGVdUmbei8q4w.png&quot; alt=&quot;Dari JavaScript di binding ke Reason&quot; /&gt;&lt;em&gt;Dari JavaScript di binding ke Reason&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Atau yang lebih mantap, kita bisa menggunakan fungsi di JavaScript dan kemudian di &lt;em&gt;binding&lt;/em&gt; atau di &lt;em&gt;mapping&lt;/em&gt; ke variable Reason.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2240/1*uRjDitMfTOiCAiTclrqIXQ.png&quot; alt=&quot;Menggunakan fungsi Math.PI JavaScript dan digunakan di Reason.&quot; /&gt;&lt;em&gt;Menggunakan fungsi Math.PI JavaScript dan digunakan di Reason.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Kesimpulan&lt;/h2&gt;
&lt;p&gt;Reason merupakan pilihan menarik karena sintaks-nya yang modern dan pilihan alat bantu yang lengkap. Keunggulan utamanya dari Reason adalah &lt;em&gt;type system&lt;/em&gt; yang sangat &lt;em&gt;powerful&lt;/em&gt; serta bantuan &lt;em&gt;type inference&lt;/em&gt; sehingga kita tidak perlu mendefinisikan semua tipe data. Hal ini sangat membantu teman-teman yang baru belajar sehingga porsi ketikan menjadi lebih sedikit.&lt;/p&gt;
&lt;p&gt;Reason dapat dikompilasi menjadi JavaScript dengan optimal dan hasilnya pun mudah dibaca, namun juga dapat dikompilasi ke &lt;em&gt;bytecode.&lt;/em&gt; Proses kompilasinya cepat dan apabila terjadi kesalahan, pesan kesalahan sangat detil dan “manusiawi”.&lt;/p&gt;
&lt;p&gt;Jadi, tunggu apalagi?! Tidak ada alasan lagi kan untuk tidak memilih Reason?!&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Cara Belajar Pemrograman Yang Cepat dan Efisien</title>
    <link href="https://rizafahmi.com/2018/09/17/cara-belajar-pemrograman/"/>
    <updated>2018-09-17T00:00:00Z</updated>
    <id>https://rizafahmi.com/2018/09/17/cara-belajar-pemrograman/</id>
    <content type="html">&lt;p&gt;Artikel ini akan memaparkan beberapa tips buat teman-teman yang ingin belajar pemorgraman dengan efisien. Seluruh tips disini murni adalah pengalaman pribadi saya, baik yang saya alami sendiri dan juga hasil diskusi dan obrolan dengan teman sesama developer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“I think everybody in this country &lt;strong&gt;should learn how to program&lt;/strong&gt; a computer because it teaches you &lt;strong&gt;how to think&lt;/strong&gt;.” — Steve Jobs dari Apple Inc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Kenapa Belajar Pemrograman&lt;/h2&gt;
&lt;p&gt;Sebelum kita bahas tentang bagaimana cara belajar, alangkah lebih baik jika kita membahas tentang alasan atau motivasi untuk belajar pemrograman. Teman-teman harus menemukan motivasinya sendiri-sendiri terlebih dahulu agar proses belajar bisa lebih lancar dan efisien. Motivasi adalah elemen penting yang seringkali tidak ditemukan ketika ingin belajar pemrograman.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Masih ada yang &lt;strong&gt;ngibul&lt;/strong&gt; dengan bilang belajar ngoding itu gampang? Percayalah, tidak akan pernah mudah tapi bukan berarti mustahil. — Agung Setiawan dari idrails&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kenapa penting? Karena pemrograman itu adalah hal yang tidak mudah. Dan ketika kita mengalami kesulitan dan bertemu rintangan yang sangat tinggi untuk dilewati, motivasilah yang dapat membantu kita untuk tetap melaju.&lt;/p&gt;
&lt;p&gt;Nah buat teman-teman yang sudah dapat motivasi untuk belajar pemrograman, apapun itu bagus. Artinya langkah pertama sudah terlewati. Namun buat teman-teman yang belum menemukan alasan dan motivasi dan kesulitan menemukannya, berikut beberapa hal yang bisa dijadikan motivasi.&lt;/p&gt;
&lt;h3&gt;Pemrograman Itu Sulit Dipelajari&lt;/h3&gt;
&lt;p&gt;Kalau belajar pemrograman itu sulit, terus kenapa kita harus belajar pemrograman? Kenapa tidak?! Justru karena susah itu dapat menjadikan alasan kita belajar pemrograman. Jika mudah, semua orang saat ini sudah &lt;em&gt;ngoding&lt;/em&gt; dan jadi &lt;em&gt;developer&lt;/em&gt;. Karena susah, itulah sebabnya masih banyak kesempatan dan tantangan buat kita untuk menguasai pemrograman.&lt;/p&gt;
&lt;h3&gt;Pemrograman Melatih Logika Dan &lt;em&gt;Problem Solving&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Pemrograman melatih kita mencari masalah dan menemukan solusi atas masalah tersebut. Jika teman-teman ingin mengasah* skill problem solving* yang sangat dibutuhkan di dunia wirausaha atau &lt;em&gt;entrepreneurship&lt;/em&gt;, maka belajar pemrograman merupakan langkah yang tepat. Karena pemrograman esensinya adalah proses menemukan solusi atas masalah yang ditemukan.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Carilah masalah! Ini adalah hal menarik yang harus dilakukan semua orang. Itulah kerjaan gue, mencari masalah. TAPI, tidak berhenti sampai di masalah, kita juga harus mencari solusi atas masalah tersebut. “— Sofian Hadiwijaya dari Warung Pintar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Otomasi Pekerjaan&lt;/h3&gt;
&lt;p&gt;Jika teman-teman punya pekerjaan yang &lt;em&gt;boring&lt;/em&gt;, berulang dan itu-itu saja, kita bisa meminta bantuan kepada komputer untuk mengerjakannya untuk kita, dengan bantuan pemrograman tentunya. Membersihkan data yang kurang berguna, &lt;em&gt;generate&lt;/em&gt; laporan, &lt;em&gt;blast&lt;/em&gt; email dan banyak lagi yang bisa kita lakukan dengan bantuan skill &lt;em&gt;programming&lt;/em&gt; yang kita miliki sehingga dapat membuat pekerjaan kita menjadi lebih ringan.&lt;/p&gt;
&lt;h3&gt;Melatih Kerjasama Tim&lt;/h3&gt;
&lt;p&gt;Cepat atau lambat, suka atau tidak suka di satu titik kita harus berhubungan dengan orang lain. Baik itu teman setim, rekan kerja, atasan, bawahan hingga orang lain yang kita &lt;em&gt;hire&lt;/em&gt; untuk melakukan pekerjaan untuk kita. Percaya atau tidak, belajar pemrograman dapat melatih kita bagaimana cara bekerjasama dengan orang lain, terutama bekerja dengan developer lain. Dengan belajar pemrograman kita jadi dapat setidaknya mengetahui bagaimana pola pikir developer sehingga salah persepsi dan miskomunikasi dapat diminimalisir.
Misalnya teman-teman punya ide produk atau &lt;em&gt;startup&lt;/em&gt; dan ingin meminta pihak ketiga untuk membuat aplikasi untuk kita, akan tetapi kita buta teknologi dan tidak tahu banyak tentang pemrograman harus berhati-hati karena bisa-bisa kita tertipu karena tidak mengetahui teknis, &lt;em&gt;scope&lt;/em&gt; pekerjaan dan juga estimasi biaya yang diminta.&lt;/p&gt;
&lt;h3&gt;Membuat Produk atau Startup Sendiri&lt;/h3&gt;
&lt;p&gt;Developer adalah sosok yang unik. Kita, developer mampu membuat sesuatu yang tidak terbayangkan dari nol. Istilah kerennya, &lt;em&gt;we can make something out of nothing&lt;/em&gt;. Tidak sedikit orang-orang belajar pemrograman hanya untuk menggapai mimpinya memiliki produk sendiri. Jadi berbahagialah kita yang sudah jadi developer, kita sudah memiliki kemampuan membuat sesuatu. Jadi tunggu apalagi?! Buatlah sesuatu dan tunjukkan kepada dunia :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“…I went through 3–4 years thinking I was going to meet some magical engineer who would build all the stuff I was thinking about. But I never met that person, so I taught myself ASP and MS Access out of a book and got to work just hacking stuff together. I’m still a really shitty programmer but I know enough to hack a prototype together.” — Dennis Crowley, co-founder dari Foursquare dan Dodgeball.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Dan buat yang bercita-cita ingin punya produk atau startup sendiri, segeralah belajar pemrograman.&lt;/p&gt;
&lt;h3&gt;Masa Depan Cerah&lt;/h3&gt;
&lt;p&gt;Dunia pemrograman dan &lt;em&gt;software&lt;/em&gt; atau aplikasi sedang dalam masa-masa yang menyenangkan. Software menjadi elemen penting dan krusial di segala sisi kehidupan kita. Mulai dari hiburan dengan &lt;em&gt;smart tv&lt;/em&gt;, pendidikan dengan &lt;em&gt;online learning&lt;/em&gt;, hingga berbagai aplikasi &lt;em&gt;mobile&lt;/em&gt; yang kita konsumsi sehari-hari semuanya bergantung kepada *sofware *atau aplikasi yang dibangun oleh &lt;em&gt;developer&lt;/em&gt;. Sehingga secara tidak langsung developer jadi *‘kecipratan’, *memiliki nilai ekstra karena kemampuannya membuat sesuatu.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Software is eating the world, in all sectors. In the future every company will become a software company.” — Mark Andreessen dari Andreessen-Horowitz VC&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Selain itu, kemampuan &lt;em&gt;programming&lt;/em&gt; dapat juga kita gunakan untuk mencari pekerjaan *freelance *dengan memanfaatkan platform seperti UpWork, Freelancer dan masih banyak lagi. Kesempatan terbuka luas karena seluruh dunia membutuhkan &lt;em&gt;developer&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Bagaimana Cara Belajar Pemrograman&lt;/h2&gt;
&lt;p&gt;Ok sekarang kita masuk ke pokok pembicaraan. Saya akan memberikan langkah-langkah yang sebaiknya ditempuh untuk belajar pemrograman dan beberapa contoh implementasinya.&lt;/p&gt;
&lt;h3&gt;Cari Tahu Gaya Belajar Kamu&lt;/h3&gt;
&lt;p&gt;Ini langkah awal yang sangat penting. Teman-teman harus tahu gaya belajar yang bagaimana yang cocok untuk masing-masing individu. Tidak ada cara yang salah atau benar. Yang salah adalah meniru cara belajar orang lain yang ternyata tidak sesuai dengan gaya belajar kita. Semua orang punya cara belajar masing-masing. Ada yang belajar sangat efektif dengan membaca baik itu membaca buku, dokumentasi, artikel atau bahkan membaca &lt;em&gt;source code&lt;/em&gt; orang.&lt;/p&gt;
&lt;p&gt;Kemudian untuk teman-teman yang punya gaya belajar visual bisa belajar dari video online course seperti Udacity, Udemy atau bahkan &lt;a href=&quot;https://randomscreencast.com/&quot;&gt;video di youtube&lt;/a&gt; yang resource-nya berlimpah baik yang gratisan atau yang berbayar. Yang perlu diingat ketika sebuah video atau online course rasanya &lt;em&gt;ngga nyambung&lt;/em&gt;, jangan dipaksakan. Gaya penyampaian di video pun bervariasi. Ada yang menggunakan pendekatan praktikal, teoritikal, menggunakan studi kasus dan lain sebagainya. Cari saja yang paling cocok dan &lt;em&gt;nyambung&lt;/em&gt; dengan kita.&lt;/p&gt;
&lt;p&gt;Bagaimana dengan teman-teman yang audio? Tentu saja bisa. Teman-teman bisa belajar dari audio books atau &lt;a href=&quot;https://ceritanyadeveloper.com/&quot;&gt;podcast&lt;/a&gt;. Saya adalah salah satu orang yang suka sekali mendengarkan podcast terutama ketika sedang dalam perjalanan dari dan ke kantor. Makanya saya juga memproduksi podcast &lt;a href=&quot;https://ceritanyadeveloper.com/&quot;&gt;https://ceritanyadeveloper.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sekali lagi, tidak ada yang salah dengan cara belajar kita. Dan yang membuat lebih menarik adalah kita juga bisa kombinasikan gaya diatas sehingga &lt;em&gt;learning experience&lt;/em&gt; yang kita dapatkan semakin ‘kaya’. Dan hal ini yang biasa saya lakukan ketika ingin belajar hal baru. Saya biasanya mulai dengan &lt;em&gt;video lessons&lt;/em&gt; ditambah dengan mendengarkan podcast ketika perjalanan dari dan ke kantor. Saya mendengarkan podcast yang berkaitan dengan topik yang ingin saya pelajari. Tidak harus langsung mengerti, yang penting dikonsumsi saja semua dulu. Dan ketika ingin menggali lebih dalam, baru saya mencari dan membaca buku ataupun dokumentasi.&lt;/p&gt;
&lt;h3&gt;Belajar &lt;em&gt;Skill&lt;/em&gt; Dasar atau Fundamental&lt;/h3&gt;
&lt;p&gt;Saya adalah tipe orang yang sangat praktikal dan sangat senang belajar dengan cara yang praktikal pula seperti belajar dari studi kasus ataupun belajar hal baru sambil mengerjakan proyek. Dan apabila teman-teman juga punya gaya yang sama, belajarlah sesuatu sambil memperkuat skill fundamental kita.&lt;/p&gt;
&lt;p&gt;Carilah library atau framework yang tidak hanya bagus untuk dipelajari, tetapi juga mampu mengasah skill fundamental kita. Misalnya saja React membantu saya memperkuat fundamental JavaScript saya. Saya jadi belajar hal-hal menarik seperti filter, map, reduce, binding, arrow function hingga scoping saat saya mendalami React. Dan saya jadi lebih tertarik kepada functional programming gara-gara React dan Redux.&lt;/p&gt;
&lt;p&gt;Begitu juga dengan web framework &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;. Pertama kali belajar &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;, saya menggunakan &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; sebagai web framework pilihan. Tapi karena fundamental &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; saya masih kurang, saya merasa bingung dan kurang mengerti cara kerja Django, &lt;em&gt;it’s just works!&lt;/em&gt; Kemudian saya coba belajar framework lain, &lt;a href=&quot;https://trypyramid.com/&quot;&gt;Pyramid&lt;/a&gt; dan akhirnya bertemu yang cocok di framework &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;. Fundamental saya sangat terasah dengan framework &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt; karena &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt; adalah framework yang isinya sangat minimal. Banyak hal-hal yang harus diurus dan dikerjakan sendiri. Sehingga membantu saya mengerti banyak hal tentang Python itu sendiri. Mungkin banyak orang yang kurang menyukai sebuah framework minimal seperti &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt; atau Express karena banyak hal yang harus dikerjakan sendiri, akan tetapi karena tujuan saya sambil belajar Python hal-hal yang dikerjakan sendiri justru membuat saya jadi lebih mengerti Python dan cara kerja framework tersebut.&lt;/p&gt;
&lt;p&gt;Jadi carilah framework atau library yang selain ok juga mampu mengasah skill dasar kita sebagai developer. Buat saya React dan Flask, buat teman-teman tentu saja bisa berbeda dengan pilihan saya.&lt;/p&gt;
&lt;h3&gt;Super Fokus&lt;/h3&gt;
&lt;p&gt;Nah hal ini yang kadang-kadang luput dari perhatian. Ketika belajar hal baru, sebaiknya kita fokus kepada satu hal di satu waktu, &lt;em&gt;one step at a time.&lt;/em&gt; Jangan langsung belajar semua sekaligus. Misalnya ingin belajar React, ya fokus belajar React saja, ngga usah belajar React Router, Redux dan teman-temannya. Mau belajar Redux, ya fokus belajar Redux-nya saja, bahkan sebisa mungkin belajar Redux tanpa React dulu. Ketika sudah mengerti baru deh digabungkan sehingga &lt;em&gt;learning curve&lt;/em&gt;-nya jadi lebih ringan.&lt;/p&gt;
&lt;p&gt;Begitu juga di sisi &lt;em&gt;backend.&lt;/em&gt; Belajar web framework terlebih dahulu, tanpa database. Setelah dirasa kompeten barulah belajar database dan koneksikan ke web framework tersebut. Intinya jangan belajar banyak hal sekaligus. Satu per satu.&lt;/p&gt;
&lt;h3&gt;Coding setiap hari&lt;/h3&gt;
&lt;p&gt;Langkah berikutnya ya tinggal &lt;em&gt;ngoding&lt;/em&gt; aja sesering mungkin. Tidak masalah bahasa pemrogramannya atau menggunakan framework apa. &lt;a href=&quot;https://medium.com/@rizafahmi22/5-kebiasaan-coding-yang-menjadikan-kamu-super-developer-d577ca5fd05d&quot;&gt;Sempatkan untuk &lt;em&gt;coding&lt;/em&gt; setiap hari&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dengan melakukan latihan &lt;em&gt;coding&lt;/em&gt; setiap hari, kita menjaga momentum, *flow *dan disiplin. Layaknya latihan yang diberikan oleh &lt;a href=&quot;http://www.imdb.com/character/ch0007693/?ref_=tt_cl_t2&quot;&gt;Mr. Miyagi&lt;/a&gt; dalam film &lt;a href=&quot;http://www.imdb.com/title/tt0087538/?ref_=nv_sr_1&quot;&gt;Karate Kid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn-images-1.medium.com/max/2000/1*4hxId3stzepgLLv_GzAgFw.jpeg&quot; alt=&quot;Wax on wax off&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Wax on wax off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Awalnya berat memang. Jika terasa berat, ingat-ingat lagi motivasi kita belajar. Dan teman-teman bisa lihat bagaimana semua orang, bahkan &lt;em&gt;expert&lt;/em&gt; sekalipun pernah mengalaminya.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I failed to learn programming at least 5 times&lt;/p&gt;&amp;mdash; Denny Britz (@dennybritz) &lt;a href=&quot;https://twitter.com/dennybritz/status/899471043135287296?ref_src=twsrc%5Etfw&quot;&gt;August 21, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Everyone is a noob, and if they&amp;#39;re not a noob, they&amp;#39;re a specialist, so they&amp;#39;re just a noob at everything else&lt;/p&gt;&amp;mdash; TJ Holowaychuk 🙃 (@tjholowaychuk) &lt;a href=&quot;https://twitter.com/tjholowaychuk/status/899471710059020288?ref_src=twsrc%5Etfw&quot;&gt;August 21, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot; data-theme=&quot;dark&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;If you&amp;#39;re going to sit there and tell me you never struggled as a programmer, and that you always just got it, I&amp;#39;m calling BS.&lt;/p&gt;&amp;mdash; Preethi Kasireddy (@iam_preethi) &lt;a href=&quot;https://twitter.com/iam_preethi/status/899465568922681345?ref_src=twsrc%5Etfw&quot;&gt;August 21, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Intinya, maju terus, &lt;em&gt;ngoding&lt;/em&gt; terus. Jika masih belum berhasil ulangi lagi dari awal. &lt;em&gt;Ngoding&lt;/em&gt; aja, tidak perlu mencari &lt;em&gt;best practice&lt;/em&gt; untuk tahapan ini. Buat sesuatu, apapun itu. Yang penting teruslah &lt;em&gt;ngoding&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;Berikan Kesempatan Diri&lt;/h3&gt;
&lt;p&gt;Berikan kesempatan diri kita untuk menjadi bodoh, &lt;a href=&quot;https://kadavy.net/blog/posts/permission-to-suck/&quot;&gt;*give yourself permission to suck&lt;/a&gt;*. Tidak masalah kita bodoh dan merasa bodoh, justru kita harus merasa bodoh agar menjadi tidak bodoh lagi di masa depan. Kita akan tetap bodoh hingga kita menjadi bisa dan tidak bodoh lagi :) Dan menjadi bodoh bukanlah masalah. Jangan tanggapi pendapat orang lain.&lt;/p&gt;
&lt;h3&gt;Belajar Secara Imersif&lt;/h3&gt;
&lt;p&gt;Jika kamu belajar sebuah bahasa, coba gunakan bahasa tersebut untuk melakukan apapun. Sulit pasti, terutama diawal tapi ini adalah cara tercepat untuk menguasai sesuatu. Sama saja seperti kita belajar bahasa Inggris misalnya. Akan jauh lebih cepat apabila setiap hari kita menggunakan bahasa Inggris, apalagi jika kita berkesempatan mengunjungi negara yang menggunakan bahasa Inggris.&lt;/p&gt;
&lt;p&gt;Gunakan media belajar sebanyak mungkin, tonton video tutorial, mendengarkan podcast, baca artikel terkait dan lihat bagaimana expert melakukannya sehingga kita juga mendapatkan tambahan motivasi dan inspirasi.&lt;/p&gt;
&lt;h3&gt;Manfaatkan Deadline&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;“A goal is a dream with a deadline” — Napoleon Hill&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tips ini adalah favorit saya. Karena saya bekerja dan belajar sangat efektif dengan &lt;em&gt;deadline&lt;/em&gt;. Ada yang bilang SKS atau sistem kebut semalam adalah hal yang buruk. Buat saya tidak :) Saya adalah procastination sejati ;) Jadi saya butuh deadline untuk &lt;em&gt;pressure.&lt;/em&gt; Apabila saya tidak menetapkan deadline, saya tidak akan pernah selesai belajar atau menyelesaikan pekerjaan saya. Saya akan menunda hingga mendekati deadline. Itulah sebabnya buat saya deadline itu penting.&lt;/p&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;440px&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; id=&quot;player&quot; src=&quot;https://embed.ted.com/talks/tim_urban_inside_the_mind_of_a_master_procrastinator?referrer=https%3A%2F%2Fcdn.embedly.com%2F&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Misalnya ketika skripsi yang seharusnya kita kerjakan selama enam bulan atau satu semester. Bisakah kita kerjakan selama dua bulan atau bahkan dua minggu?! Pasti jawabannya tidak. Tapi ketika kita akan mengerjakannya, biasanya kita menganggap enteng, “Ah, masih enam bulan lagi, santai lah.”. Selang dua bulan “Masih ada empat bulan kok, nge-game dulu aja, nanti setelah itu baru mulai ngerjain skripsi.”. Sisa dua bulan, baru deh panik dan mulai mengerjakan.&lt;/p&gt;
&lt;p&gt;Jadi deadline dapat membantu kita menambah motivasi dan juga fokus. Motivasi jika skripsi tidak kita selesaikan, kita harus menunda rencana wisuda, dan harus membayar uang semester dan lain sebagainya. Sehingga memaksa kita untuk menyelesaikannya apapun yang terjadi, harus selesai. Saya menyebut fenomena ini sebagai &lt;strong&gt;The Power of Kepepet&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Begitu juga dengan belajar. Buatlah sebuah deadline yang jika tidak kita selesaikan pada waktunya ada semacam hukuman atau &lt;em&gt;punishment&lt;/em&gt;. Misalnya apabila saya tidak bisa menguasai React, project yang sedang saya kerjakan tidak akan selesai, dan mengakibatkan uang proyek tidak cair dan lain sebagainya. &lt;strong&gt;The Power of Kepepet&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Jadi untuk belajar pemrograman, tidak ada cara yang benar atau yang salah. Yang ada, cara belajar yang efektif dan tidak efektif. Beberapa hal yang harus diperhatikan ketika akan belajar pemrograman adalah motivasi, carilah cara belajar yang efisien dan efektif versi kamu, belajar hal fundamental, fokus dan terus belajar. Terakhir, jangan lupa set deadline agar kamu mendapatkan motivasi tambahan dan menjadi super s̵a̵i̵y̵a̵ developer.&lt;/p&gt;
&lt;p&gt;Jika teman-teman punya cara atau gaya belajar pemrograman yang menarik dan belum di-&lt;em&gt;mention&lt;/em&gt; di artikel ini, &lt;em&gt;share&lt;/em&gt; dong di kolom komentar. Pasti akan berguna untuk teman-teman yang lain juga.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Machine Learning for Web Developers</title>
    <link href="https://rizafahmi.com/2018/08/20/machine-learning-for-web-developers/"/>
    <updated>2018-08-20T00:00:00Z</updated>
    <id>https://rizafahmi.com/2018/08/20/machine-learning-for-web-developers/</id>
    <content type="html">&lt;p&gt;Berikut adalah cuplikan video sesi yang saya bawakan di event Product Development Conference TechInAsia 2018 di Juli 2018 yang lalu. Kali ini saya membawakan topik yang sedang happening, tentang Machine Learning.&lt;/p&gt;
&lt;p&gt;Sebenarnya kepikiran membawakan topik ini karena pas diundang &lt;a href=&quot;https://www.facebook.com/rizafahmidotcom&quot;&gt;Facebook&lt;/a&gt; ke acara &lt;a href=&quot;https://developers.facebook.com/videos&quot;&gt;F8 Developer Conference&lt;/a&gt; beberapa bulan yang lalu. Disana saya bertemu idola saya &lt;a href=&quot;https://twitter.com/ericnakagawa&quot;&gt;Eric Nakagawa&lt;/a&gt; dan dia menyarankan saya dan developer di Indonesia untuk segera belajar tentang Machine Learning. Karena menurutnya, Artificial Intelligence dan Machine Learning adalah masa depan.&lt;/p&gt;
&lt;p&gt;Untuk cerita lengkapnya bisa baca &lt;a href=&quot;https://medium.com/@rizafahmi22/f8-silicon-valley-trip-day-1-4b501b0bfd8a&quot;&gt;artikel medium&lt;/a&gt; yang saya tulis dalam bentuk serial (&lt;a href=&quot;https://medium.com/@rizafahmi22/f8-san-jose-trip-day-0-c716ed119bc5&quot;&gt;bagian 1&lt;/a&gt;, &lt;a href=&quot;https://medium.com/@rizafahmi22/f8-silicon-valley-trip-day-1-4b501b0bfd8a&quot;&gt;bagian 2&lt;/a&gt;, &lt;a href=&quot;https://medium.com/@rizafahmi22/f8-silicon-valley-day-2-5081ba3d2b16&quot;&gt;bagian 3&lt;/a&gt; dan &lt;a href=&quot;https://medium.com/@rizafahmi22/f8-silicon-valley-trip-day-3-4-159f256fe2b8&quot;&gt;bagian 4&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Tujuan utama dari sesi ini sebenarnya adalah untuk mengajak teman-teman semua belajar bareng sebenarnya :) Saya juga baru mulai belajar Machine Learning dan akan sangat membantu sekali jika ada teman-teman yang kebetulan membaca artikel ini juga tertarik untuk belajar. Karena belajar bareng lebih keren dan lebih efektif. Jadi kalau teman-teman tertarik belajar Machine Learning dan Artificial Intelligence, kirim email ke saya dan mari kita belajar bersama :)&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/uOprsF1ri6k&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;p&gt;&lt;strong&gt;Slide&lt;/strong&gt;: &lt;a href=&quot;https://www.slideshare.net/rizafahmi/machine-learning-for-web-developers&quot;&gt;Slideshare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Repo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rizafahmi/simple-predict-tfjs-vanilla&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Referensi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://js.tensorflow.org/&quot;&gt;https://js.tensorflow.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://course.fast.ai/&quot;&gt;http://course.fast.ai/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://ocdevel.com/podcasts/machine-learning&quot;&gt;http://ocdevel.com/podcasts/machine-learning&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Artikel ini dirangkum dari episode ke-19 &lt;a href=&quot;https://randomscreencast.com/19-ml-for-webdevs&quot;&gt;RandomScreencast&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Tutorial Singkat Tentang Tensorflow.js</title>
    <link href="https://rizafahmi.com/2018/07/25/screencast-singkat-tentang-tensorflow-js/"/>
    <updated>2018-07-25T00:00:00Z</updated>
    <id>https://rizafahmi.com/2018/07/25/screencast-singkat-tentang-tensorflow-js/</id>
    <content type="html">&lt;p&gt;Tensorflow.js adalah sebuah library yang dibangun diatas deeplearn.js untuk membuat modul deep learninglangsung dari web browser! Deep learning sendiri adalah sebuah cabang dari machine learning dan juga artificial intelligence. Dengan Tensorflow.js kita dapat membuat implementasi Convolutional Neural Network (CNN), Recurrent Neural Network (RNN) dan lain sebagainya.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://tensorflow.org/&quot;&gt;Tensorflow&lt;/a&gt; sendiri merupakan library yang ditulis dengan bahasa C++ dan biasanya digunakan dengan bahasa pemrograman Python. Dengan adanya tensorflow.js, kita sekarang sudah bisa menggunakan beberapa fitur tensorflow di sisi web browser tanpa harus dibebani oleh instalasi yang cukup ‘menantang’. Dengan Tensorflow.js kita tinggal melakukan instalasi dengan npm install @tensorflow/tfjs ataupun juga dengan menggunakan CDN.&lt;/p&gt;
&lt;p&gt;Berikut ini adalah cuplikan kode untuk memprediksi harga rumah berdasarkan luas tanah/luas bangunan.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; tf &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;@tensorflow/tfjs&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Define a model for linear regression.&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; model &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tf&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sequential&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tf&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;layers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;dense&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; units&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputShape&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Prepare the model for training: Specify the loss and the optimizer.&lt;/span&gt;&lt;br /&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; loss&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;meanSquaredError&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; optimizer&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;sgd&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Provide some housing data&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; xs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tf&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;tensor1d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;7.9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8.4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; ys &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tf&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;tensor1d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;738967&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;742371&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;750984&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;759598&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;763905&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;755291&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// Train the model using the data provided&lt;/span&gt;&lt;br /&gt;model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;xs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ys&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; form &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;myform&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; inputText &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;inputText&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; predictPlaceholder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;predict&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  form&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;submit&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token comment&quot;&gt;// Use the model to predict or to inference&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; model&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;      tf&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;tensor2d&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputText&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    predictPlaceholder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innerHTML &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;formatting&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Array&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;dataSync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;formatting&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  num &lt;span class=&quot;token operator&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; num&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;\B(?=(\d{3})+(?!\d))&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-flags&quot;&gt;g&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;.&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Untuk mengetahui lebih lanjut silakan simak video berikut ini.&lt;/p&gt;
&lt;center&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/iO_-8c3fqZM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;
&lt;p&gt;&lt;strong&gt;Repo&lt;/strong&gt;: &lt;a href=&quot;https://github.com/rizafahmi/simple-predict-tfjs-vanilla&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Referensi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://js.tensorflow.org/&quot;&gt;https://js.tensorflow.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://parceljs.org/&quot;&gt;https://parceljs.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;http://www.carbondesignsystem.com/&quot;&gt;http://www.carbondesignsystem.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Artikel ini dirangkum dari &lt;a href=&quot;https://randomscreencast.com/18-tensorflowjs/&quot;&gt;episode ke-18 randomscreencast.com&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
